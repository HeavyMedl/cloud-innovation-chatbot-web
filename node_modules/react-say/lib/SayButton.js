"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Composer = _interopRequireDefault(require("./Composer"));

var SayButton =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(SayButton, _React$Component);

  function SayButton(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, SayButton);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SayButton).call(this, props));
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2["default"])(_this));
    _this.state = {
      busy: false,
      id: Date.now() + Math.random()
    };
    return _this;
  }

  (0, _createClass2["default"])(SayButton, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.context.cancel(this.state.id);
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this2 = this;

      var props = this.props,
          state = this.state;
      props.onClick && props.onClick(event);
      this.setState(function () {
        return {
          busy: true
        };
      },
      /*#__PURE__*/
      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return props.context.speak({
                  id: state.id,
                  lang: props.lang,
                  onBoundary: props.onBoundary,
                  onEnd: props.onEnd,
                  onError: props.onError,
                  onStart: props.onStart,
                  pitch: props.pitch,
                  rate: props.rate,
                  text: props.speak,
                  voice: props.voice,
                  volume: props.volume
                });

              case 2:
                _this2.setState(function () {
                  return {
                    busy: false
                  };
                });

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      })));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          disabled = _this$props.disabled,
          busy = this.state.busy;
      return _react["default"].createElement("button", {
        disabled: typeof disabled === 'boolean' ? disabled : busy,
        onClick: this.handleClick
      }, children);
    }
  }]);
  return SayButton;
}(_react["default"].Component);

var SayButtonWithContext = function SayButtonWithContext(props) {
  return _react["default"].createElement(_Composer["default"], {
    speechSynthesis: props.speechSynthesis,
    speechSynthesisUtterance: props.speechSynthesisUtterance
  }, function (context) {
    return _react["default"].createElement(SayButton, (0, _extends2["default"])({
      context: context
    }, props));
  });
};

SayButtonWithContext.propTypes = {
  lang: _propTypes["default"].string,
  onBoundary: _propTypes["default"].func,
  onEnd: _propTypes["default"].func,
  onError: _propTypes["default"].func,
  onStart: _propTypes["default"].func,
  pitch: _propTypes["default"].number,
  rate: _propTypes["default"].number,
  speak: _propTypes["default"].string,
  voice: _propTypes["default"].oneOfType([_propTypes["default"].any, _propTypes["default"].func]),
  volume: _propTypes["default"].number
};
var _default = SayButtonWithContext;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TYXlCdXR0b24uanMiXSwibmFtZXMiOlsiU2F5QnV0dG9uIiwicHJvcHMiLCJoYW5kbGVDbGljayIsImJpbmQiLCJzdGF0ZSIsImJ1c3kiLCJpZCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicmFuZG9tIiwiY29udGV4dCIsImNhbmNlbCIsIm9uQ2xpY2siLCJldmVudCIsInNldFN0YXRlIiwic3BlYWsiLCJsYW5nIiwib25Cb3VuZGFyeSIsIm9uRW5kIiwib25FcnJvciIsIm9uU3RhcnQiLCJwaXRjaCIsInJhdGUiLCJ0ZXh0Iiwidm9pY2UiLCJ2b2x1bWUiLCJjaGlsZHJlbiIsImRpc2FibGVkIiwiUmVhY3QiLCJDb21wb25lbnQiLCJTYXlCdXR0b25XaXRoQ29udGV4dCIsInNwZWVjaFN5bnRoZXNpcyIsInNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImZ1bmMiLCJudW1iZXIiLCJvbmVPZlR5cGUiLCJhbnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztJQUVNQSxTOzs7OztBQUNKLHFCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7QUFDakIscUhBQU1BLEtBQU47QUFFQSxVQUFLQyxXQUFMLEdBQW1CLE1BQUtBLFdBQUwsQ0FBaUJDLElBQWpCLGdEQUFuQjtBQUVBLFVBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxJQUFJLEVBQUUsS0FESztBQUVYQyxNQUFBQSxFQUFFLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxLQUFhQyxJQUFJLENBQUNDLE1BQUw7QUFGTixLQUFiO0FBTGlCO0FBU2xCOzs7OzJDQUVzQjtBQUNyQixXQUFLVCxLQUFMLENBQVdVLE9BQVgsQ0FBbUJDLE1BQW5CLENBQTBCLEtBQUtSLEtBQUwsQ0FBV0UsRUFBckM7QUFDRDs7O2tDQUVhO0FBQUE7O0FBQUEsVUFDSkwsS0FESSxHQUNhLElBRGIsQ0FD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YztBQVMvQlgsRUFBQUEsS0FBSyxFQUFFVSxzQkFBVUksU0FBVixDQUFvQixDQUFDSixzQkFBVUssR0FBWCxFQUFnQkwsc0JBQVVFLElBQTFCLENBQXBCLENBVHdCO0FBVS9CWCxFQUFBQSxNQUFNLEVBQUVTLHNCQUFVRztBQVZhLENBQWpDO2VBYWVQLG9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDb21wb3NlciBmcm9tICcuL0NvbXBvc2VyJztcblxuY2xhc3MgU2F5QnV0dG9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLmhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGJ1c3k6IGZhbHNlLFxuICAgICAgaWQ6IERhdGUubm93KCkgKyBNYXRoLnJhbmRvbSgpXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMucHJvcHMuY29udGV4dC5jYW5jZWwodGhpcy5zdGF0ZS5pZCk7XG4gIH1cblxuICBoYW5kbGVDbGljaygpIHtcbiAgICBjb25zdCB7IHByb3BzLCBzdGF0ZSB9ID0gdGhpcztcblxuICAgIHByb3BzLm9uQ2xpY2sgJiYgcHJvcHMub25DbGljayhldmVudCk7XG5cbiAgICB0aGlzLnNldFN0YXRlKCgpID0+ICh7IGJ1c3k6IHRydWUgfSksIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHByb3BzLmNvbnRleHQuc3BlYWsoe1xuICAgICAgICBpZDogc3RhdGUuaWQsXG4gICAgICAgIGxhbmc6IHByb3BzLmxhbmcsXG4gICAgICAgIG9uQm91bmRhcnk6IHByb3BzLm9uQm91bmRhcnksXG4gICAgICAgIG9uRW5kOiBwcm9wcy5vbkVuZCxcbiAgICAgICAgb25FcnJvcjogcHJvcHMub25FcnJvcixcbiAgICAgICAgb25TdGFydDogcHJvcHMub25TdGFydCxcbiAgICAgICAgcGl0Y2g6IHByb3BzLnBpdGNoLFxuICAgICAgICByYXRlOiBwcm9wcy5yYXRlLFxuICAgICAgICB0ZXh0OiBwcm9wcy5zcGVhayxcbiAgICAgICAgdm9pY2U6IHByb3BzLnZvaWNlLFxuICAgICAgICB2b2x1bWU6IHByb3BzLnZvbHVtZVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHtcbiAgICAgICAgYnVzeTogZmFsc2VcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBwcm9wczogeyBjaGlsZHJlbiwgZGlzYWJsZWQgfSxcbiAgICAgIHN0YXRlOiB7IGJ1c3kgfVxuICAgIH0gPSB0aGlzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAgZGlzYWJsZWQ9eyB0eXBlb2YgZGlzYWJsZWQgPT09ICdib29sZWFuJyA/IGRpc2FibGVkIDogYnVzeSB9XG4gICAgICAgIG9uQ2xpY2s9eyB0aGlzLmhhbmRsZUNsaWNrIH1cbiAgICAgID5cbiAgICAgICAgeyBjaGlsZHJlbiB9XG4gICAgICA8L2J1dHRvbj5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IFNheUJ1dHRvbldpdGhDb250ZXh0ID0gcHJvcHMgPT5cbiAgPENvbXBvc2VyXG4gICAgc3BlZWNoU3ludGhlc2lzPXsgcHJvcHMuc3BlZWNoU3ludGhlc2lzIH1cbiAgICBzcGVlY2hTeW50aGVzaXNVdHRlcmFuY2U9eyBwcm9wcy5zcGVlY2hTeW50aGVzaXNVdHRlcmFuY2UgfVxuICA+XG4gICAgeyBjb250ZXh0ID0+XG4gICAgICA8U2F5QnV0dG9uIGNvbnRleHQ9eyBjb250ZXh0IH0geyAuLi5wcm9wcyB9IC8+XG4gICAgfVxuICA8L0NvbXBvc2VyPlxuXG5TYXlCdXR0b25XaXRoQ29udGV4dC5wcm9wVHlwZXMgPSB7XG4gIGxhbmc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uQm91bmRhcnk6IFByb3BUeXBlcy5mdW5jLFxuICBvbkVuZDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRXJyb3I6IFByb3BUeXBlcy5mdW5jLFxuICBvblN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgcGl0Y2g6IFByb3BUeXBlcy5udW1iZXIsXG4gIHJhdGU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNwZWFrOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2b2ljZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFueSwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgdm9sdW1lOiBQcm9wVHlwZXMubnVtYmVyXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTYXlCdXR0b25XaXRoQ29udGV4dFxuIl19