"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

var SayPrimitive =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(SayPrimitive, _React$Component);

  function SayPrimitive(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, SayPrimitive);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SayPrimitive).call(this, props));
    _this.handleBoundary = _this.handleBoundary.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleEnd = _this.handleEnd.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleError = _this.handleError.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleStart = _this.handleStart.bind((0, _assertThisInitialized2["default"])(_this));
    _this.state = {
      id: Date.now() + Math.random()
    };
    return _this;
  }

  (0, _createClass2["default"])(SayPrimitive, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // TODO: Should dequeue self on unmount
      this.unmounted = true;
      this.props.context.cancel(this.state.id)["catch"](function (err) {
        return 0;
      });
    }
  }, {
    key: "handleBoundary",
    value: function handleBoundary(event) {
      !this.unmounted && this.props.onBoundary && this.props.onBoundary(event);
    }
  }, {
    key: "handleEnd",
    value: function handleEnd(event) {
      !this.unmounted && this.props.onEnd && this.props.onEnd(event);
    }
  }, {
    key: "handleError",
    value: function handleError(event) {
      !this.unmounted && this.props.onError && this.props.onError(event);
    }
  }, {
    key: "handleStart",
    value: function handleStart(event) {
      !this.unmounted && this.props.onStart && this.props.onStart(event);
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.speak !== this.props.speak;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        var _this2$props, context, lang, pitch, rate, text, voice, volume, id;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this2$props = _this2.props, context = _this2$props.context, lang = _this2$props.lang, pitch = _this2$props.pitch, rate = _this2$props.rate, text = _this2$props.speak, voice = _this2$props.voice, volume = _this2$props.volume;
                id = _this2.state.id;
                context.speak({
                  id: id,
                  lang: lang,
                  onBoundary: _this2.handleBoundary,
                  onEnd: _this2.handleEnd,
                  onError: _this2.handleError,
                  onStart: _this2.handleStart,
                  pitch: pitch,
                  rate: rate,
                  text: text,
                  voice: voice,
                  volume: volume
                });

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))()["catch"](function (err) {
        return console.error(err);
      });
      return false;
    }
  }]);
  return SayPrimitive;
}(_react["default"].Component);

var SayPrimitiveWithContext = function SayPrimitiveWithContext(props) {
  return _react["default"].createElement(_Context["default"].Consumer, null, function (context) {
    return _react["default"].createElement(SayPrimitive, (0, _extends2["default"])({
      context: context
    }, props), props.children);
  });
};

SayPrimitiveWithContext.propTypes = {
  lang: _propTypes["default"].string,
  pitch: _propTypes["default"].number,
  rate: _propTypes["default"].number,
  onBoundary: _propTypes["default"].func,
  onEnd: _propTypes["default"].func,
  onError: _propTypes["default"].func,
  onStart: _propTypes["default"].func,
  speak: _propTypes["default"].string,
  voice: _propTypes["default"].oneOfType([_propTypes["default"].any, _propTypes["default"].func]),
  volume: _propTypes["default"].number
};
var _default = SayPrimitiveWithContext;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TYXlQcmltaXRpdmUuanMiXSwibmFtZXMiOlsiU2F5UHJpbWl0aXZlIiwicHJvcHMiLCJoYW5kbGVCb3VuZGFyeSIsImJpbmQiLCJoYW5kbGVFbmQiLCJoYW5kbGVFcnJvciIsImhhbmRsZVN0YXJ0Iiwic3RhdGUiLCJpZCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicmFuZG9tIiwidW5tb3VudGVkIiwiY29udGV4dCIsImNhbmNlbCIsImVyciIsImV2ZW50Iiwib25Cb3VuZGFyeSIsIm9uRW5kIiwib25FcnJvciIsIm9uU3RhcnQiLCJuZXh0UHJvcHMiLCJzcGVhayIsImxhbmciLCJwaXRjaCIsInJhdGUiLCJ0ZXh0Iiwidm9pY2UiLCJ2b2x1bWUiLCJjb25zb2xlIiwiZXJyb3IiLCJSZWFjdCIsIkNvbXBvbmVudCIsIlNheVByaW1pdGl2ZVdpdGhDb250ZXh0IiwiY2hpbGRyZW4iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJmdW5jIiwib25lT2ZUeXBlIiwiYW55Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7SUFFTUEsWTs7Ozs7QUFDSix3QkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBO0FBQ2pCLHdIQUFNQSxLQUFOO0FBRUEsVUFBS0MsY0FBTCxHQUFzQixNQUFLQSxjQUFMLENBQW9CQyxJQUFwQixnREFBdEI7QUFDQSxVQUFLQyxTQUFMLEdBQWlCLE1BQUtBLFNBQUwsQ0FBZUQsSUFBZixnREFBakI7QUFDQSxVQUFLRSxXQUFMLEdBQW1CLE1BQUtBLFdBQUwsQ0FBaUJGLElBQWpCLGdEQUFuQjtBQUNBLFVBQUtHLFdBQUwsR0FBbUIsTUFBS0EsV0FBTCxDQUFpQkgsSUFBakIsZ0RBQW5CO0FBRUEsVUFBS0ksS0FBTCxHQUFhO0FBQUVDLE1BQUFBLEVBQUUsRUFBRUMsSUFBSSxDQUFDQyxHQUFMLEtBQWFDLElBQUksQ0FBQ0MsTUFBTDtBQUFu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S0FBSyxDQUFDa0MsUUFKVixDQURPO0FBQUEsR0FEWCxDQURtQztBQUFBLENBQXJDOztBQVlBRCx1QkFBdUIsQ0FBQ0UsU0FBeEIsR0FBb0M7QUFDbENaLEVBQUFBLElBQUksRUFBRWEsc0JBQVVDLE1BRGtCO0FBRWxDYixFQUFBQSxLQUFLLEVBQUVZLHNCQUFVRSxNQUZpQjtBQUdsQ2IsRUFBQUEsSUFBSSxFQUFFVyxzQkFBVUUsTUFIa0I7QUFJbENyQixFQUFBQSxVQUFVLEVBQUVtQixzQkFBVUcsSUFKWTtBQUtsQ3JCLEVBQUFBLEtBQUssRUFBRWtCLHNCQUFVRyxJQUxpQjtBQU1sQ3BCLEVBQUFBLE9BQU8sRUFBRWlCLHNCQUFVRyxJQU5lO0FBT2xDbkIsRUFBQUEsT0FBTyxFQUFFZ0Isc0JBQVVHLElBUGU7QUFRbENqQixFQUFBQSxLQUFLLEVBQUVjLHNCQUFVQyxNQVJpQjtBQVNsQ1YsRUFBQUEsS0FBSyxFQUFFUyxzQkFBVUksU0FBVixDQUFvQixDQUFDSixzQkFBVUssR0FBWCxFQUFnQkwsc0JBQVVHLElBQTFCLENBQXBCLENBVDJCO0FBVWxDWCxFQUFBQSxNQUFNLEVBQUVRLHNCQUFVRTtBQVZnQixDQUFwQztlQWFlTCx1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQ29udGV4dCBmcm9tICcuL0NvbnRleHQnO1xuXG5jbGFzcyBTYXlQcmltaXRpdmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuaGFuZGxlQm91bmRhcnkgPSB0aGlzLmhhbmRsZUJvdW5kYXJ5LmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVFbmQgPSB0aGlzLmhhbmRsZUVuZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlRXJyb3IgPSB0aGlzLmhhbmRsZUVycm9yLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVTdGFydCA9IHRoaXMuaGFuZGxlU3RhcnQuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7IGlkOiBEYXRlLm5vdygpICsgTWF0aC5yYW5kb20oKSB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgLy8gVE9ETzogU2hvdWxkIGRlcXVldWUgc2VsZiBvbiB1bm1vdW50XG4gICAgdGhpcy51bm1vdW50ZWQgPSB0cnVlO1xuXG4gICAgdGhpcy5wcm9wcy5jb250ZXh0LmNhbmNlbCh0aGlzLnN0YXRlLmlkKS5jYXRjaChlcnIgPT4gMCk7XG4gIH1cblxuICBoYW5kbGVCb3VuZGFyeShldmVudCkge1xuICAgICF0aGlzLnVubW91bnRlZCAmJiB0aGlzLnByb3BzLm9uQm91bmRhcnkgJiYgdGhpcy5wcm9wcy5vbkJvdW5kYXJ5KGV2ZW50KTtcbiAgfVxuXG4gIGhhbmRsZUVuZChldmVudCkge1xuICAgICF0aGlzLnVubW91bnRlZCAmJiB0aGlzLnByb3BzLm9uRW5kICYmIHRoaXMucHJvcHMub25FbmQoZXZlbnQpO1xuICB9XG5cbiAgaGFuZGxlRXJyb3IoZXZlbnQpIHtcbiAgICAhdGhpcy51bm1vdW50ZWQgJiYgdGhpcy5wcm9wcy5vbkVycm9yICYmIHRoaXMucHJvcHMub25FcnJvcihldmVudCk7XG4gIH1cblxuICBoYW5kbGVTdGFydChldmVudCkge1xuICAgICF0aGlzLnVubW91bnRlZCAmJiB0aGlzLnByb3BzLm9uU3RhcnQgJiYgdGhpcy5wcm9wcy5vblN0YXJ0KGV2ZW50KTtcbiAgfVxuXG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMpIHtcbiAgICByZXR1cm4gbmV4dFByb3BzLnNwZWFrICE9PSB0aGlzLnByb3BzLnNwZWFrO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIChhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbnRleHQsIGxhbmcsIHBpdGNoLCByYXRlLCBzcGVhazogdGV4dCwgdm9pY2UsIHZvbHVtZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHsgaWQgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgIGNvbnRleHQuc3BlYWsoe1xuICAgICAgICBpZCxcbiAgICAgICAgbGFuZyxcbiAgICAgICAgb25Cb3VuZGFyeTogdGhpcy5oYW5kbGVCb3VuZGFyeSxcbiAgICAgICAgb25FbmQ6IHRoaXMuaGFuZGxlRW5kLFxuICAgICAgICBvbkVycm9yOiB0aGlzLmhhbmRsZUVycm9yLFxuICAgICAgICBvblN0YXJ0OiB0aGlzLmhhbmRsZVN0YXJ0LFxuICAgICAgICBwaXRjaCxcbiAgICAgICAgcmF0ZSxcbiAgICAgICAgdGV4dCxcbiAgICAgICAgdm9pY2UsXG4gICAgICAgIHZvbHVtZVxuICAgICAgfSk7XG4gICAgfSkoKS5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5jb25zdCBTYXlQcmltaXRpdmVXaXRoQ29udGV4dCA9IHByb3BzID0+XG4gIDxDb250ZXh0LkNvbnN1bWVyPlxuICAgIHsgY29udGV4dCA9PlxuICAgICAgPFNheVByaW1pdGl2ZVxuICAgICAgICBjb250ZXh0PXsgY29udGV4dCB9XG4gICAgICAgIHsgLi4ucHJvcHMgfVxuICAgICAgPlxuICAgICAgICB7IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvU2F5UHJpbWl0aXZlPlxuICAgIH1cbiAgPC9Db250ZXh0LkNvbnN1bWVyPlxuXG5TYXlQcmltaXRpdmVXaXRoQ29udGV4dC5wcm9wVHlwZXMgPSB7XG4gIGxhbmc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHBpdGNoOiBQcm9wVHlwZXMubnVtYmVyLFxuICByYXRlOiBQcm9wVHlwZXMubnVtYmVyLFxuICBvbkJvdW5kYXJ5OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25FbmQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkVycm9yOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TdGFydDogUHJvcFR5cGVzLmZ1bmMsXG4gIHNwZWFrOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2b2ljZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFueSwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgdm9sdW1lOiBQcm9wVHlwZXMubnVtYmVyXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTYXlQcmltaXRpdmVXaXRoQ29udGV4dFxuIl19