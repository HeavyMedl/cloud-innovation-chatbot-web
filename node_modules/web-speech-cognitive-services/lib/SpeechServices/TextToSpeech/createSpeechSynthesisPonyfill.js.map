{"version":3,"sources":["../../../src/SpeechServices/TextToSpeech/createSpeechSynthesisPonyfill.js"],"names":["DEFAULT_OUTPUT_FORMAT","TOKEN_EXPIRATION","TOKEN_EARLY_RENEWAL","authorizationToken","ponyfill","AudioContext","window","webkitAudioContext","region","subscriptionKey","console","warn","fetchMemoizedAuthorizationToken","arg","prevArg","now","SpeechSynthesis","outputFormat","queue","AudioContextQueue","stop","pause","resume","utterance","SpeechSynthesisUtterance","Error","Promise","resolve","reject","addEventListener","Date","preload","push","speaking","DOMEventEmitter","speechSynthesis"],"mappings":"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","sourcesContent":["import memoize from 'memoize-one';\n\nimport AudioContextQueue from './AudioContextQueue';\nimport DOMEventEmitter from '../../Util/DOMEventEmitter';\nimport fetchAuthorizationToken from '../fetchAuthorizationToken';\nimport fetchVoices from './fetchVoices';\nimport SpeechSynthesisUtterance from './SpeechSynthesisUtterance';\n\n// Supported output format can be found at https://docs.microsoft.com/en-us/azure/cognitive-services/Speech/API-Reference-REST/BingVoiceOutput#Subscription\nconst DEFAULT_OUTPUT_FORMAT = 'audio-16khz-128kbitrate-mono-mp3';\n\nconst TOKEN_EXPIRATION = 600000;\nconst TOKEN_EARLY_RENEWAL = 60000;\n\nexport default async ({\n  authorizationToken,\n  ponyfill = {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n  },\n  region = 'westus',\n  subscriptionKey\n}) => {\n  if (!authorizationToken && !subscriptionKey) {\n    console.warn('Either authorization token or subscription key must be specified');\n\n    return {};\n  } else if (!ponyfill.AudioContext) {\n    console.warn('This browser does not support Web Audio and it will not work with Cognitive Services Speech Services.');\n\n    return {};\n  }\n\n  const fetchMemoizedAuthorizationToken = memoize(\n    ({ region, subscriptionKey }) => fetchAuthorizationToken({ region, subscriptionKey }),\n    (arg, prevArg) => (\n      arg.region === prevArg.region\n      && arg.subscriptionKey === prevArg.subscriptionKey\n      && arg.now - prevArg.now < TOKEN_EXPIRATION - TOKEN_EARLY_RENEWAL\n    )\n  );\n\n  class SpeechSynthesis extends DOMEventEmitter {\n    constructor() {\n      super(['voiceschanged']);\n\n      this.outputFormat = DEFAULT_OUTPUT_FORMAT;\n      this.queue = new AudioContextQueue(ponyfill);\n    }\n\n    cancel() {\n      this.queue.stop();\n    }\n\n    getVoices() {\n      return fetchVoices();\n    }\n\n    pause() {\n      this.queue.pause();\n    }\n\n    resume() {\n      this.queue.resume();\n    }\n\n    speak(utterance) {\n      if (!(utterance instanceof SpeechSynthesisUtterance)) {\n        throw new Error('invalid utterance');\n      }\n\n      return new Promise(async (resolve, reject) => {\n        utterance.addEventListener('end', resolve);\n        utterance.addEventListener('error', reject);\n\n        utterance.authorizationToken =\n          typeof authorizationToken === 'function' ?\n            await authorizationToken()\n          : authorizationToken ?\n            await authorizationToken\n          : await fetchMemoizedAuthorizationToken({\n            now: Date.now,\n            region,\n            subscriptionKey\n          });\n        utterance.region = region;\n        utterance.outputFormat = this.outputFormat;\n        utterance.preload();\n\n        this.queue.push(utterance);\n      });\n    }\n\n    get speaking() {\n      return this.queue.speaking;\n    }\n  }\n\n  return {\n    speechSynthesis: new SpeechSynthesis(),\n    SpeechSynthesisUtterance\n  };\n}\n"],"file":"createSpeechSynthesisPonyfill.js"}