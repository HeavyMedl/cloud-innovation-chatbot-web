{"version":3,"sources":["../../../src/BingSpeech/TextToSpeech/fetchSpeechData.js"],"names":["DEFAULT_LANGUAGE","DEFAULT_VOICE","SYNTHESIS_URL","fetchSpeechData","authorizationToken","lang","outputFormat","pitch","rate","text","voice","volume","ssml","fetch","headers","Authorization","method","body","res","status","Error","arrayBuffer"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,gBAAgB,GAAG,OAAzB;AACA,IAAMC,aAAa,GAAG,gEAAtB;AACA,IAAMC,aAAa,GAAG,6CAAtB;;SAE8BC,e;;;;;;;4BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,kBADa,QACbA,kBADa,mBAEbC,IAFa,EAEbA,IAFa,0BAENL,gBAFM,cAGbM,YAHa,QAGbA,YAHa,EAIbC,KAJa,QAIbA,KAJa,EAKbC,IALa,QAKbA,IALa,EAMbC,IANa,QAMbA,IANa,oBAObC,KAPa,EAObA,KAPa,2BAOLT,aAPK,eAQbU,MARa,QAQbA,MARa;AAUPC,YAAAA,IAVO,GAUA,wBAAU;AAAEP,cAAAA,IAAI,EAAJA,IAAF;AAAQE,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,IAAI,EAAJA,IAAf;AAAqBC,cAAAA,IAAI,EAAJA,IAArB;AAA2BC,cAAAA,KAAK,EAALA,KAA3B;AAAkCC,cAAAA,MAAM,EAANA;AAAlC,aAAV,CAVA;AAAA;AAAA,mBAYKE,KAAK,CAACX,aAAD,EAAgB;AACrCY,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAaX,kBAAb,CADN;AAEP,gCAAgB,sBAFT;AAGP,4CAA4BE;AAHrB,eAD4B;AAMrCU,cAAAA,MAAM,EAAE,MAN6B;AAOrCC,cAAAA,IAAI,EAAEL;AAP+B,aAAhB,CAZV;;AAAA;AAYPM,YAAAA,GAZO;;AAAA,kBAsBTA,GAAG,CAACC,MAAJ,KAAe,GAtBN;AAAA;AAAA;AAAA;;AAAA,kBAuBL,IAAIC,KAAJ,sDAAyDF,GAAG,CAACC,MAA7D,EAvBK;;AAAA;AAAA,6CA0BND,GAAG,CAACG,WAAJ,EA1BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import buildSSML from './buildSSML';\n\nconst DEFAULT_LANGUAGE = 'en-US';\nconst DEFAULT_VOICE = 'Microsoft Server Speech Text to Speech Voice (en-US, JessaRUS)'\nconst SYNTHESIS_URL = 'https://speech.platform.bing.com/synthesize';\n\nexport default async function fetchSpeechData({\n  authorizationToken,\n  lang = DEFAULT_LANGUAGE,\n  outputFormat,\n  pitch,\n  rate,\n  text,\n  voice = DEFAULT_VOICE,\n  volume\n}) {\n  const ssml = buildSSML({ lang, pitch, rate, text, voice, volume });\n\n  const res = await fetch(SYNTHESIS_URL, {\n    headers: {\n      Authorization: `Bearer ${ authorizationToken }`,\n      'Content-Type': 'application/ssml+xml',\n      'X-Microsoft-OutputFormat': outputFormat\n    },\n    method: 'POST',\n    body: ssml\n  });\n\n  if (res.status !== 200) {\n    throw new Error(`Failed to syntheis speech, server returned ${ res.status }`);\n  }\n\n  return res.arrayBuffer();\n}\n"],"file":"fetchSpeechData.js"}