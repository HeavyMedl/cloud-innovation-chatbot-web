{"version":3,"sources":["../../../src/BingSpeech/TextToSpeech/createSpeechSynthesisPonyfill.js"],"names":["DEFAULT_OUTPUT_FORMAT","TOKEN_EXPIRATION","TOKEN_EARLY_RENEWAL","authorizationToken","ponyfill","AudioContext","window","webkitAudioContext","subscriptionKey","console","warn","fetchMemoizedAuthorizationToken","arg","prevArg","now","SpeechSynthesis","outputFormat","queue","AudioContextQueue","stop","pause","resume","utterance","SpeechSynthesisUtterance","Error","Promise","resolve","reject","addEventListener","Date","preload","push","speaking","DOMEventEmitter","speechSynthesis"],"mappings":"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","sourcesContent":["import memoize from 'memoize-one';\n\nimport AudioContextQueue from './AudioContextQueue';\nimport DOMEventEmitter from '../Util/DOMEventEmitter';\nimport fetchAuthorizationToken from '../fetchAuthorizationToken';\nimport fetchVoices from './fetchVoices';\nimport SpeechSynthesisUtterance from './SpeechSynthesisUtterance';\n\n// Supported output format can be found at https://docs.microsoft.com/en-us/azure/cognitive-services/Speech/API-Reference-REST/BingVoiceOutput#Subscription\nconst DEFAULT_OUTPUT_FORMAT = 'audio-16khz-128kbitrate-mono-mp3';\n\nconst TOKEN_EXPIRATION = 600000;\nconst TOKEN_EARLY_RENEWAL = 60000;\n\nexport default ({\n  authorizationToken,\n  ponyfill = {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n  },\n  subscriptionKey\n}) => {\n  if (!authorizationToken && !subscriptionKey) {\n    console.warn('Either authorizationToken or subscriptionKey must be specified');\n\n    return {};\n  } else if (!ponyfill.AudioContext) {\n    console.warn('This browser does not support Web Audio and it will not work with Cognitive Services Speech Services.');\n\n    return {};\n  }\n\n  const fetchMemoizedAuthorizationToken = memoize(\n    ({ subscriptionKey }) => fetchAuthorizationToken(subscriptionKey),\n    (arg, prevArg) => (\n      arg.subscriptionKey === prevArg.subscriptionKey\n      && arg.now - prevArg.now < TOKEN_EXPIRATION - TOKEN_EARLY_RENEWAL\n    )\n  );\n\n  class SpeechSynthesis extends DOMEventEmitter {\n    constructor() {\n      super(['voiceschanged']);\n\n      this.outputFormat = DEFAULT_OUTPUT_FORMAT;\n      this.queue = new AudioContextQueue(ponyfill);\n    }\n\n    cancel() {\n      this.queue.stop();\n    }\n\n    getVoices() {\n      return fetchVoices();\n    }\n\n    pause() {\n      this.queue.pause();\n    }\n\n    resume() {\n      this.queue.resume();\n    }\n\n    async speak(utterance) {\n      if (!(utterance instanceof SpeechSynthesisUtterance)) {\n        throw new Error('invalid utterance');\n      }\n\n      return new Promise(async (resolve, reject) => {\n        utterance.addEventListener('end', resolve);\n        utterance.addEventListener('error', reject);\n\n        utterance.authorizationToken =\n          typeof authorizationToken === 'function' ?\n            await authorizationToken()\n          : authorizationToken ?\n            await authorizationToken\n          : await fetchMemoizedAuthorizationToken({\n            now: Date.now,\n            subscriptionKey\n          });\n        utterance.outputFormat = this.outputFormat;\n        utterance.preload();\n\n        this.queue.push(utterance);\n      });\n    }\n\n    get speaking() {\n      return this.queue.speaking;\n    }\n  }\n\n  return {\n    speechSynthesis: new SpeechSynthesis(),\n    SpeechSynthesisUtterance\n  };\n}\n"],"file":"createSpeechSynthesisPonyfill.js"}