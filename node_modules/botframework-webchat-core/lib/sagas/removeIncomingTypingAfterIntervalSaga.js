"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _callee;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _deleteActivity = _interopRequireDefault(require("../actions/deleteActivity"));

var _incomingActivity = require("../actions/incomingActivity");

var _marked =
/*#__PURE__*/
_regenerator["default"].mark(_callee),
    _marked2 =
/*#__PURE__*/
_regenerator["default"].mark(removeActivityAfterInterval);

function sleep(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
}

function _callee() {
  return _regenerator["default"].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.takeEvery)(function (_ref) {
            var type = _ref.type,
                payload = _ref.payload;
            return type === _incomingActivity.INCOMING_ACTIVITY && payload.activity.type === 'typing';
          }, removeActivityAfterInterval);

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}

function removeActivityAfterInterval(_ref2) {
  var id;
  return _regenerator["default"].wrap(function removeActivityAfterInterval$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          id = _ref2.payload.activity.id;
          _context2.next = 3;
          return (0, _effects.call)(sleep, 5000);

        case 3:
          _context2.next = 5;
          return (0, _effects.put)((0, _deleteActivity["default"])(id));

        case 5:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWdhcy9yZW1vdmVJbmNvbWluZ1R5cGluZ0FmdGVySW50ZXJ2YWxTYWdhLmpzIl0sIm5hbWVzIjpbInJlbW92ZUFjdGl2aXR5QWZ0ZXJJbnRlcnZhbCIsInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJ0eXBlIiwicGF5bG9hZCIsIklOQ09NSU5HX0FDVElWSVRZIiwiYWN0aXZpdHkiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFNQTs7QUFDQTs7Ozs7Ozs2QkFnQlVBLDJCOztBQWRWLFNBQVNDLEtBQVQsQ0FBZUMsRUFBZixFQUFtQjtBQUNqQixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFBQyxPQUFPO0FBQUEsV0FBSUMsVUFBVSxDQUFDRCxPQUFELEVBQVVGLEVBQVYsQ0FBZDtBQUFBLEdBQW5CLENBQVA7QUFDRDs7QUFFYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYixpQkFBTSx3QkFDSjtBQUFBLGdCQUFHSSxJQUFILFFBQUdBLElBQUg7QUFBQSxnQkFBU0MsT0FBVCxRQUFTQSxPQUFUO0FBQUEsbUJBQ0VELElBQUksS0FBS0UsbUNBQVQsSUFDR0QsT0FBTyxDQUFDRSxRQUFSLENBQWlCSCxJQUFqQixLQUEwQixRQUYvQjtBQUFBLFdBREksRUFLSk4sMkJBTEksQ0FBTjs7QUFEYTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFVZixTQUFVQSwyQkFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBK0RVLFVBQUFBLEVBQS9ELFNBQXdDSCxPQUF4QyxDQUFtREUsUUFBbkQsQ0FBK0RDLEVBQS9EO0FBQUE7QUFJRSxpQkFBTSxtQkFBS1QsS0FBTCxFQUFZLElBQVosQ0FBTjs7QUFKRjtBQUFBO0FBS0UsaUJBQU0sa0JBQUksZ0NBQWVTLEVBQWYsQ0FBSixDQUFOOztBQUxGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY2FsbCxcbiAgcHV0LFxuICB0YWtlRXZlcnlcbn0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IGRlbGV0ZUFjdGl2aXR5IGZyb20gJy4uL2FjdGlvbnMvZGVsZXRlQWN0aXZpdHknO1xuaW1wb3J0IHsgSU5DT01JTkdfQUNUSVZJVFkgfSBmcm9tICcuLi9hY3Rpb25zL2luY29taW5nQWN0aXZpdHknO1xuXG5mdW5jdGlvbiBzbGVlcChtcykge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiAoKSB7XG4gIHlpZWxkIHRha2VFdmVyeShcbiAgICAoeyB0eXBlLCBwYXlsb2FkIH0pID0+IChcbiAgICAgIHR5cGUgPT09IElOQ09NSU5HX0FDVElWSVRZXG4gICAgICAmJiBwYXlsb2FkLmFjdGl2aXR5LnR5cGUgPT09ICd0eXBpbmcnXG4gICAgKSxcbiAgICByZW1vdmVBY3Rpdml0eUFmdGVySW50ZXJ2YWxcbiAgKTtcbn1cblxuZnVuY3Rpb24qIHJlbW92ZUFjdGl2aXR5QWZ0ZXJJbnRlcnZhbCh7IHBheWxvYWQ6IHsgYWN0aXZpdHk6IHsgaWQgfSB9IH0pIHtcbiAgLy8gVE9ETzogW1AyXSBXZSBjb3VsZCBvcHRpbWl6ZSBoZXJlLlxuICAvLyAgICAgICBHaXZlbiB0aGVyZSBpcyBhbiBhY3Rpdml0eSB0eXBpbmcgYWN0aXZpdHksIHdoZW4gdGhlIGJvdCBzZW5kIGFub3RoZXIgdHlwaW5nIGFjdGl2aXR5LCB3ZSB3aWxsIHJlbW92ZSB0aGUgZmlyc3Qgb25lLlxuICAvLyAgICAgICBUaGF0IG1lYW5zLCB3ZSBkb24ndCBhY3R1YWxseSBuZWVkIHRvIHJlbW92ZSBpdCBhbnltb3JlLCBhbmQgY291bGQgY2FuY2VsIG91dCB0aGlzIGNhbGwuXG4gIHlpZWxkIGNhbGwoc2xlZXAsIDUwMDApO1xuICB5aWVsZCBwdXQoZGVsZXRlQWN0aXZpdHkoaWQpKTtcbn1cbiJdfQ==