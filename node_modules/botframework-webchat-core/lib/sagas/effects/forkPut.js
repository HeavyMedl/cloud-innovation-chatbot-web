"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = forkPut;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

// In redux-saga, if we call the following effects in order, we might miss the take('C').
// 1. take('A')
// 2. put({ type: 'B' })
// 3. take('C')
// We need to modify step 2 to:
// 2. fork(function* () { yield put({ type: 'B' }) })
// This is a helper function for this purpose.
function forkPut() {
  for (var _len = arguments.length, actions = new Array(_len), _key = 0; _key < _len; _key++) {
    actions[_key] = arguments[_key];
  }

  return (0, _effects.fork)(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee() {
    var _i, _actions, action;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _i = 0, _actions = actions;

          case 1:
            if (!(_i < _actions.length)) {
              _context.next = 8;
              break;
            }

            action = _actions[_i];
            _context.next = 5;
            return (0, _effects.put)(action);

          case 5:
            _i++;
            _context.next = 1;
            break;

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL2ZvcmtQdXQuanMiXSwibmFtZXMiOlsiZm9ya1B1dCIsImFjdGlvbnMiLCJhY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFZSxTQUFTQSxPQUFULEdBQTZCO0FBQUEsb0NBQVRDLE9BQVM7QUFBVEEsSUFBQUEsT0FBUztBQUFBOztBQUMxQyxTQUFPO0FBQUE7QUFBQSwrQkFBSztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ1NBLE9BRFQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDREMsWUFBQUEsTUFEQztBQUFBO0FBRVIsbUJBQU0sa0JBQUlBLE1BQUosQ0FBTjs7QUFGUTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFMLEVBQVA7QUFLRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcmssIHB1dCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbi8vIEluIHJlZHV4LXNhZ2EsIGlmIHdlIGNhbGwgdGhlIGZvbGxvd2luZyBlZmZlY3RzIGluIG9yZGVyLCB3ZSBtaWdodCBtaXNzIHRoZSB0YWtlKCdDJykuXG4vLyAxLiB0YWtlKCdBJylcbi8vIDIuIHB1dCh7IHR5cGU6ICdCJyB9KVxuLy8gMy4gdGFrZSgnQycpXG5cbi8vIFdlIG5lZWQgdG8gbW9kaWZ5IHN0ZXAgMiB0bzpcbi8vIDIuIGZvcmsoZnVuY3Rpb24qICgpIHsgeWllbGQgcHV0KHsgdHlwZTogJ0InIH0pIH0pXG5cbi8vIFRoaXMgaXMgYSBoZWxwZXIgZnVuY3Rpb24gZm9yIHRoaXMgcHVycG9zZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ya1B1dCguLi5hY3Rpb25zKSB7XG4gIHJldHVybiBmb3JrKGZ1bmN0aW9uKiAoKSB7XG4gICAgZm9yIChsZXQgYWN0aW9uIG9mIGFjdGlvbnMpIHtcbiAgICAgIHlpZWxkIHB1dChhY3Rpb24pO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=