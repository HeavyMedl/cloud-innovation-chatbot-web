{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _AudioContextQueue = _interopRequireDefault(require(\"./AudioContextQueue\"));\n\nvar _DOMEventEmitter2 = _interopRequireDefault(require(\"../Util/DOMEventEmitter\"));\n\nvar _fetchAuthorizationToken = _interopRequireDefault(require(\"../fetchAuthorizationToken\"));\n\nvar _fetchVoices = _interopRequireDefault(require(\"./fetchVoices\"));\n\nvar _SpeechSynthesisUtterance = _interopRequireDefault(require(\"./SpeechSynthesisUtterance\")); // Supported output format can be found at https://docs.microsoft.com/en-us/azure/cognitive-services/Speech/API-Reference-REST/BingVoiceOutput#Subscription\n\n\nvar DEFAULT_OUTPUT_FORMAT = 'audio-16khz-128kbitrate-mono-mp3';\nvar TOKEN_EXPIRATION = 600000;\nvar TOKEN_EARLY_RENEWAL = 60000;\n\nvar _default = function _default(_ref) {\n  var authorizationToken = _ref.authorizationToken,\n      _ref$ponyfill = _ref.ponyfill,\n      ponyfill = _ref$ponyfill === void 0 ? {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n  } : _ref$ponyfill,\n      subscriptionKey = _ref.subscriptionKey;\n\n  if (!authorizationToken && !subscriptionKey) {\n    console.warn('Either authorizationToken or subscriptionKey must be specified');\n    return {};\n  } else if (!ponyfill.AudioContext) {\n    console.warn('This browser does not support Web Audio and it will not work with Cognitive Services Speech Services.');\n    return {};\n  }\n\n  var fetchMemoizedAuthorizationToken = (0, _memoizeOne.default)(function (_ref2) {\n    var subscriptionKey = _ref2.subscriptionKey;\n    return (0, _fetchAuthorizationToken.default)(subscriptionKey);\n  }, function (arg, prevArg) {\n    return arg.subscriptionKey === prevArg.subscriptionKey && arg.now - prevArg.now < TOKEN_EXPIRATION - TOKEN_EARLY_RENEWAL;\n  });\n\n  var SpeechSynthesis =\n  /*#__PURE__*/\n  function (_DOMEventEmitter) {\n    (0, _inherits2.default)(SpeechSynthesis, _DOMEventEmitter);\n\n    function SpeechSynthesis() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SpeechSynthesis);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SpeechSynthesis).call(this, ['voiceschanged']));\n      _this.outputFormat = DEFAULT_OUTPUT_FORMAT;\n      _this.queue = new _AudioContextQueue.default(ponyfill);\n      return _this;\n    }\n\n    (0, _createClass2.default)(SpeechSynthesis, [{\n      key: \"cancel\",\n      value: function cancel() {\n        this.queue.stop();\n      }\n    }, {\n      key: \"getVoices\",\n      value: function getVoices() {\n        return (0, _fetchVoices.default)();\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        this.queue.pause();\n      }\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        this.queue.resume();\n      }\n    }, {\n      key: \"speak\",\n      value: function () {\n        var _speak = (0, _asyncToGenerator2.default)(\n        /*#__PURE__*/\n        _regenerator.default.mark(function _callee2(utterance) {\n          var _this2 = this;\n\n          return _regenerator.default.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (utterance instanceof _SpeechSynthesisUtterance.default) {\n                    _context2.next = 2;\n                    break;\n                  }\n\n                  throw new Error('invalid utterance');\n\n                case 2:\n                  return _context2.abrupt(\"return\", new Promise(\n                  /*#__PURE__*/\n                  function () {\n                    var _ref3 = (0, _asyncToGenerator2.default)(\n                    /*#__PURE__*/\n                    _regenerator.default.mark(function _callee(resolve, reject) {\n                      return _regenerator.default.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              utterance.addEventListener('end', resolve);\n                              utterance.addEventListener('error', reject);\n\n                              if (!(typeof authorizationToken === 'function')) {\n                                _context.next = 8;\n                                break;\n                              }\n\n                              _context.next = 5;\n                              return authorizationToken();\n\n                            case 5:\n                              _context.t0 = _context.sent;\n                              _context.next = 18;\n                              break;\n\n                            case 8:\n                              if (!authorizationToken) {\n                                _context.next = 14;\n                                break;\n                              }\n\n                              _context.next = 11;\n                              return authorizationToken;\n\n                            case 11:\n                              _context.t1 = _context.sent;\n                              _context.next = 17;\n                              break;\n\n                            case 14:\n                              _context.next = 16;\n                              return fetchMemoizedAuthorizationToken({\n                                now: Date.now,\n                                subscriptionKey: subscriptionKey\n                              });\n\n                            case 16:\n                              _context.t1 = _context.sent;\n\n                            case 17:\n                              _context.t0 = _context.t1;\n\n                            case 18:\n                              utterance.authorizationToken = _context.t0;\n                              utterance.outputFormat = _this2.outputFormat;\n                              utterance.preload();\n\n                              _this2.queue.push(utterance);\n\n                            case 22:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n\n                    return function (_x2, _x3) {\n                      return _ref3.apply(this, arguments);\n                    };\n                  }()));\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function speak(_x) {\n          return _speak.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"speaking\",\n      get: function get() {\n        return this.queue.speaking;\n      }\n    }]);\n    return SpeechSynthesis;\n  }(_DOMEventEmitter2.default);\n\n  return {\n    speechSynthesis: new SpeechSynthesis(),\n    SpeechSynthesisUtterance: _SpeechSynthesisUtterance.default\n  };\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}