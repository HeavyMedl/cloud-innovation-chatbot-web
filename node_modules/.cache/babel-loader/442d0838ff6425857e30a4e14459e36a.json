{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _buildSSML = _interopRequireDefault(require(\"./buildSSML\"));\n\nvar DEFAULT_LANGUAGE = 'en-US';\nvar DEFAULT_VOICE = 'Microsoft Server Speech Text to Speech Voice (en-US, JessaRUS)';\nvar SYNTHESIS_URL_TEMPLATE = 'https://{region}.tts.speech.microsoft.com/cognitiveservices/v1';\n\nfunction _default(_x) {\n  return _ref2.apply(this, arguments);\n}\n\nfunction _ref2() {\n  _ref2 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee(_ref) {\n    var authorizationToken, _ref$lang, lang, outputFormat, pitch, rate, region, text, _ref$voice, voice, volume, ssml, url, res;\n\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            authorizationToken = _ref.authorizationToken, _ref$lang = _ref.lang, lang = _ref$lang === void 0 ? DEFAULT_LANGUAGE : _ref$lang, outputFormat = _ref.outputFormat, pitch = _ref.pitch, rate = _ref.rate, region = _ref.region, text = _ref.text, _ref$voice = _ref.voice, voice = _ref$voice === void 0 ? DEFAULT_VOICE : _ref$voice, volume = _ref.volume;\n            ssml = (0, _buildSSML.default)({\n              lang: lang,\n              pitch: pitch,\n              rate: rate,\n              text: text,\n              voice: voice,\n              volume: volume\n            });\n            url = SYNTHESIS_URL_TEMPLATE.replace(/\\{region\\}/, region);\n            _context.next = 5;\n            return fetch(url, {\n              headers: {\n                Authorization: \"Bearer \".concat(authorizationToken),\n                'Content-Type': 'application/ssml+xml',\n                'X-Microsoft-OutputFormat': outputFormat\n              },\n              method: 'POST',\n              body: ssml\n            });\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(\"Failed to syntheis speech, server returned \".concat(res.status));\n\n          case 8:\n            return _context.abrupt(\"return\", res.arrayBuffer());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _ref2.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}