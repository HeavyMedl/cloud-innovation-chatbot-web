{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AbstractTextFormatter =\n/** @class */\nfunction () {\n  function AbstractTextFormatter(regularExpression) {\n    this._regularExpression = regularExpression;\n  }\n\n  AbstractTextFormatter.prototype.format = function (lang, input) {\n    var matches;\n    var result = input;\n\n    while ((matches = this._regularExpression.exec(input)) != null) {\n      result = result.replace(matches[0], this.internalFormat(lang, matches));\n    }\n\n    ;\n    return result;\n  };\n\n  return AbstractTextFormatter;\n}();\n\nvar DateFormatter =\n/** @class */\nfunction (_super) {\n  __extends(DateFormatter, _super);\n\n  function DateFormatter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DateFormatter.prototype.internalFormat = function (lang, matches) {\n    var date = new Date(Date.parse(matches[1]));\n    var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\n\n    if (format != \"compact\") {\n      return date.toLocaleDateString(lang, {\n        day: \"numeric\",\n        weekday: format,\n        month: format,\n        year: \"numeric\"\n      });\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n\n  return DateFormatter;\n}(AbstractTextFormatter);\n\nvar TimeFormatter =\n/** @class */\nfunction (_super) {\n  __extends(TimeFormatter, _super);\n\n  function TimeFormatter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeFormatter.prototype.internalFormat = function (lang, matches) {\n    var date = new Date(Date.parse(matches[1]));\n    return date.toLocaleTimeString(lang, {\n      hour: 'numeric',\n      minute: '2-digit'\n    });\n  };\n\n  return TimeFormatter;\n}(AbstractTextFormatter);\n\nfunction formatText(lang, text) {\n  var formatters = [new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g), new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)];\n  var result = text;\n\n  for (var i = 0; i < formatters.length; i++) {\n    result = formatters[i].format(lang, result);\n  }\n\n  return result;\n}\n\nexports.formatText = formatText;","map":null,"metadata":{},"sourceType":"script"}