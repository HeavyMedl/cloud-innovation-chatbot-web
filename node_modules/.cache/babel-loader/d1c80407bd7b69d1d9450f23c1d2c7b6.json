{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\n\nvar ArgumentNullError =\n/** @class */\nfunction (_super) {\n  __extends(ArgumentNullError, _super);\n  /**\n   * Creates an instance of ArgumentNullError.\n   *\n   * @param {string} argumentName Name of the argument that is null\n   *\n   * @memberOf ArgumentNullError\n   */\n\n\n  function ArgumentNullError(argumentName) {\n    var _this = _super.call(this, argumentName) || this;\n\n    _this.name = \"ArgumentNull\";\n    _this.message = argumentName;\n    return _this;\n  }\n\n  return ArgumentNullError;\n}(Error);\n\nexports.ArgumentNullError = ArgumentNullError;\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\n\nvar InvalidOperationError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidOperationError, _super);\n  /**\n   * Creates an instance of InvalidOperationError.\n   *\n   * @param {string} error The error\n   *\n   * @memberOf InvalidOperationError\n   */\n\n\n  function InvalidOperationError(error) {\n    var _this = _super.call(this, error) || this;\n\n    _this.name = \"InvalidOperation\";\n    _this.message = error;\n    return _this;\n  }\n\n  return InvalidOperationError;\n}(Error);\n\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\n\nvar ObjectDisposedError =\n/** @class */\nfunction (_super) {\n  __extends(ObjectDisposedError, _super);\n  /**\n   * Creates an instance of ObjectDisposedError.\n   *\n   * @param {string} objectName The object that is disposed\n   * @param {string} error The error\n   *\n   * @memberOf ObjectDisposedError\n   */\n\n\n  function ObjectDisposedError(objectName, error) {\n    var _this = _super.call(this, error) || this;\n\n    _this.name = objectName + \"ObjectDisposed\";\n    _this.message = error;\n    return _this;\n  }\n\n  return ObjectDisposedError;\n}(Error);\n\nexports.ObjectDisposedError = ObjectDisposedError;","map":null,"metadata":{},"sourceType":"script"}