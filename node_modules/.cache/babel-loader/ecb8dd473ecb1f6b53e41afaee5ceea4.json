{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n/******/\n\n\n(function (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        /******/\n        configurable: false,\n\n        /******/\n        enumerable: true,\n\n        /******/\n        get: getter\n        /******/\n\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 21);\n  /******/\n})(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var AudioConfig_1 = __webpack_require__(35);\n\n  exports.AudioConfig = AudioConfig_1.AudioConfig;\n\n  var AudioStreamFormat_1 = __webpack_require__(18);\n\n  exports.AudioStreamFormat = AudioStreamFormat_1.AudioStreamFormat;\n\n  var AudioInputStream_1 = __webpack_require__(17);\n\n  exports.AudioInputStream = AudioInputStream_1.AudioInputStream;\n  exports.PullAudioInputStream = AudioInputStream_1.PullAudioInputStream;\n  exports.PushAudioInputStream = AudioInputStream_1.PushAudioInputStream;\n\n  var CancellationReason_1 = __webpack_require__(36);\n\n  exports.CancellationReason = CancellationReason_1.CancellationReason;\n\n  var PullAudioInputStreamCallback_1 = __webpack_require__(37);\n\n  exports.PullAudioInputStreamCallback = PullAudioInputStreamCallback_1.PullAudioInputStreamCallback;\n\n  var KeywordRecognitionModel_1 = __webpack_require__(38);\n\n  exports.KeywordRecognitionModel = KeywordRecognitionModel_1.KeywordRecognitionModel;\n\n  var SessionEventArgs_1 = __webpack_require__(39);\n\n  exports.SessionEventArgs = SessionEventArgs_1.SessionEventArgs;\n\n  var RecognitionEventArgs_1 = __webpack_require__(40);\n\n  exports.RecognitionEventArgs = RecognitionEventArgs_1.RecognitionEventArgs;\n\n  var OutputFormat_1 = __webpack_require__(41);\n\n  exports.OutputFormat = OutputFormat_1.OutputFormat;\n\n  var IntentRecognitionEventArgs_1 = __webpack_require__(42);\n\n  exports.IntentRecognitionEventArgs = IntentRecognitionEventArgs_1.IntentRecognitionEventArgs;\n\n  var RecognitionResult_1 = __webpack_require__(43);\n\n  exports.RecognitionResult = RecognitionResult_1.RecognitionResult;\n\n  var SpeechRecognitionResult_1 = __webpack_require__(44);\n\n  exports.SpeechRecognitionResult = SpeechRecognitionResult_1.SpeechRecognitionResult;\n\n  var IntentRecognitionResult_1 = __webpack_require__(45);\n\n  exports.IntentRecognitionResult = IntentRecognitionResult_1.IntentRecognitionResult;\n\n  var LanguageUnderstandingModel_1 = __webpack_require__(46);\n\n  exports.LanguageUnderstandingModel = LanguageUnderstandingModel_1.LanguageUnderstandingModel;\n\n  var SpeechRecognitionEventArgs_1 = __webpack_require__(47);\n\n  exports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs_1.SpeechRecognitionEventArgs;\n\n  var SpeechRecognitionCanceledEventArgs_1 = __webpack_require__(48);\n\n  exports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs_1.SpeechRecognitionCanceledEventArgs;\n\n  var TranslationRecognitionEventArgs_1 = __webpack_require__(49);\n\n  exports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs_1.TranslationRecognitionEventArgs;\n\n  var TranslationSynthesisEventArgs_1 = __webpack_require__(50);\n\n  exports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs_1.TranslationSynthesisEventArgs;\n\n  var TranslationRecognitionResult_1 = __webpack_require__(51);\n\n  exports.TranslationRecognitionResult = TranslationRecognitionResult_1.TranslationRecognitionResult;\n\n  var TranslationSynthesisResult_1 = __webpack_require__(52);\n\n  exports.TranslationSynthesisResult = TranslationSynthesisResult_1.TranslationSynthesisResult;\n\n  var ResultReason_1 = __webpack_require__(53);\n\n  exports.ResultReason = ResultReason_1.ResultReason;\n\n  var SpeechConfig_1 = __webpack_require__(54);\n\n  exports.SpeechConfig = SpeechConfig_1.SpeechConfig;\n\n  var SpeechTranslationConfig_1 = __webpack_require__(80);\n\n  exports.SpeechTranslationConfig = SpeechTranslationConfig_1.SpeechTranslationConfig;\n\n  var PropertyCollection_1 = __webpack_require__(81);\n\n  exports.PropertyCollection = PropertyCollection_1.PropertyCollection;\n\n  var PropertyId_1 = __webpack_require__(82);\n\n  exports.PropertyId = PropertyId_1.PropertyId;\n\n  var Recognizer_1 = __webpack_require__(83);\n\n  exports.Recognizer = Recognizer_1.Recognizer;\n\n  var SpeechRecognizer_1 = __webpack_require__(84);\n\n  exports.SpeechRecognizer = SpeechRecognizer_1.SpeechRecognizer;\n\n  var IntentRecognizer_1 = __webpack_require__(85);\n\n  exports.IntentRecognizer = IntentRecognizer_1.IntentRecognizer;\n\n  var TranslationRecognizer_1 = __webpack_require__(86);\n\n  exports.TranslationRecognizer = TranslationRecognizer_1.TranslationRecognizer;\n\n  var Translations_1 = __webpack_require__(87);\n\n  exports.Translations = Translations_1.Translations;\n\n  var NoMatchReason_1 = __webpack_require__(88);\n\n  exports.NoMatchReason = NoMatchReason_1.NoMatchReason;\n\n  var NoMatchDetails_1 = __webpack_require__(89);\n\n  exports.NoMatchDetails = NoMatchDetails_1.NoMatchDetails;\n\n  var TranslationRecognitionCanceledEventArgs_1 = __webpack_require__(90);\n\n  exports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs_1.TranslationRecognitionCanceledEventArgs;\n\n  var IntentRecognitionCanceledEventArgs_1 = __webpack_require__(91);\n\n  exports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs_1.IntentRecognitionCanceledEventArgs;\n\n  var CancellationDetails_1 = __webpack_require__(92);\n\n  exports.CancellationDetails = CancellationDetails_1.CancellationDetails;\n\n  var CancellationErrorCodes_1 = __webpack_require__(93);\n\n  exports.CancellationErrorCode = CancellationErrorCodes_1.CancellationErrorCode;\n  /***/\n},\n/* 1 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  __export(__webpack_require__(24));\n\n  __export(__webpack_require__(25));\n\n  __export(__webpack_require__(11));\n\n  __export(__webpack_require__(26));\n\n  __export(__webpack_require__(3));\n\n  __export(__webpack_require__(27));\n\n  __export(__webpack_require__(12));\n\n  __export(__webpack_require__(5));\n\n  __export(__webpack_require__(28));\n\n  __export(__webpack_require__(13));\n\n  __export(__webpack_require__(14));\n\n  __export(__webpack_require__(7));\n\n  __export(__webpack_require__(15));\n\n  __export(__webpack_require__(16));\n\n  __export(__webpack_require__(29));\n\n  __export(__webpack_require__(30));\n\n  __export(__webpack_require__(31));\n\n  __export(__webpack_require__(32));\n\n  var TranslationStatus_1 = __webpack_require__(8);\n\n  exports.TranslationStatus = TranslationStatus_1.TranslationStatus;\n  /***/\n},\n/* 2 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); // IMPORTANT - Dont publish internal modules.\n\n  __export(__webpack_require__(55));\n\n  __export(__webpack_require__(56));\n\n  __export(__webpack_require__(9));\n\n  __export(__webpack_require__(57));\n\n  __export(__webpack_require__(10));\n\n  __export(__webpack_require__(58));\n\n  __export(__webpack_require__(60));\n\n  __export(__webpack_require__(61));\n\n  __export(__webpack_require__(19));\n\n  __export(__webpack_require__(63));\n\n  __export(__webpack_require__(64));\n\n  __export(__webpack_require__(65));\n\n  __export(__webpack_require__(66));\n\n  __export(__webpack_require__(67));\n\n  __export(__webpack_require__(68));\n\n  __export(__webpack_require__(69));\n\n  __export(__webpack_require__(70));\n\n  __export(__webpack_require__(71));\n\n  __export(__webpack_require__(72));\n\n  __export(__webpack_require__(73));\n\n  __export(__webpack_require__(74));\n\n  __export(__webpack_require__(75));\n\n  __export(__webpack_require__(76));\n\n  __export(__webpack_require__(77));\n\n  __export(__webpack_require__(78));\n\n  exports.OutputFormatPropertyName = \"OutputFormat\";\n  exports.CancellationErrorCodePropertyName = \"CancellationErrorCode\";\n  /***/\n},\n/* 3 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * The error that is thrown when an argument passed in is null.\n   *\n   * @export\n   * @class ArgumentNullError\n   * @extends {Error}\n   */\n\n  var ArgumentNullError =\n  /** @class */\n  function (_super) {\n    __extends(ArgumentNullError, _super);\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n\n\n    function ArgumentNullError(argumentName) {\n      var _this = _super.call(this, argumentName) || this;\n\n      _this.name = \"ArgumentNull\";\n      _this.message = argumentName;\n      return _this;\n    }\n\n    return ArgumentNullError;\n  }(Error);\n\n  exports.ArgumentNullError = ArgumentNullError;\n  /**\n   * The error that is thrown when an invalid operation is performed in the code.\n   *\n   * @export\n   * @class InvalidOperationError\n   * @extends {Error}\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var InvalidOperationError =\n  /** @class */\n  function (_super) {\n    __extends(InvalidOperationError, _super);\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n\n\n    function InvalidOperationError(error) {\n      var _this = _super.call(this, error) || this;\n\n      _this.name = \"InvalidOperation\";\n      _this.message = error;\n      return _this;\n    }\n\n    return InvalidOperationError;\n  }(Error);\n\n  exports.InvalidOperationError = InvalidOperationError;\n  /**\n   * The error that is thrown when an object is disposed.\n   *\n   * @export\n   * @class ObjectDisposedError\n   * @extends {Error}\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var ObjectDisposedError =\n  /** @class */\n  function (_super) {\n    __extends(ObjectDisposedError, _super);\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n\n\n    function ObjectDisposedError(objectName, error) {\n      var _this = _super.call(this, error) || this;\n\n      _this.name = objectName + \"ObjectDisposed\";\n      _this.message = error;\n      return _this;\n    }\n\n    return ObjectDisposedError;\n  }(Error);\n\n  exports.ObjectDisposedError = ObjectDisposedError;\n  /***/\n},\n/* 4 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * @class Contracts\n   * @private\n   */\n\n  var Contracts =\n  /** @class */\n  function () {\n    function Contracts() {}\n\n    Contracts.throwIfNullOrUndefined = function (param, name) {\n      if (param === undefined || param === null) {\n        throw new Error(\"throwIfNullOrUndefined:\" + name);\n      }\n    };\n\n    Contracts.throwIfNull = function (param, name) {\n      if (param === null) {\n        throw new Error(\"throwIfNull:\" + name);\n      }\n    };\n\n    Contracts.throwIfNullOrWhitespace = function (param, name) {\n      Contracts.throwIfNullOrUndefined(param, name);\n\n      if ((\"\" + param).trim().length < 1) {\n        throw new Error(\"throwIfNullOrWhitespace:\" + name);\n      }\n    };\n\n    Contracts.throwIfDisposed = function (isDisposed) {\n      if (isDisposed) {\n        throw new Error(\"the object is already disposed\");\n      }\n    };\n\n    Contracts.throwIfArrayEmptyOrWhitespace = function (array, name) {\n      Contracts.throwIfNullOrUndefined(array, name);\n\n      if (array.length === 0) {\n        throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n      }\n\n      for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var item = array_1[_i];\n        Contracts.throwIfNullOrWhitespace(item, name);\n      }\n    };\n\n    Contracts.throwIfFileDoesNotExist = function (param, name) {\n      Contracts.throwIfNullOrWhitespace(param, name); // TODO check for file existence.\n    };\n\n    return Contracts;\n  }();\n\n  exports.Contracts = Contracts;\n  /***/\n},\n/* 5 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var CreateGuid = function CreateGuid() {\n    var d = new Date().getTime();\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === \"x\" ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return guid;\n  };\n\n  exports.CreateGuid = CreateGuid;\n\n  var CreateNoDashGuid = function CreateNoDashGuid() {\n    return CreateGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\n  };\n\n  exports.CreateNoDashGuid = CreateNoDashGuid;\n  /***/\n},\n/* 6 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  __export(__webpack_require__(23));\n\n  __export(__webpack_require__(33));\n\n  __export(__webpack_require__(34));\n\n  __export(__webpack_require__(94));\n\n  __export(__webpack_require__(95));\n\n  __export(__webpack_require__(96));\n\n  __export(__webpack_require__(97));\n\n  __export(__webpack_require__(98));\n\n  __export(__webpack_require__(99));\n\n  __export(__webpack_require__(20));\n  /***/\n\n},\n/* 7 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Guid_1 = __webpack_require__(5);\n\n  var EventType;\n\n  (function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n  })(EventType = exports.EventType || (exports.EventType = {}));\n\n  var PlatformEvent =\n  /** @class */\n  function () {\n    function PlatformEvent(eventName, eventType) {\n      this.name = eventName;\n      this.eventId = Guid_1.CreateNoDashGuid();\n      this.eventTime = new Date().toISOString();\n      this.eventType = eventType;\n      this.metadata = {};\n    }\n\n    Object.defineProperty(PlatformEvent.prototype, \"Name\", {\n      get: function get() {\n        return this.name;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"EventId\", {\n      get: function get() {\n        return this.eventId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"EventTime\", {\n      get: function get() {\n        return this.eventTime;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"EventType\", {\n      get: function get() {\n        return this.eventType;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"Metadata\", {\n      get: function get() {\n        return this.metadata;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return PlatformEvent;\n  }();\n\n  exports.PlatformEvent = PlatformEvent;\n  /***/\n},\n/* 8 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines translation status.\n   * @class TranslationStatus\n   */\n\n  var TranslationStatus;\n\n  (function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n  })(TranslationStatus = exports.TranslationStatus || (exports.TranslationStatus = {}));\n  /***/\n\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var AuthInfo =\n  /** @class */\n  function () {\n    function AuthInfo(headerName, token) {\n      this.headerName = headerName;\n      this.token = token;\n    }\n\n    Object.defineProperty(AuthInfo.prototype, \"HeaderName\", {\n      get: function get() {\n        return this.headerName;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(AuthInfo.prototype, \"Token\", {\n      get: function get() {\n        return this.token;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AuthInfo;\n  }();\n\n  exports.AuthInfo = AuthInfo;\n  /***/\n},\n/* 10 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var SpeechRecognitionEvent =\n  /** @class */\n  function (_super) {\n    __extends(SpeechRecognitionEvent, _super);\n\n    function SpeechRecognitionEvent(eventName, requestId, sessionId, eventType) {\n      if (eventType === void 0) {\n        eventType = Exports_1.EventType.Info;\n      }\n\n      var _this = _super.call(this, eventName, eventType) || this;\n\n      _this.requestId = requestId;\n      _this.sessionId = sessionId;\n      return _this;\n    }\n\n    Object.defineProperty(SpeechRecognitionEvent.prototype, \"RequestId\", {\n      get: function get() {\n        return this.requestId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionEvent.prototype, \"SessionId\", {\n      get: function get() {\n        return this.sessionId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechRecognitionEvent;\n  }(Exports_1.PlatformEvent);\n\n  exports.SpeechRecognitionEvent = SpeechRecognitionEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var RecognitionTriggeredEvent =\n  /** @class */\n  function (_super) {\n    __extends(RecognitionTriggeredEvent, _super);\n\n    function RecognitionTriggeredEvent(requestId, sessionId, audioSourceId, audioNodeId) {\n      var _this = _super.call(this, \"RecognitionTriggeredEvent\", requestId, sessionId) || this;\n\n      _this.audioSourceId = audioSourceId;\n      _this.audioNodeId = audioNodeId;\n      return _this;\n    }\n\n    Object.defineProperty(RecognitionTriggeredEvent.prototype, \"AudioSourceId\", {\n      get: function get() {\n        return this.audioSourceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionTriggeredEvent.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognitionTriggeredEvent;\n  }(SpeechRecognitionEvent);\n\n  exports.RecognitionTriggeredEvent = RecognitionTriggeredEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ListeningStartedEvent =\n  /** @class */\n  function (_super) {\n    __extends(ListeningStartedEvent, _super);\n\n    function ListeningStartedEvent(requestId, sessionId, audioSourceId, audioNodeId) {\n      var _this = _super.call(this, \"ListeningStartedEvent\", requestId, sessionId) || this;\n\n      _this.audioSourceId = audioSourceId;\n      _this.audioNodeId = audioNodeId;\n      return _this;\n    }\n\n    Object.defineProperty(ListeningStartedEvent.prototype, \"AudioSourceId\", {\n      get: function get() {\n        return this.audioSourceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ListeningStartedEvent.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ListeningStartedEvent;\n  }(SpeechRecognitionEvent);\n\n  exports.ListeningStartedEvent = ListeningStartedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectingToServiceEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectingToServiceEvent, _super);\n\n    function ConnectingToServiceEvent(requestId, authFetchEventid, sessionId) {\n      var _this = _super.call(this, \"ConnectingToServiceEvent\", requestId, sessionId) || this;\n\n      _this.authFetchEventid = authFetchEventid;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectingToServiceEvent.prototype, \"AuthFetchEventid\", {\n      get: function get() {\n        return this.authFetchEventid;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectingToServiceEvent;\n  }(SpeechRecognitionEvent);\n\n  exports.ConnectingToServiceEvent = ConnectingToServiceEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var RecognitionStartedEvent =\n  /** @class */\n  function (_super) {\n    __extends(RecognitionStartedEvent, _super);\n\n    function RecognitionStartedEvent(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n      var _this = _super.call(this, \"RecognitionStartedEvent\", requestId, sessionId) || this;\n\n      _this.audioSourceId = audioSourceId;\n      _this.audioNodeId = audioNodeId;\n      _this.authFetchEventId = authFetchEventId;\n      return _this;\n    }\n\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"AudioSourceId\", {\n      get: function get() {\n        return this.audioSourceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"AuthFetchEventId\", {\n      get: function get() {\n        return this.authFetchEventId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognitionStartedEvent;\n  }(SpeechRecognitionEvent);\n\n  exports.RecognitionStartedEvent = RecognitionStartedEvent;\n  var RecognitionCompletionStatus;\n\n  (function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n  })(RecognitionCompletionStatus = exports.RecognitionCompletionStatus || (exports.RecognitionCompletionStatus = {})); // tslint:disable-next-line:max-classes-per-file\n\n\n  var RecognitionEndedEvent =\n  /** @class */\n  function (_super) {\n    __extends(RecognitionEndedEvent, _super);\n\n    function RecognitionEndedEvent(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n      var _this = _super.call(this, \"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? Exports_1.EventType.Info : Exports_1.EventType.Error) || this;\n\n      _this.audioSourceId = audioSourceId;\n      _this.audioNodeId = audioNodeId;\n      _this.authFetchEventId = authFetchEventId;\n      _this.status = status;\n      _this.error = error;\n      _this.serviceTag = serviceTag;\n      return _this;\n    }\n\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"AudioSourceId\", {\n      get: function get() {\n        return this.audioSourceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"AuthFetchEventId\", {\n      get: function get() {\n        return this.authFetchEventId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"ServiceTag\", {\n      get: function get() {\n        return this.serviceTag;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"Status\", {\n      get: function get() {\n        return this.status;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"Error\", {\n      get: function get() {\n        return this.error;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognitionEndedEvent;\n  }(SpeechRecognitionEvent);\n\n  exports.RecognitionEndedEvent = RecognitionEndedEvent;\n  /***/\n},\n/* 11 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var Guid_1 = __webpack_require__(5);\n\n  var MessageType;\n\n  (function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n  })(MessageType = exports.MessageType || (exports.MessageType = {}));\n\n  var ConnectionMessage =\n  /** @class */\n  function () {\n    function ConnectionMessage(messageType, body, headers, id) {\n      this.body = null;\n\n      if (messageType === MessageType.Text && body && !(typeof body === \"string\")) {\n        throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n      }\n\n      if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n        throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n      }\n\n      this.messageType = messageType;\n      this.body = body;\n      this.headers = headers ? headers : {};\n      this.id = id ? id : Guid_1.CreateNoDashGuid();\n    }\n\n    Object.defineProperty(ConnectionMessage.prototype, \"MessageType\", {\n      get: function get() {\n        return this.messageType;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"Headers\", {\n      get: function get() {\n        return this.headers;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"Body\", {\n      get: function get() {\n        return this.body;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"TextBody\", {\n      get: function get() {\n        if (this.messageType === MessageType.Binary) {\n          throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n\n        return this.body;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"BinaryBody\", {\n      get: function get() {\n        if (this.messageType === MessageType.Text) {\n          throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n        }\n\n        return this.body;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"Id\", {\n      get: function get() {\n        return this.id;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionMessage;\n  }();\n\n  exports.ConnectionMessage = ConnectionMessage;\n  /***/\n},\n/* 12 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var Guid_1 = __webpack_require__(5);\n\n  var EventSource =\n  /** @class */\n  function () {\n    function EventSource(metadata) {\n      var _this = this;\n\n      this.eventListeners = {};\n      this.isDisposed = false;\n\n      this.OnEvent = function (event) {\n        if (_this.IsDisposed()) {\n          throw new Error_1.ObjectDisposedError(\"EventSource\");\n        }\n\n        if (_this.Metadata) {\n          for (var paramName in _this.Metadata) {\n            if (paramName) {\n              if (event.Metadata) {\n                if (!event.Metadata[paramName]) {\n                  event.Metadata[paramName] = _this.Metadata[paramName];\n                }\n              }\n            }\n          }\n        }\n\n        for (var eventId in _this.eventListeners) {\n          if (eventId && _this.eventListeners[eventId]) {\n            _this.eventListeners[eventId](event);\n          }\n        }\n      };\n\n      this.Attach = function (onEventCallback) {\n        var id = Guid_1.CreateNoDashGuid();\n        _this.eventListeners[id] = onEventCallback;\n        return {\n          Detach: function Detach() {\n            delete _this.eventListeners[id];\n          }\n        };\n      };\n\n      this.AttachListener = function (listener) {\n        return _this.Attach(listener.OnEvent);\n      };\n\n      this.IsDisposed = function () {\n        return _this.isDisposed;\n      };\n\n      this.Dispose = function () {\n        _this.eventListeners = null;\n        _this.isDisposed = true;\n      };\n\n      this.metadata = metadata;\n    }\n\n    Object.defineProperty(EventSource.prototype, \"Metadata\", {\n      get: function get() {\n        return this.metadata;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return EventSource;\n  }();\n\n  exports.EventSource = EventSource;\n  /***/\n},\n/* 13 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var InMemoryStorage =\n  /** @class */\n  function () {\n    function InMemoryStorage() {\n      var _this = this;\n\n      this.store = {};\n\n      this.Get = function (key) {\n        if (!key) {\n          throw new Error_1.ArgumentNullError(\"key\");\n        }\n\n        return _this.store[key];\n      };\n\n      this.GetOrAdd = function (key, valueToAdd) {\n        if (!key) {\n          throw new Error_1.ArgumentNullError(\"key\");\n        }\n\n        if (_this.store[key] === undefined) {\n          _this.store[key] = valueToAdd;\n        }\n\n        return _this.store[key];\n      };\n\n      this.Set = function (key, value) {\n        if (!key) {\n          throw new Error_1.ArgumentNullError(\"key\");\n        }\n\n        _this.store[key] = value;\n      };\n\n      this.Remove = function (key) {\n        if (!key) {\n          throw new Error_1.ArgumentNullError(\"key\");\n        }\n\n        if (_this.store[key] !== undefined) {\n          delete _this.store[key];\n        }\n      };\n    }\n\n    return InMemoryStorage;\n  }();\n\n  exports.InMemoryStorage = InMemoryStorage;\n  /***/\n},\n/* 14 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var List =\n  /** @class */\n  function () {\n    function List(list) {\n      var _this = this;\n\n      this.subscriptionIdCounter = 0;\n      this.addSubscriptions = {};\n      this.removeSubscriptions = {};\n      this.disposedSubscriptions = {};\n      this.disposeReason = null;\n\n      this.Get = function (itemIndex) {\n        _this.ThrowIfDisposed();\n\n        return _this.list[itemIndex];\n      };\n\n      this.First = function () {\n        return _this.Get(0);\n      };\n\n      this.Last = function () {\n        return _this.Get(_this.Length() - 1);\n      };\n\n      this.Add = function (item) {\n        _this.ThrowIfDisposed();\n\n        _this.InsertAt(_this.list.length, item);\n      };\n\n      this.InsertAt = function (index, item) {\n        _this.ThrowIfDisposed();\n\n        if (index === 0) {\n          _this.list.unshift(item);\n        } else if (index === _this.list.length) {\n          _this.list.push(item);\n        } else {\n          _this.list.splice(index, 0, item);\n        }\n\n        _this.TriggerSubscriptions(_this.addSubscriptions);\n      };\n\n      this.RemoveFirst = function () {\n        _this.ThrowIfDisposed();\n\n        return _this.RemoveAt(0);\n      };\n\n      this.RemoveLast = function () {\n        _this.ThrowIfDisposed();\n\n        return _this.RemoveAt(_this.Length() - 1);\n      };\n\n      this.RemoveAt = function (index) {\n        _this.ThrowIfDisposed();\n\n        return _this.Remove(index, 1)[0];\n      };\n\n      this.Remove = function (index, count) {\n        _this.ThrowIfDisposed();\n\n        var removedElements = _this.list.splice(index, count);\n\n        _this.TriggerSubscriptions(_this.removeSubscriptions);\n\n        return removedElements;\n      };\n\n      this.Clear = function () {\n        _this.ThrowIfDisposed();\n\n        _this.Remove(0, _this.Length());\n      };\n\n      this.Length = function () {\n        _this.ThrowIfDisposed();\n\n        return _this.list.length;\n      };\n\n      this.OnAdded = function (addedCallback) {\n        _this.ThrowIfDisposed();\n\n        var subscriptionId = _this.subscriptionIdCounter++;\n        _this.addSubscriptions[subscriptionId] = addedCallback;\n        return {\n          Detach: function Detach() {\n            delete _this.addSubscriptions[subscriptionId];\n          }\n        };\n      };\n\n      this.OnRemoved = function (removedCallback) {\n        _this.ThrowIfDisposed();\n\n        var subscriptionId = _this.subscriptionIdCounter++;\n        _this.removeSubscriptions[subscriptionId] = removedCallback;\n        return {\n          Detach: function Detach() {\n            delete _this.removeSubscriptions[subscriptionId];\n          }\n        };\n      };\n\n      this.OnDisposed = function (disposedCallback) {\n        _this.ThrowIfDisposed();\n\n        var subscriptionId = _this.subscriptionIdCounter++;\n        _this.disposedSubscriptions[subscriptionId] = disposedCallback;\n        return {\n          Detach: function Detach() {\n            delete _this.disposedSubscriptions[subscriptionId];\n          }\n        };\n      };\n\n      this.Join = function (seperator) {\n        _this.ThrowIfDisposed();\n\n        return _this.list.join(seperator);\n      };\n\n      this.ToArray = function () {\n        var cloneCopy = Array();\n\n        _this.list.forEach(function (val) {\n          cloneCopy.push(val);\n        });\n\n        return cloneCopy;\n      };\n\n      this.Any = function (callback) {\n        _this.ThrowIfDisposed();\n\n        if (callback) {\n          return _this.Where(callback).Length() > 0;\n        } else {\n          return _this.Length() > 0;\n        }\n      };\n\n      this.All = function (callback) {\n        _this.ThrowIfDisposed();\n\n        return _this.Where(callback).Length() === _this.Length();\n      };\n\n      this.ForEach = function (callback) {\n        _this.ThrowIfDisposed();\n\n        for (var i = 0; i < _this.Length(); i++) {\n          callback(_this.list[i], i);\n        }\n      };\n\n      this.Select = function (callback) {\n        _this.ThrowIfDisposed();\n\n        var selectList = [];\n\n        for (var i = 0; i < _this.list.length; i++) {\n          selectList.push(callback(_this.list[i], i));\n        }\n\n        return new List(selectList);\n      };\n\n      this.Where = function (callback) {\n        _this.ThrowIfDisposed();\n\n        var filteredList = new List();\n\n        for (var i = 0; i < _this.list.length; i++) {\n          if (callback(_this.list[i], i)) {\n            filteredList.Add(_this.list[i]);\n          }\n        }\n\n        return filteredList;\n      };\n\n      this.OrderBy = function (compareFn) {\n        _this.ThrowIfDisposed();\n\n        var clonedArray = _this.ToArray();\n\n        var orderedArray = clonedArray.sort(compareFn);\n        return new List(orderedArray);\n      };\n\n      this.OrderByDesc = function (compareFn) {\n        _this.ThrowIfDisposed();\n\n        return _this.OrderBy(function (a, b) {\n          return compareFn(b, a);\n        });\n      };\n\n      this.Clone = function () {\n        _this.ThrowIfDisposed();\n\n        return new List(_this.ToArray());\n      };\n\n      this.Concat = function (list) {\n        _this.ThrowIfDisposed();\n\n        return new List(_this.list.concat(list.ToArray()));\n      };\n\n      this.ConcatArray = function (array) {\n        _this.ThrowIfDisposed();\n\n        return new List(_this.list.concat(array));\n      };\n\n      this.IsDisposed = function () {\n        return _this.list == null;\n      };\n\n      this.Dispose = function (reason) {\n        if (!_this.IsDisposed()) {\n          _this.disposeReason = reason;\n          _this.list = null;\n          _this.addSubscriptions = null;\n          _this.removeSubscriptions = null;\n\n          _this.TriggerSubscriptions(_this.disposedSubscriptions);\n        }\n      };\n\n      this.ThrowIfDisposed = function () {\n        if (_this.IsDisposed()) {\n          throw new Error_1.ObjectDisposedError(\"List\", _this.disposeReason);\n        }\n      };\n\n      this.TriggerSubscriptions = function (subscriptions) {\n        if (subscriptions) {\n          for (var subscriptionId in subscriptions) {\n            if (subscriptionId) {\n              subscriptions[subscriptionId]();\n            }\n          }\n        }\n      };\n\n      this.list = []; // copy the list rather than taking as is.\n\n      if (list) {\n        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n          var item = list_1[_i];\n          this.list.push(item);\n        }\n      }\n    }\n\n    return List;\n  }();\n\n  exports.List = List;\n  /***/\n},\n/* 15 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var PromiseState;\n\n  (function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n  })(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\n\n  var PromiseResult =\n  /** @class */\n  function () {\n    function PromiseResult(promiseResultEventSource) {\n      var _this = this;\n\n      this.ThrowIfError = function () {\n        if (_this.IsError) {\n          throw _this.Error;\n        }\n      };\n\n      promiseResultEventSource.On(function (result) {\n        if (!_this.isCompleted) {\n          _this.isCompleted = true;\n          _this.isError = false;\n          _this.result = result;\n        }\n      }, function (error) {\n        if (!_this.isCompleted) {\n          _this.isCompleted = true;\n          _this.isError = true;\n          _this.error = error;\n        }\n      });\n    }\n\n    Object.defineProperty(PromiseResult.prototype, \"IsCompleted\", {\n      get: function get() {\n        return this.isCompleted;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"IsError\", {\n      get: function get() {\n        return this.isError;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"Error\", {\n      get: function get() {\n        return this.error;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"Result\", {\n      get: function get() {\n        return this.result;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return PromiseResult;\n  }();\n\n  exports.PromiseResult = PromiseResult; // tslint:disable-next-line:max-classes-per-file\n\n  var PromiseResultEventSource =\n  /** @class */\n  function () {\n    function PromiseResultEventSource() {\n      var _this = this;\n\n      this.SetResult = function (result) {\n        _this.onSetResult(result);\n      };\n\n      this.SetError = function (error) {\n        _this.onSetError(error);\n      };\n\n      this.On = function (onSetResult, onSetError) {\n        _this.onSetResult = onSetResult;\n        _this.onSetError = onSetError;\n      };\n    }\n\n    return PromiseResultEventSource;\n  }();\n\n  exports.PromiseResultEventSource = PromiseResultEventSource; // tslint:disable-next-line:max-classes-per-file\n\n  var PromiseHelper =\n  /** @class */\n  function () {\n    function PromiseHelper() {}\n\n    PromiseHelper.WhenAll = function (promises) {\n      if (!promises || promises.length === 0) {\n        throw new Error_1.ArgumentNullError(\"promises\");\n      }\n\n      var deferred = new Deferred();\n      var errors = [];\n      var completedPromises = 0;\n\n      var checkForCompletion = function checkForCompletion() {\n        completedPromises++;\n\n        if (completedPromises === promises.length) {\n          if (errors.length === 0) {\n            deferred.Resolve(true);\n          } else {\n            deferred.Reject(errors.join(\", \"));\n          }\n        }\n      };\n\n      for (var _i = 0, promises_1 = promises; _i < promises_1.length; _i++) {\n        var promise = promises_1[_i];\n        promise.On(function (r) {\n          checkForCompletion();\n        }, function (e) {\n          errors.push(e);\n          checkForCompletion();\n        });\n      }\n\n      return deferred.Promise();\n    };\n\n    PromiseHelper.FromResult = function (result) {\n      var deferred = new Deferred();\n      deferred.Resolve(result);\n      return deferred.Promise();\n    };\n\n    PromiseHelper.FromError = function (error) {\n      var deferred = new Deferred();\n      deferred.Reject(error);\n      return deferred.Promise();\n    };\n\n    return PromiseHelper;\n  }();\n\n  exports.PromiseHelper = PromiseHelper; // TODO: replace with ES6 promises\n  // tslint:disable-next-line:max-classes-per-file\n\n  var Promise =\n  /** @class */\n  function () {\n    function Promise(sink) {\n      var _this = this;\n\n      this.Result = function () {\n        return _this.sink.Result;\n      };\n\n      this.ContinueWith = function (continuationCallback) {\n        if (!continuationCallback) {\n          throw new Error_1.ArgumentNullError(\"continuationCallback\");\n        }\n\n        var continuationDeferral = new Deferred();\n\n        _this.sink.on(function (r) {\n          try {\n            var continuationResult = continuationCallback(_this.sink.Result);\n            continuationDeferral.Resolve(continuationResult);\n          } catch (e) {\n            continuationDeferral.Reject(e);\n          }\n        }, function (error) {\n          try {\n            var continuationResult = continuationCallback(_this.sink.Result);\n            continuationDeferral.Resolve(continuationResult);\n          } catch (e) {\n            continuationDeferral.Reject(\"'Error handler for error \" + error + \" threw error \" + e + \"'\");\n          }\n        });\n\n        return continuationDeferral.Promise();\n      };\n\n      this.OnSuccessContinueWith = function (continuationCallback) {\n        if (!continuationCallback) {\n          throw new Error_1.ArgumentNullError(\"continuationCallback\");\n        }\n\n        var continuationDeferral = new Deferred();\n\n        _this.sink.on(function (r) {\n          try {\n            var continuationResult = continuationCallback(r);\n            continuationDeferral.Resolve(continuationResult);\n          } catch (e) {\n            continuationDeferral.Reject(e);\n          }\n        }, function (error) {\n          continuationDeferral.Reject(error);\n        });\n\n        return continuationDeferral.Promise();\n      };\n\n      this.ContinueWithPromise = function (continuationCallback) {\n        if (!continuationCallback) {\n          throw new Error_1.ArgumentNullError(\"continuationCallback\");\n        }\n\n        var continuationDeferral = new Deferred();\n\n        _this.sink.on(function (r) {\n          try {\n            var continuationPromise = continuationCallback(_this.sink.Result);\n\n            if (!continuationPromise) {\n              throw new Error(\"'Continuation callback did not return promise'\");\n            }\n\n            continuationPromise.On(function (continuationResult) {\n              continuationDeferral.Resolve(continuationResult);\n            }, function (e) {\n              continuationDeferral.Reject(e);\n            });\n          } catch (e) {\n            continuationDeferral.Reject(e);\n          }\n        }, function (error) {\n          try {\n            var continuationPromise = continuationCallback(_this.sink.Result);\n\n            if (!continuationPromise) {\n              throw new Error(\"Continuation callback did not return promise\");\n            }\n\n            continuationPromise.On(function (continuationResult) {\n              continuationDeferral.Resolve(continuationResult);\n            }, function (e) {\n              continuationDeferral.Reject(e);\n            });\n          } catch (e) {\n            continuationDeferral.Reject(\"'Error handler for error \" + error + \" threw error \" + e + \"'\");\n          }\n        });\n\n        return continuationDeferral.Promise();\n      };\n\n      this.OnSuccessContinueWithPromise = function (continuationCallback) {\n        if (!continuationCallback) {\n          throw new Error_1.ArgumentNullError(\"continuationCallback\");\n        }\n\n        var continuationDeferral = new Deferred();\n\n        _this.sink.on(function (r) {\n          try {\n            var continuationPromise = continuationCallback(r);\n\n            if (!continuationPromise) {\n              throw new Error(\"Continuation callback did not return promise\");\n            }\n\n            continuationPromise.On(function (continuationResult) {\n              continuationDeferral.Resolve(continuationResult);\n            }, function (e) {\n              continuationDeferral.Reject(e);\n            });\n          } catch (e) {\n            continuationDeferral.Reject(e);\n          }\n        }, function (error) {\n          continuationDeferral.Reject(error);\n        });\n\n        return continuationDeferral.Promise();\n      };\n\n      this.On = function (successCallback, errorCallback) {\n        if (!successCallback) {\n          throw new Error_1.ArgumentNullError(\"successCallback\");\n        }\n\n        if (!errorCallback) {\n          throw new Error_1.ArgumentNullError(\"errorCallback\");\n        }\n\n        _this.sink.on(successCallback, errorCallback);\n\n        return _this;\n      };\n\n      this.Finally = function (callback) {\n        if (!callback) {\n          throw new Error_1.ArgumentNullError(\"callback\");\n        }\n\n        var callbackWrapper = function callbackWrapper(_) {\n          callback();\n        };\n\n        return _this.On(callbackWrapper, callbackWrapper);\n      };\n\n      this.sink = sink;\n    }\n\n    return Promise;\n  }();\n\n  exports.Promise = Promise; // tslint:disable-next-line:max-classes-per-file\n\n  var Deferred =\n  /** @class */\n  function () {\n    function Deferred() {\n      var _this = this;\n\n      this.State = function () {\n        return _this.sink.State;\n      };\n\n      this.Promise = function () {\n        return _this.promise;\n      };\n\n      this.Resolve = function (result) {\n        _this.sink.Resolve(result);\n\n        return _this;\n      };\n\n      this.Reject = function (error) {\n        _this.sink.Reject(error);\n\n        return _this;\n      };\n\n      this.sink = new Sink();\n      this.promise = new Promise(this.sink);\n    }\n\n    return Deferred;\n  }();\n\n  exports.Deferred = Deferred; // tslint:disable-next-line:max-classes-per-file\n\n  var Sink =\n  /** @class */\n  function () {\n    function Sink() {\n      var _this = this;\n\n      this.state = PromiseState.None;\n      this.promiseResult = null;\n      this.promiseResultEvents = null;\n      this.successHandlers = [];\n      this.errorHandlers = [];\n\n      this.Resolve = function (result) {\n        if (_this.state !== PromiseState.None) {\n          throw new Error(\"'Cannot resolve a completed promise'\");\n        }\n\n        _this.state = PromiseState.Resolved;\n\n        _this.promiseResultEvents.SetResult(result);\n\n        for (var i = 0; i < _this.successHandlers.length; i++) {\n          _this.ExecuteSuccessCallback(result, _this.successHandlers[i], _this.errorHandlers[i]);\n        }\n\n        _this.DetachHandlers();\n      };\n\n      this.Reject = function (error) {\n        if (_this.state !== PromiseState.None) {\n          throw new Error(\"'Cannot reject a completed promise'\");\n        }\n\n        _this.state = PromiseState.Rejected;\n\n        _this.promiseResultEvents.SetError(error);\n\n        for (var _i = 0, _a = _this.errorHandlers; _i < _a.length; _i++) {\n          var errorHandler = _a[_i];\n\n          _this.ExecuteErrorCallback(error, errorHandler);\n        }\n\n        _this.DetachHandlers();\n      };\n\n      this.on = function (successCallback, errorCallback) {\n        if (successCallback == null) {\n          successCallback = function successCallback(r) {\n            return;\n          };\n        }\n\n        if (_this.state === PromiseState.None) {\n          _this.successHandlers.push(successCallback);\n\n          _this.errorHandlers.push(errorCallback);\n        } else {\n          if (_this.state === PromiseState.Resolved) {\n            _this.ExecuteSuccessCallback(_this.promiseResult.Result, successCallback, errorCallback);\n          } else if (_this.state === PromiseState.Rejected) {\n            _this.ExecuteErrorCallback(_this.promiseResult.Error, errorCallback);\n          }\n\n          _this.DetachHandlers();\n        }\n      };\n\n      this.ExecuteSuccessCallback = function (result, successCallback, errorCallback) {\n        try {\n          successCallback(result);\n        } catch (e) {\n          _this.ExecuteErrorCallback(\"'Unhandled callback error: \" + e + \"'\", errorCallback);\n        }\n      };\n\n      this.ExecuteErrorCallback = function (error, errorCallback) {\n        if (errorCallback) {\n          try {\n            errorCallback(error);\n          } catch (e) {\n            throw new Error(\"'Unhandled callback error: \" + e + \". InnerError: \" + error + \"'\");\n          }\n        } else {\n          throw new Error(\"'Unhandled error: \" + error + \"'\");\n        }\n      };\n\n      this.DetachHandlers = function () {\n        _this.errorHandlers = [];\n        _this.successHandlers = [];\n      };\n\n      this.promiseResultEvents = new PromiseResultEventSource();\n      this.promiseResult = new PromiseResult(this.promiseResultEvents);\n    }\n\n    Object.defineProperty(Sink.prototype, \"State\", {\n      get: function get() {\n        return this.state;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Sink.prototype, \"Result\", {\n      get: function get() {\n        return this.promiseResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return Sink;\n  }();\n\n  exports.Sink = Sink;\n  /***/\n},\n/* 16 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var List_1 = __webpack_require__(14);\n\n  var Promise_1 = __webpack_require__(15);\n\n  var SubscriberType;\n\n  (function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n  })(SubscriberType || (SubscriberType = {}));\n\n  var Queue =\n  /** @class */\n  function () {\n    function Queue(list) {\n      var _this = this;\n\n      this.promiseStore = new List_1.List();\n      this.isDrainInProgress = false;\n      this.isDisposing = false;\n      this.disposeReason = null;\n\n      this.Enqueue = function (item) {\n        _this.ThrowIfDispose();\n\n        _this.EnqueueFromPromise(Promise_1.PromiseHelper.FromResult(item));\n      };\n\n      this.EnqueueFromPromise = function (promise) {\n        _this.ThrowIfDispose();\n\n        _this.promiseStore.Add(promise);\n\n        promise.Finally(function () {\n          while (_this.promiseStore.Length() > 0) {\n            if (!_this.promiseStore.First().Result().IsCompleted) {\n              break;\n            } else {\n              var p = _this.promiseStore.RemoveFirst();\n\n              if (!p.Result().IsError) {\n                _this.list.Add(p.Result().Result);\n              } else {// TODO: Log as warning.\n              }\n            }\n          }\n        });\n      };\n\n      this.Dequeue = function () {\n        _this.ThrowIfDispose();\n\n        var deferredSubscriber = new Promise_1.Deferred();\n\n        if (_this.subscribers) {\n          _this.subscribers.Add({\n            deferral: deferredSubscriber,\n            type: SubscriberType.Dequeue\n          });\n\n          _this.Drain();\n        }\n\n        return deferredSubscriber.Promise();\n      };\n\n      this.Peek = function () {\n        _this.ThrowIfDispose();\n\n        var deferredSubscriber = new Promise_1.Deferred();\n        var subs = _this.subscribers;\n\n        if (subs) {\n          _this.subscribers.Add({\n            deferral: deferredSubscriber,\n            type: SubscriberType.Peek\n          });\n\n          _this.Drain();\n        }\n\n        return deferredSubscriber.Promise();\n      };\n\n      this.Length = function () {\n        _this.ThrowIfDispose();\n\n        return _this.list.Length();\n      };\n\n      this.IsDisposed = function () {\n        return _this.subscribers == null;\n      };\n\n      this.DrainAndDispose = function (pendingItemProcessor, reason) {\n        if (!_this.IsDisposed() && !_this.isDisposing) {\n          _this.disposeReason = reason;\n          _this.isDisposing = true;\n          var subs = _this.subscribers;\n\n          if (subs) {\n            while (subs.Length() > 0) {\n              var subscriber = subs.RemoveFirst(); // TODO: this needs work (Resolve(null) instead?).\n\n              subscriber.deferral.Resolve(undefined); // subscriber.deferral.Reject(\"Disposed\");\n            } // note: this block assumes cooperative multitasking, i.e.,\n            // between the if-statement and the assignment there are no\n            // thread switches.\n            // Reason is that between the initial const = this.; and this\n            // point there is the derral.Resolve() operation that might have\n            // caused recursive calls to the Queue, especially, calling\n            // Dispose() on the queue alredy (which would reset the var\n            // here to null!).\n            // That should generally hold true for javascript...\n\n\n            if (_this.subscribers === subs) {\n              _this.subscribers = subs;\n            }\n          }\n\n          for (var _i = 0, _a = _this.detachables; _i < _a.length; _i++) {\n            var detachable = _a[_i];\n            detachable.Detach();\n          }\n\n          if (_this.promiseStore.Length() > 0 && pendingItemProcessor) {\n            return Promise_1.PromiseHelper.WhenAll(_this.promiseStore.ToArray()).ContinueWith(function () {\n              _this.subscribers = null;\n\n              _this.list.ForEach(function (item, index) {\n                pendingItemProcessor(item);\n              });\n\n              _this.list = null;\n              return true;\n            });\n          } else {\n            _this.subscribers = null;\n            _this.list = null;\n          }\n        }\n\n        return Promise_1.PromiseHelper.FromResult(true);\n      };\n\n      this.Dispose = function (reason) {\n        _this.DrainAndDispose(null, reason);\n      };\n\n      this.Drain = function () {\n        if (!_this.isDrainInProgress && !_this.isDisposing) {\n          _this.isDrainInProgress = true;\n          var subs = _this.subscribers;\n          var lists = _this.list;\n\n          if (subs && lists) {\n            while (lists.Length() > 0 && subs.Length() > 0 && !_this.isDisposing) {\n              var subscriber = subs.RemoveFirst();\n\n              if (subscriber.type === SubscriberType.Peek) {\n                subscriber.deferral.Resolve(lists.First());\n              } else {\n                var dequeuedItem = lists.RemoveFirst();\n                subscriber.deferral.Resolve(dequeuedItem);\n              }\n            } // note: this block assumes cooperative multitasking, i.e.,\n            // between the if-statement and the assignment there are no\n            // thread switches.\n            // Reason is that between the initial const = this.; and this\n            // point there is the derral.Resolve() operation that might have\n            // caused recursive calls to the Queue, especially, calling\n            // Dispose() on the queue alredy (which would reset the var\n            // here to null!).\n            // That should generally hold true for javascript...\n\n\n            if (_this.subscribers === subs) {\n              _this.subscribers = subs;\n            } // note: this block assumes cooperative multitasking, i.e.,\n            // between the if-statement and the assignment there are no\n            // thread switches.\n            // Reason is that between the initial const = this.; and this\n            // point there is the derral.Resolve() operation that might have\n            // caused recursive calls to the Queue, especially, calling\n            // Dispose() on the queue alredy (which would reset the var\n            // here to null!).\n            // That should generally hold true for javascript...\n\n\n            if (_this.list === lists) {\n              _this.list = lists;\n            }\n          }\n\n          _this.isDrainInProgress = false;\n        }\n      };\n\n      this.ThrowIfDispose = function () {\n        if (_this.IsDisposed()) {\n          if (_this.disposeReason) {\n            throw new Error_1.InvalidOperationError(_this.disposeReason);\n          }\n\n          throw new Error_1.ObjectDisposedError(\"Queue\");\n        } else if (_this.isDisposing) {\n          throw new Error_1.InvalidOperationError(\"Queue disposing\");\n        }\n      };\n\n      this.list = list ? list : new List_1.List();\n      this.detachables = [];\n      this.subscribers = new List_1.List();\n      this.detachables.push(this.list.OnAdded(this.Drain));\n    }\n\n    return Queue;\n  }();\n\n  exports.Queue = Queue;\n  /***/\n},\n/* 17 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Guid_1 = __webpack_require__(5);\n\n  var Exports_1 = __webpack_require__(1);\n\n  var Exports_2 = __webpack_require__(0);\n\n  var AudioStreamFormat_1 = __webpack_require__(18);\n\n  var bufferSize = 4096;\n  /**\n   * Represents audio input stream used for custom audio input configurations.\n   * @class AudioInputStream\n   */\n\n  var AudioInputStream =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    function AudioInputStream() {}\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the push audio stream's write() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n\n\n    AudioInputStream.createPushStream = function (format) {\n      return PushAudioInputStream.create(format);\n    };\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read() and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n\n\n    AudioInputStream.createPullStream = function (callback, format) {\n      return PullAudioInputStream.create(callback, format); // throw new Error(\"Oops\");\n    };\n\n    return AudioInputStream;\n  }();\n\n  exports.AudioInputStream = AudioInputStream;\n  /**\n   * Represents memory backed push audio input stream used for custom audio input configurations.\n   * @class PushAudioInputStream\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var PushAudioInputStream =\n  /** @class */\n  function (_super) {\n    __extends(PushAudioInputStream, _super);\n\n    function PushAudioInputStream() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the push audio stream's write() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n\n\n    PushAudioInputStream.create = function (format) {\n      return new PushAudioInputStreamImpl(format);\n    };\n\n    return PushAudioInputStream;\n  }(AudioInputStream);\n\n  exports.PushAudioInputStream = PushAudioInputStream;\n  /**\n   * Represents memory backed push audio input stream used for custom audio input configurations.\n   * @private\n   * @class PushAudioInputStreamImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var PushAudioInputStreamImpl =\n  /** @class */\n  function (_super) {\n    __extends(PushAudioInputStreamImpl, _super);\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n\n\n    function PushAudioInputStreamImpl(format) {\n      var _this = _super.call(this) || this;\n\n      _this.stream = new Exports_1.Stream();\n\n      _this.OnEvent = function (event) {\n        _this.events.OnEvent(event);\n\n        Exports_1.Events.Instance.OnEvent(event);\n      };\n\n      if (format === undefined) {\n        _this.format = AudioStreamFormat_1.AudioStreamFormatImpl.getDefaultInputFormat();\n      } else {\n        _this.format = format;\n      }\n\n      _this.events = new Exports_1.EventSource();\n      _this.id = Guid_1.CreateNoDashGuid();\n      return _this;\n    }\n\n    Object.defineProperty(PushAudioInputStreamImpl.prototype, \"Format\", {\n      /**\n       * Format information for the audio\n       */\n      get: function get() {\n        return this.format;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n\n    PushAudioInputStreamImpl.prototype.write = function (dataBuffer) {\n      // Break the data up into smaller chunks if needed.\n      var i;\n\n      for (i = bufferSize - 1; i < dataBuffer.byteLength; i += bufferSize) {\n        this.stream.Write(dataBuffer.slice(i - (bufferSize - 1), i + 1));\n      }\n\n      if (i - (bufferSize - 1) !== dataBuffer.byteLength) {\n        this.stream.Write(dataBuffer.slice(i - (bufferSize - 1), dataBuffer.byteLength));\n      }\n    };\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n\n\n    PushAudioInputStreamImpl.prototype.close = function () {\n      this.stream.Close();\n    };\n\n    PushAudioInputStreamImpl.prototype.Id = function () {\n      return this.id;\n    };\n\n    PushAudioInputStreamImpl.prototype.TurnOn = function () {\n      this.OnEvent(new Exports_1.AudioSourceInitializingEvent(this.id)); // no stream id\n\n      this.OnEvent(new Exports_1.AudioSourceReadyEvent(this.id));\n      return Exports_1.PromiseHelper.FromResult(true);\n    };\n\n    PushAudioInputStreamImpl.prototype.Attach = function (audioNodeId) {\n      var _this = this;\n\n      this.OnEvent(new Exports_1.AudioStreamNodeAttachingEvent(this.id, audioNodeId));\n      return this.TurnOn().OnSuccessContinueWith(function (_) {\n        // For now we support a single parallel reader of the pushed stream.\n        // So we can simiply hand the stream to the recognizer and let it recognize.\n        return _this.stream.GetReader();\n      }).OnSuccessContinueWith(function (streamReader) {\n        _this.OnEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.id, audioNodeId));\n\n        return {\n          Detach: function Detach() {\n            streamReader.Close();\n\n            _this.OnEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n\n            _this.TurnOff();\n          },\n          Id: function Id() {\n            return audioNodeId;\n          },\n          Read: function Read() {\n            return streamReader.Read();\n          }\n        };\n      });\n    };\n\n    PushAudioInputStreamImpl.prototype.Detach = function (audioNodeId) {\n      this.OnEvent(new Exports_1.AudioStreamNodeDetachedEvent(this.id, audioNodeId));\n    };\n\n    PushAudioInputStreamImpl.prototype.TurnOff = function () {\n      return Exports_1.PromiseHelper.FromResult(false);\n    };\n\n    Object.defineProperty(PushAudioInputStreamImpl.prototype, \"Events\", {\n      get: function get() {\n        return this.events;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return PushAudioInputStreamImpl;\n  }(PushAudioInputStream);\n\n  exports.PushAudioInputStreamImpl = PushAudioInputStreamImpl;\n  /*\n   * Represents audio input stream used for custom audio input configurations.\n   * @class PullAudioInputStream\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var PullAudioInputStream =\n  /** @class */\n  function (_super) {\n    __extends(PullAudioInputStream, _super);\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n\n\n    function PullAudioInputStream() {\n      return _super.call(this) || this;\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n\n\n    PullAudioInputStream.create = function (callback, format) {\n      return new PullAudioInputStreamImpl(callback, format);\n    };\n\n    return PullAudioInputStream;\n  }(AudioInputStream);\n\n  exports.PullAudioInputStream = PullAudioInputStream;\n  /**\n   * Represents audio input stream used for custom audio input configurations.\n   * @private\n   * @class PullAudioInputStreamImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var PullAudioInputStreamImpl =\n  /** @class */\n  function (_super) {\n    __extends(PullAudioInputStreamImpl, _super);\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     */\n\n\n    function PullAudioInputStreamImpl(callback, format) {\n      var _this = _super.call(this) || this;\n\n      _this.OnEvent = function (event) {\n        _this.events.OnEvent(event);\n\n        Exports_1.Events.Instance.OnEvent(event);\n      };\n\n      if (undefined === format) {\n        _this.format = Exports_2.AudioStreamFormat.getDefaultInputFormat();\n      } else {\n        _this.format = format;\n      }\n\n      _this.events = new Exports_1.EventSource();\n      _this.id = Guid_1.CreateNoDashGuid();\n      _this.callback = callback;\n      _this.isClosed = false;\n      return _this;\n    }\n\n    Object.defineProperty(PullAudioInputStreamImpl.prototype, \"Format\", {\n      /**\n       * Format information for the audio\n       */\n      get: function get() {\n        return this.format;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n\n    PullAudioInputStreamImpl.prototype.close = function () {\n      this.isClosed = true;\n      this.callback.close();\n    };\n\n    PullAudioInputStreamImpl.prototype.Id = function () {\n      return this.id;\n    };\n\n    PullAudioInputStreamImpl.prototype.TurnOn = function () {\n      this.OnEvent(new Exports_1.AudioSourceInitializingEvent(this.id)); // no stream id\n\n      this.OnEvent(new Exports_1.AudioSourceReadyEvent(this.id));\n      return Exports_1.PromiseHelper.FromResult(true);\n    };\n\n    PullAudioInputStreamImpl.prototype.Attach = function (audioNodeId) {\n      var _this = this;\n\n      this.OnEvent(new Exports_1.AudioStreamNodeAttachingEvent(this.id, audioNodeId));\n      return this.TurnOn().OnSuccessContinueWith(function (result) {\n        _this.OnEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.id, audioNodeId));\n\n        return {\n          Detach: function Detach() {\n            _this.callback.close();\n\n            _this.OnEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n\n            _this.TurnOff();\n          },\n          Id: function Id() {\n            return audioNodeId;\n          },\n          Read: function Read() {\n            var readBuff = new ArrayBuffer(bufferSize);\n\n            var pulledBytes = _this.callback.read(readBuff);\n\n            return Exports_1.PromiseHelper.FromResult({\n              Buffer: readBuff.slice(0, pulledBytes),\n              IsEnd: _this.isClosed\n            });\n          }\n        };\n      });\n    };\n\n    PullAudioInputStreamImpl.prototype.Detach = function (audioNodeId) {\n      this.OnEvent(new Exports_1.AudioStreamNodeDetachedEvent(this.id, audioNodeId));\n    };\n\n    PullAudioInputStreamImpl.prototype.TurnOff = function () {\n      return Exports_1.PromiseHelper.FromResult(false);\n    };\n\n    Object.defineProperty(PullAudioInputStreamImpl.prototype, \"Events\", {\n      get: function get() {\n        return this.events;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return PullAudioInputStreamImpl;\n  }(PullAudioInputStream);\n\n  exports.PullAudioInputStreamImpl = PullAudioInputStreamImpl;\n  /***/\n},\n/* 18 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Represents audio stream format used for custom audio input configurations.\n   * @class AudioStreamFormat\n   */\n\n  var AudioStreamFormat =\n  /** @class */\n  function () {\n    function AudioStreamFormat() {}\n    /**\n     * Creates an audio stream format object representing the default audio stream format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n\n\n    AudioStreamFormat.getDefaultInputFormat = function () {\n      return AudioStreamFormatImpl.getDefaultInputFormat();\n    };\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n\n\n    AudioStreamFormat.getWaveFormatPCM = function (samplesPerSecond, bitsPerSample, channels) {\n      return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    };\n\n    return AudioStreamFormat;\n  }();\n\n  exports.AudioStreamFormat = AudioStreamFormat;\n  /**\n   * @private\n   * @class AudioStreamFormatImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamFormatImpl =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamFormatImpl, _super);\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     */\n\n\n    function AudioStreamFormatImpl(samplesPerSec, bitsPerSample, channels) {\n      if (samplesPerSec === void 0) {\n        samplesPerSec = 16000;\n      }\n\n      if (bitsPerSample === void 0) {\n        bitsPerSample = 16;\n      }\n\n      if (channels === void 0) {\n        channels = 1;\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.formatTag = 1;\n      _this.bitsPerSample = bitsPerSample;\n      _this.samplesPerSec = samplesPerSec;\n      _this.channels = channels;\n      _this.avgBytesPerSec = _this.samplesPerSec * _this.channels * (_this.bitsPerSample / 8);\n      _this.blockAlign = _this.channels * Math.max(_this.bitsPerSample, 8);\n      return _this;\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n\n\n    AudioStreamFormatImpl.getDefaultInputFormat = function () {\n      return new AudioStreamFormatImpl();\n    };\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n\n\n    AudioStreamFormatImpl.prototype.close = function () {\n      return;\n    };\n\n    return AudioStreamFormatImpl;\n  }(AudioStreamFormat);\n\n  exports.AudioStreamFormatImpl = AudioStreamFormatImpl;\n  /***/\n},\n/* 19 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(6);\n\n  var Exports_2 = __webpack_require__(2);\n\n  var Exports_3 = __webpack_require__(1);\n\n  var Exports_4 = __webpack_require__(0);\n\n  var Exports_5 = __webpack_require__(2);\n\n  var QueryParameterNames_1 = __webpack_require__(62);\n\n  var SpeechConnectionFactory =\n  /** @class */\n  function () {\n    function SpeechConnectionFactory() {\n      var _this = this;\n\n      this.Create = function (config, authInfo, connectionId) {\n        var endpoint = config.parameters.getProperty(Exports_4.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        var queryParams = {};\n        var endpointId = config.parameters.getProperty(Exports_4.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        var language = config.parameters.getProperty(Exports_4.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n\n        if (endpointId) {\n          if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.DeploymentIdParamName) === -1) {\n            queryParams[QueryParameterNames_1.QueryParameterNames.DeploymentIdParamName] = endpointId;\n          }\n        } else if (language) {\n          if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.LanguageParamName) === -1) {\n            queryParams[QueryParameterNames_1.QueryParameterNames.LanguageParamName] = language;\n          }\n        }\n\n        if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.FormatParamName) === -1) {\n          queryParams[QueryParameterNames_1.QueryParameterNames.FormatParamName] = config.parameters.getProperty(Exports_2.OutputFormatPropertyName, Exports_4.OutputFormat[Exports_4.OutputFormat.Simple]).toLowerCase();\n        }\n\n        if (_this.IsDebugModeEnabled) {\n          queryParams[QueryParameterNames_1.QueryParameterNames.TestHooksParamName] = \"1\";\n        }\n\n        if (!endpoint) {\n          var region = config.parameters.getProperty(Exports_4.PropertyId.SpeechServiceConnection_Region, undefined);\n\n          switch (config.RecognitionMode) {\n            case Exports_5.RecognitionMode.Conversation:\n              endpoint = _this.Host(region) + _this.ConversationRelativeUri;\n              break;\n\n            case Exports_5.RecognitionMode.Dictation:\n              endpoint = _this.Host(region) + _this.DictationRelativeUri;\n              break;\n\n            default:\n              endpoint = _this.Host(region) + _this.InteractiveRelativeUri; // default is interactive\n\n              break;\n          }\n        }\n\n        var headers = {};\n        headers[authInfo.HeaderName] = authInfo.Token;\n        headers[QueryParameterNames_1.QueryParameterNames.ConnectionIdHeader] = connectionId;\n        return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_5.WebsocketMessageFormatter(), connectionId);\n      };\n    }\n\n    SpeechConnectionFactory.prototype.Host = function (region) {\n      return Exports_3.Storage.Local.GetOrAdd(\"Host\", \"wss://\" + region + \".stt.speech.microsoft.com\");\n    };\n\n    Object.defineProperty(SpeechConnectionFactory.prototype, \"InteractiveRelativeUri\", {\n      get: function get() {\n        return Exports_3.Storage.Local.GetOrAdd(\"InteractiveRelativeUri\", \"/speech/recognition/interactive/cognitiveservices/v1\");\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionFactory.prototype, \"ConversationRelativeUri\", {\n      get: function get() {\n        return Exports_3.Storage.Local.GetOrAdd(\"ConversationRelativeUri\", \"/speech/recognition/conversation/cognitiveservices/v1\");\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionFactory.prototype, \"DictationRelativeUri\", {\n      get: function get() {\n        return Exports_3.Storage.Local.GetOrAdd(\"DictationRelativeUri\", \"/speech/recognition/dictation/cognitiveservices/v1\");\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionFactory.prototype, \"IsDebugModeEnabled\", {\n      get: function get() {\n        var value = Exports_3.Storage.Local.GetOrAdd(\"IsDebugModeEnabled\", \"false\");\n        return value.toLowerCase() === \"true\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechConnectionFactory;\n  }();\n\n  exports.SpeechConnectionFactory = SpeechConnectionFactory;\n  /***/\n},\n/* 20 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var WebsocketMessageAdapter =\n  /** @class */\n  function () {\n    function WebsocketMessageAdapter(uri, connectionId, messageFormatter) {\n      var _this = this;\n\n      this.Open = function () {\n        if (_this.connectionState === Exports_1.ConnectionState.Disconnected) {\n          return Exports_1.PromiseHelper.FromError(\"Cannot open a connection that is in \" + _this.connectionState + \" state\");\n        }\n\n        if (_this.connectionEstablishDeferral) {\n          return _this.connectionEstablishDeferral.Promise();\n        }\n\n        _this.connectionEstablishDeferral = new Exports_1.Deferred();\n        _this.connectionState = Exports_1.ConnectionState.Connecting;\n\n        try {\n          _this.websocketClient = new WebSocket(_this.uri);\n          _this.websocketClient.binaryType = \"arraybuffer\";\n          _this.receivingMessageQueue = new Exports_1.Queue();\n          _this.disconnectDeferral = new Exports_1.Deferred();\n          _this.sendMessageQueue = new Exports_1.Queue();\n\n          _this.ProcessSendQueue();\n        } catch (error) {\n          _this.connectionEstablishDeferral.Resolve(new Exports_1.ConnectionOpenResponse(500, error));\n\n          return _this.connectionEstablishDeferral.Promise();\n        }\n\n        _this.OnEvent(new Exports_1.ConnectionStartEvent(_this.connectionId, _this.uri));\n\n        _this.websocketClient.onopen = function (e) {\n          _this.connectionState = Exports_1.ConnectionState.Connected;\n\n          _this.OnEvent(new Exports_1.ConnectionEstablishedEvent(_this.connectionId));\n\n          _this.connectionEstablishDeferral.Resolve(new Exports_1.ConnectionOpenResponse(200, \"\"));\n        };\n\n        _this.websocketClient.onerror = function (e) {\n          // TODO: Understand what this is error is. Will we still get onClose ?\n          if (_this.connectionState !== Exports_1.ConnectionState.Connecting) {// TODO: Is this required ?\n            // this.OnEvent(new ConnectionErrorEvent(errorMsg, connectionId));\n          }\n        };\n\n        _this.websocketClient.onclose = function (e) {\n          if (_this.connectionState === Exports_1.ConnectionState.Connecting) {\n            _this.connectionState = Exports_1.ConnectionState.Disconnected; // this.OnEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n\n            _this.connectionEstablishDeferral.Resolve(new Exports_1.ConnectionOpenResponse(e.code, e.reason));\n          } else {\n            _this.OnEvent(new Exports_1.ConnectionClosedEvent(_this.connectionId, e.code, e.reason));\n          }\n\n          _this.OnClose(e.code, e.reason);\n        };\n\n        _this.websocketClient.onmessage = function (e) {\n          var networkReceivedTime = new Date().toISOString();\n\n          if (_this.connectionState === Exports_1.ConnectionState.Connected) {\n            var deferred_1 = new Exports_1.Deferred(); // let id = ++this.idCounter;\n\n            _this.receivingMessageQueue.EnqueueFromPromise(deferred_1.Promise());\n\n            if (e.data instanceof ArrayBuffer) {\n              var rawMessage = new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Binary, e.data);\n\n              _this.messageFormatter.ToConnectionMessage(rawMessage).On(function (connectionMessage) {\n                _this.OnEvent(new Exports_1.ConnectionMessageReceivedEvent(_this.connectionId, networkReceivedTime, connectionMessage));\n\n                deferred_1.Resolve(connectionMessage);\n              }, function (error) {\n                // TODO: Events for these ?\n                deferred_1.Reject(\"Invalid binary message format. Error: \" + error);\n              });\n            } else {\n              var rawMessage = new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Text, e.data);\n\n              _this.messageFormatter.ToConnectionMessage(rawMessage).On(function (connectionMessage) {\n                _this.OnEvent(new Exports_1.ConnectionMessageReceivedEvent(_this.connectionId, networkReceivedTime, connectionMessage));\n\n                deferred_1.Resolve(connectionMessage);\n              }, function (error) {\n                // TODO: Events for these ?\n                deferred_1.Reject(\"Invalid text message format. Error: \" + error);\n              });\n            }\n          }\n        };\n\n        return _this.connectionEstablishDeferral.Promise();\n      };\n\n      this.Send = function (message) {\n        if (_this.connectionState !== Exports_1.ConnectionState.Connected) {\n          return Exports_1.PromiseHelper.FromError(\"Cannot send on connection that is in \" + _this.connectionState + \" state\");\n        }\n\n        var messageSendStatusDeferral = new Exports_1.Deferred();\n        var messageSendDeferral = new Exports_1.Deferred();\n\n        _this.sendMessageQueue.EnqueueFromPromise(messageSendDeferral.Promise());\n\n        _this.messageFormatter.FromConnectionMessage(message).On(function (rawMessage) {\n          messageSendDeferral.Resolve({\n            Message: message,\n            RawWebsocketMessage: rawMessage,\n            SendStatusDeferral: messageSendStatusDeferral\n          });\n        }, function (error) {\n          messageSendDeferral.Reject(\"Error formatting the message. \" + error);\n        });\n\n        return messageSendStatusDeferral.Promise();\n      };\n\n      this.Read = function () {\n        if (_this.connectionState !== Exports_1.ConnectionState.Connected) {\n          return Exports_1.PromiseHelper.FromError(\"Cannot read on connection that is in \" + _this.connectionState + \" state\");\n        }\n\n        return _this.receivingMessageQueue.Dequeue();\n      };\n\n      this.Close = function (reason) {\n        if (_this.websocketClient) {\n          if (_this.connectionState !== Exports_1.ConnectionState.Disconnected) {\n            _this.websocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n          }\n        } else {\n          var deferral = new Exports_1.Deferred();\n          deferral.Resolve(true);\n          return deferral.Promise();\n        }\n\n        return _this.disconnectDeferral.Promise();\n      };\n\n      this.SendRawMessage = function (sendItem) {\n        try {\n          // indicates we are draining the queue and it came with no message;\n          if (!sendItem) {\n            return Exports_1.PromiseHelper.FromResult(true);\n          }\n\n          _this.OnEvent(new Exports_1.ConnectionMessageSentEvent(_this.connectionId, new Date().toISOString(), sendItem.Message));\n\n          _this.websocketClient.send(sendItem.RawWebsocketMessage.Payload);\n\n          return Exports_1.PromiseHelper.FromResult(true);\n        } catch (e) {\n          return Exports_1.PromiseHelper.FromError(\"websocket send error: \" + e);\n        }\n      };\n\n      this.OnClose = function (code, reason) {\n        var closeReason = \"Connection closed. \" + code + \": \" + reason;\n        _this.connectionState = Exports_1.ConnectionState.Disconnected;\n\n        _this.disconnectDeferral.Resolve(true);\n\n        _this.receivingMessageQueue.Dispose(reason);\n\n        _this.receivingMessageQueue.DrainAndDispose(function (pendingReceiveItem) {// TODO: Events for these ?\n          // Logger.Instance.OnEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n        }, closeReason);\n\n        _this.sendMessageQueue.DrainAndDispose(function (pendingSendItem) {\n          pendingSendItem.SendStatusDeferral.Reject(closeReason);\n        }, closeReason);\n      };\n\n      this.ProcessSendQueue = function () {\n        _this.sendMessageQueue.Dequeue().On(function (sendItem) {\n          // indicates we are draining the queue and it came with no message;\n          if (!sendItem) {\n            return;\n          }\n\n          _this.SendRawMessage(sendItem).On(function (result) {\n            sendItem.SendStatusDeferral.Resolve(result);\n\n            _this.ProcessSendQueue();\n          }, function (sendError) {\n            sendItem.SendStatusDeferral.Reject(sendError);\n\n            _this.ProcessSendQueue();\n          });\n        }, function (error) {// do nothing\n        });\n      };\n\n      this.OnEvent = function (event) {\n        _this.connectionEvents.OnEvent(event);\n\n        Exports_1.Events.Instance.OnEvent(event);\n      };\n\n      if (!uri) {\n        throw new Exports_1.ArgumentNullError(\"uri\");\n      }\n\n      if (!messageFormatter) {\n        throw new Exports_1.ArgumentNullError(\"messageFormatter\");\n      }\n\n      this.connectionEvents = new Exports_1.EventSource();\n      this.connectionId = connectionId;\n      this.messageFormatter = messageFormatter;\n      this.connectionState = Exports_1.ConnectionState.None;\n      this.uri = uri;\n    }\n\n    Object.defineProperty(WebsocketMessageAdapter.prototype, \"State\", {\n      get: function get() {\n        return this.connectionState;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(WebsocketMessageAdapter.prototype, \"Events\", {\n      get: function get() {\n        return this.connectionEvents;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return WebsocketMessageAdapter;\n  }();\n\n  exports.WebsocketMessageAdapter = WebsocketMessageAdapter;\n  /***/\n},\n/* 21 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  window.SpeechSDK = __webpack_require__(22);\n  /***/\n},\n/* 22 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  function __export(m) {\n    for (var p in m) {\n      if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n  }\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(6);\n\n  var Exports_2 = __webpack_require__(1); // Common.Storage.SetLocalStorage(new Common.Browser.LocalStorage());\n  // Common.Storage.SetSessionStorage(new Common.Browser.SessionStorage());\n\n\n  Exports_2.Events.Instance.AttachListener(new Exports_1.ConsoleLoggingListener()); // Speech SDK API\n\n  __export(__webpack_require__(0));\n  /***/\n\n},\n/* 23 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var ConsoleLoggingListener =\n  /** @class */\n  function () {\n    function ConsoleLoggingListener(logLevelFilter) {\n      if (logLevelFilter === void 0) {\n        logLevelFilter = Exports_1.EventType.Warning;\n      }\n\n      var _this = this;\n\n      this.OnEvent = function (event) {\n        if (event.EventType >= _this.logLevelFilter) {\n          var log = _this.ToString(event);\n\n          switch (event.EventType) {\n            case Exports_1.EventType.Debug:\n              // tslint:disable-next-line:no-console\n              console.debug(log);\n              break;\n\n            case Exports_1.EventType.Info:\n              // tslint:disable-next-line:no-console\n              console.info(log);\n              break;\n\n            case Exports_1.EventType.Warning:\n              // tslint:disable-next-line:no-console\n              console.warn(log);\n              break;\n\n            case Exports_1.EventType.Error:\n              // tslint:disable-next-line:no-console\n              console.error(log);\n              break;\n\n            default:\n              // tslint:disable-next-line:no-console\n              console.log(log);\n              break;\n          }\n        }\n      };\n\n      this.ToString = function (event) {\n        var logFragments = [\"\" + event.EventTime, \"\" + event.Name];\n\n        for (var prop in event) {\n          if (prop && event.hasOwnProperty(prop) && prop !== \"eventTime\" && prop !== \"eventType\" && prop !== \"eventId\" && prop !== \"name\" && prop !== \"constructor\") {\n            var value = event[prop];\n            var valueToLog = \"<NULL>\";\n\n            if (value !== undefined && value !== null) {\n              if (typeof value === \"number\" || typeof value === \"string\") {\n                valueToLog = value.toString();\n              } else {\n                valueToLog = JSON.stringify(value);\n              }\n            }\n\n            logFragments.push(prop + \": \" + valueToLog);\n          }\n        }\n\n        return logFragments.join(\" | \");\n      };\n\n      this.logLevelFilter = logLevelFilter;\n    }\n\n    return ConsoleLoggingListener;\n  }();\n\n  exports.ConsoleLoggingListener = ConsoleLoggingListener;\n  /***/\n},\n/* 24 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var PlatformEvent_1 = __webpack_require__(7);\n\n  var AudioSourceEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioSourceEvent, _super);\n\n    function AudioSourceEvent(eventName, audioSourceId, eventType) {\n      if (eventType === void 0) {\n        eventType = PlatformEvent_1.EventType.Info;\n      }\n\n      var _this = _super.call(this, eventName, eventType) || this;\n\n      _this.audioSourceId = audioSourceId;\n      return _this;\n    }\n\n    Object.defineProperty(AudioSourceEvent.prototype, \"AudioSourceId\", {\n      get: function get() {\n        return this.audioSourceId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AudioSourceEvent;\n  }(PlatformEvent_1.PlatformEvent);\n\n  exports.AudioSourceEvent = AudioSourceEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioSourceInitializingEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioSourceInitializingEvent, _super);\n\n    function AudioSourceInitializingEvent(audioSourceId) {\n      return _super.call(this, \"AudioSourceInitializingEvent\", audioSourceId) || this;\n    }\n\n    return AudioSourceInitializingEvent;\n  }(AudioSourceEvent);\n\n  exports.AudioSourceInitializingEvent = AudioSourceInitializingEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioSourceReadyEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioSourceReadyEvent, _super);\n\n    function AudioSourceReadyEvent(audioSourceId) {\n      return _super.call(this, \"AudioSourceReadyEvent\", audioSourceId) || this;\n    }\n\n    return AudioSourceReadyEvent;\n  }(AudioSourceEvent);\n\n  exports.AudioSourceReadyEvent = AudioSourceReadyEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioSourceOffEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioSourceOffEvent, _super);\n\n    function AudioSourceOffEvent(audioSourceId) {\n      return _super.call(this, \"AudioSourceOffEvent\", audioSourceId) || this;\n    }\n\n    return AudioSourceOffEvent;\n  }(AudioSourceEvent);\n\n  exports.AudioSourceOffEvent = AudioSourceOffEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioSourceErrorEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioSourceErrorEvent, _super);\n\n    function AudioSourceErrorEvent(audioSourceId, error) {\n      var _this = _super.call(this, \"AudioSourceErrorEvent\", audioSourceId, PlatformEvent_1.EventType.Error) || this;\n\n      _this.error = error;\n      return _this;\n    }\n\n    Object.defineProperty(AudioSourceErrorEvent.prototype, \"Error\", {\n      get: function get() {\n        return this.error;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AudioSourceErrorEvent;\n  }(AudioSourceEvent);\n\n  exports.AudioSourceErrorEvent = AudioSourceErrorEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamNodeEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamNodeEvent, _super);\n\n    function AudioStreamNodeEvent(eventName, audioSourceId, audioNodeId) {\n      var _this = _super.call(this, eventName, audioSourceId) || this;\n\n      _this.audioNodeId = audioNodeId;\n      return _this;\n    }\n\n    Object.defineProperty(AudioStreamNodeEvent.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AudioStreamNodeEvent;\n  }(AudioSourceEvent);\n\n  exports.AudioStreamNodeEvent = AudioStreamNodeEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamNodeAttachingEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamNodeAttachingEvent, _super);\n\n    function AudioStreamNodeAttachingEvent(audioSourceId, audioNodeId) {\n      return _super.call(this, \"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId) || this;\n    }\n\n    return AudioStreamNodeAttachingEvent;\n  }(AudioStreamNodeEvent);\n\n  exports.AudioStreamNodeAttachingEvent = AudioStreamNodeAttachingEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamNodeAttachedEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamNodeAttachedEvent, _super);\n\n    function AudioStreamNodeAttachedEvent(audioSourceId, audioNodeId) {\n      return _super.call(this, \"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId) || this;\n    }\n\n    return AudioStreamNodeAttachedEvent;\n  }(AudioStreamNodeEvent);\n\n  exports.AudioStreamNodeAttachedEvent = AudioStreamNodeAttachedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamNodeDetachedEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamNodeDetachedEvent, _super);\n\n    function AudioStreamNodeDetachedEvent(audioSourceId, audioNodeId) {\n      return _super.call(this, \"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId) || this;\n    }\n\n    return AudioStreamNodeDetachedEvent;\n  }(AudioStreamNodeEvent);\n\n  exports.AudioStreamNodeDetachedEvent = AudioStreamNodeDetachedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var AudioStreamNodeErrorEvent =\n  /** @class */\n  function (_super) {\n    __extends(AudioStreamNodeErrorEvent, _super);\n\n    function AudioStreamNodeErrorEvent(audioSourceId, audioNodeId, error) {\n      var _this = _super.call(this, \"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId) || this;\n\n      _this.error = error;\n      return _this;\n    }\n\n    Object.defineProperty(AudioStreamNodeErrorEvent.prototype, \"Error\", {\n      get: function get() {\n        return this.error;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AudioStreamNodeErrorEvent;\n  }(AudioStreamNodeEvent);\n\n  exports.AudioStreamNodeErrorEvent = AudioStreamNodeErrorEvent;\n  /***/\n},\n/* 25 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var PlatformEvent_1 = __webpack_require__(7);\n\n  var ConnectionEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionEvent, _super);\n\n    function ConnectionEvent(eventName, connectionId, eventType) {\n      if (eventType === void 0) {\n        eventType = PlatformEvent_1.EventType.Info;\n      }\n\n      var _this = _super.call(this, eventName, eventType) || this;\n\n      _this.connectionId = connectionId;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionEvent.prototype, \"ConnectionId\", {\n      get: function get() {\n        return this.connectionId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionEvent;\n  }(PlatformEvent_1.PlatformEvent);\n\n  exports.ConnectionEvent = ConnectionEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionStartEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionStartEvent, _super);\n\n    function ConnectionStartEvent(connectionId, uri, headers) {\n      var _this = _super.call(this, \"ConnectionStartEvent\", connectionId) || this;\n\n      _this.uri = uri;\n      _this.headers = headers;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionStartEvent.prototype, \"Uri\", {\n      get: function get() {\n        return this.uri;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionStartEvent.prototype, \"Headers\", {\n      get: function get() {\n        return this.headers;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionStartEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionStartEvent = ConnectionStartEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionEstablishedEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionEstablishedEvent, _super);\n\n    function ConnectionEstablishedEvent(connectionId, metadata) {\n      return _super.call(this, \"ConnectionEstablishedEvent\", connectionId) || this;\n    }\n\n    return ConnectionEstablishedEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionEstablishedEvent = ConnectionEstablishedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionClosedEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionClosedEvent, _super);\n\n    function ConnectionClosedEvent(connectionId, statusCode, reason) {\n      var _this = _super.call(this, \"ConnectionClosedEvent\", connectionId, PlatformEvent_1.EventType.Debug) || this;\n\n      _this.reason = reason;\n      _this.statusCode = statusCode;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionClosedEvent.prototype, \"Reason\", {\n      get: function get() {\n        return this.reason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionClosedEvent.prototype, \"StatusCode\", {\n      get: function get() {\n        return this.statusCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionClosedEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionClosedEvent = ConnectionClosedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionEstablishErrorEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionEstablishErrorEvent, _super);\n\n    function ConnectionEstablishErrorEvent(connectionId, statuscode, reason) {\n      var _this = _super.call(this, \"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_1.EventType.Error) || this;\n\n      _this.statusCode = statuscode;\n      _this.reason = reason;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionEstablishErrorEvent.prototype, \"Reason\", {\n      get: function get() {\n        return this.reason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionEstablishErrorEvent.prototype, \"StatusCode\", {\n      get: function get() {\n        return this.statusCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionEstablishErrorEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionMessageReceivedEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionMessageReceivedEvent, _super);\n\n    function ConnectionMessageReceivedEvent(connectionId, networkReceivedTimeISO, message) {\n      var _this = _super.call(this, \"ConnectionMessageReceivedEvent\", connectionId) || this;\n\n      _this.networkReceivedTime = networkReceivedTimeISO;\n      _this.message = message;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionMessageReceivedEvent.prototype, \"NetworkReceivedTime\", {\n      get: function get() {\n        return this.networkReceivedTime;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessageReceivedEvent.prototype, \"Message\", {\n      get: function get() {\n        return this.message;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionMessageReceivedEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent; // tslint:disable-next-line:max-classes-per-file\n\n  var ConnectionMessageSentEvent =\n  /** @class */\n  function (_super) {\n    __extends(ConnectionMessageSentEvent, _super);\n\n    function ConnectionMessageSentEvent(connectionId, networkSentTimeISO, message) {\n      var _this = _super.call(this, \"ConnectionMessageSentEvent\", connectionId) || this;\n\n      _this.networkSentTime = networkSentTimeISO;\n      _this.message = message;\n      return _this;\n    }\n\n    Object.defineProperty(ConnectionMessageSentEvent.prototype, \"NetworkSentTime\", {\n      get: function get() {\n        return this.networkSentTime;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionMessageSentEvent.prototype, \"Message\", {\n      get: function get() {\n        return this.message;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionMessageSentEvent;\n  }(ConnectionEvent);\n\n  exports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\n  /***/\n},\n/* 26 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var ConnectionOpenResponse =\n  /** @class */\n  function () {\n    function ConnectionOpenResponse(statusCode, reason) {\n      this.statusCode = statusCode;\n      this.reason = reason;\n    }\n\n    Object.defineProperty(ConnectionOpenResponse.prototype, \"StatusCode\", {\n      get: function get() {\n        return this.statusCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(ConnectionOpenResponse.prototype, \"Reason\", {\n      get: function get() {\n        return this.reason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return ConnectionOpenResponse;\n  }();\n\n  exports.ConnectionOpenResponse = ConnectionOpenResponse;\n  /***/\n},\n/* 27 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var EventSource_1 = __webpack_require__(12);\n\n  var Events =\n  /** @class */\n  function () {\n    function Events() {}\n\n    Object.defineProperty(Events, \"Instance\", {\n      get: function get() {\n        return Events.instance;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Events.instance = new EventSource_1.EventSource();\n\n    Events.SetEventSource = function (eventSource) {\n      if (!eventSource) {\n        throw new Error_1.ArgumentNullError(\"eventSource\");\n      }\n\n      Events.instance = eventSource;\n    };\n\n    return Events;\n  }();\n\n  exports.Events = Events;\n  /***/\n},\n/* 28 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var ConnectionState;\n\n  (function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n  })(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n  /***/\n\n},\n/* 29 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var ConnectionMessage_1 = __webpack_require__(11);\n\n  var Error_1 = __webpack_require__(3);\n\n  var Guid_1 = __webpack_require__(5);\n\n  var RawWebsocketMessage =\n  /** @class */\n  function () {\n    function RawWebsocketMessage(messageType, payload, id) {\n      this.payload = null;\n\n      if (!payload) {\n        throw new Error_1.ArgumentNullError(\"payload\");\n      }\n\n      if (messageType === ConnectionMessage_1.MessageType.Binary && !(payload instanceof ArrayBuffer)) {\n        throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n      }\n\n      if (messageType === ConnectionMessage_1.MessageType.Text && !(typeof payload === \"string\")) {\n        throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n      }\n\n      this.messageType = messageType;\n      this.payload = payload;\n      this.id = id ? id : Guid_1.CreateNoDashGuid();\n    }\n\n    Object.defineProperty(RawWebsocketMessage.prototype, \"MessageType\", {\n      get: function get() {\n        return this.messageType;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"Payload\", {\n      get: function get() {\n        return this.payload;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"TextContent\", {\n      get: function get() {\n        if (this.messageType === ConnectionMessage_1.MessageType.Binary) {\n          throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n\n        return this.payload;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"BinaryContent\", {\n      get: function get() {\n        if (this.messageType === ConnectionMessage_1.MessageType.Text) {\n          throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n        }\n\n        return this.payload;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"Id\", {\n      get: function get() {\n        return this.id;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RawWebsocketMessage;\n  }();\n\n  exports.RawWebsocketMessage = RawWebsocketMessage;\n  /***/\n},\n/* 30 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var RiffPcmEncoder =\n  /** @class */\n  function () {\n    function RiffPcmEncoder(actualSampleRate, desiredSampleRate) {\n      var _this = this;\n\n      this.channelCount = 1;\n\n      this.Encode = function (needHeader, actualAudioFrame) {\n        var audioFrame = _this.DownSampleAudioFrame(actualAudioFrame, _this.actualSampleRate, _this.desiredSampleRate);\n\n        if (!audioFrame) {\n          return null;\n        }\n\n        var audioLength = audioFrame.length * 2;\n\n        if (!needHeader) {\n          var buffer_1 = new ArrayBuffer(audioLength);\n          var view_1 = new DataView(buffer_1);\n\n          _this.FloatTo16BitPCM(view_1, 0, audioFrame);\n\n          return buffer_1;\n        }\n\n        var buffer = new ArrayBuffer(44 + audioLength);\n        var bitsPerSample = 16;\n        var bytesPerSample = bitsPerSample / 8; // We dont know ahead of time about the length of audio to stream. So set to 0.\n\n        var fileLength = 0; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n\n        var view = new DataView(buffer);\n        /* RIFF identifier */\n\n        _this.SetString(view, 0, \"RIFF\");\n        /* file length */\n\n\n        view.setUint32(4, fileLength, true);\n        /* RIFF type & Format */\n\n        _this.SetString(view, 8, \"WAVEfmt \");\n        /* format chunk length */\n\n\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n\n        view.setUint16(20, 1, true);\n        /* channel count */\n\n        view.setUint16(22, _this.channelCount, true);\n        /* sample rate */\n\n        view.setUint32(24, _this.desiredSampleRate, true);\n        /* byte rate (sample rate * block align) */\n\n        view.setUint32(28, _this.desiredSampleRate * _this.channelCount * bytesPerSample, true);\n        /* block align (channel count * bytes per sample) */\n\n        view.setUint16(32, _this.channelCount * bytesPerSample, true);\n        /* bits per sample */\n\n        view.setUint16(34, bitsPerSample, true);\n        /* data chunk identifier */\n\n        _this.SetString(view, 36, \"data\");\n        /* data chunk length */\n\n\n        view.setUint32(40, fileLength, true);\n\n        _this.FloatTo16BitPCM(view, 44, audioFrame);\n\n        return buffer;\n      };\n\n      this.SetString = function (view, offset, str) {\n        for (var i = 0; i < str.length; i++) {\n          view.setUint8(offset + i, str.charCodeAt(i));\n        }\n      };\n\n      this.FloatTo16BitPCM = function (view, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      };\n\n      this.DownSampleAudioFrame = function (srcFrame, srcRate, dstRate) {\n        if (dstRate === srcRate || dstRate > srcRate) {\n          return srcFrame;\n        }\n\n        var ratio = srcRate / dstRate;\n        var dstLength = Math.round(srcFrame.length / ratio);\n        var dstFrame = new Float32Array(dstLength);\n        var srcOffset = 0;\n        var dstOffset = 0;\n\n        while (dstOffset < dstLength) {\n          var nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n          var accum = 0;\n          var count = 0;\n\n          while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n            accum += srcFrame[srcOffset++];\n            count++;\n          }\n\n          dstFrame[dstOffset++] = accum / count;\n        }\n\n        return dstFrame;\n      };\n\n      this.actualSampleRate = actualSampleRate;\n      this.desiredSampleRate = desiredSampleRate;\n    }\n\n    return RiffPcmEncoder;\n  }();\n\n  exports.RiffPcmEncoder = RiffPcmEncoder;\n  /***/\n},\n/* 31 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var InMemoryStorage_1 = __webpack_require__(13);\n\n  var Storage =\n  /** @class */\n  function () {\n    function Storage() {}\n\n    Object.defineProperty(Storage, \"Session\", {\n      get: function get() {\n        return Storage.sessionStorage;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Storage, \"Local\", {\n      get: function get() {\n        return Storage.localStorage;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Storage.sessionStorage = new InMemoryStorage_1.InMemoryStorage();\n    Storage.localStorage = new InMemoryStorage_1.InMemoryStorage();\n\n    Storage.SetSessionStorage = function (sessionStorage) {\n      if (!sessionStorage) {\n        throw new Error_1.ArgumentNullError(\"sessionStorage\");\n      }\n\n      Storage.sessionStorage = sessionStorage;\n    };\n\n    Storage.SetLocalStorage = function (localStorage) {\n      if (!localStorage) {\n        throw new Error_1.ArgumentNullError(\"localStorage\");\n      }\n\n      Storage.localStorage = localStorage;\n    };\n\n    return Storage;\n  }();\n\n  exports.Storage = Storage;\n  /***/\n},\n/* 32 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Error_1 = __webpack_require__(3);\n\n  var Guid_1 = __webpack_require__(5);\n\n  var Queue_1 = __webpack_require__(16);\n\n  var Stream =\n  /** @class */\n  function () {\n    function Stream(streamId) {\n      var _this = this;\n\n      this.readerIdCounter = 1;\n      this.isEnded = false;\n\n      this.Write = function (buffer) {\n        _this.ThrowIfClosed();\n\n        _this.WriteStreamChunk({\n          Buffer: buffer,\n          IsEnd: false\n        });\n      };\n\n      this.GetReader = function () {\n        var readerId = _this.readerIdCounter;\n        _this.readerIdCounter++;\n        var readerQueue = new Queue_1.Queue();\n        var currentLength = _this.streambuffer.length;\n        _this.readerQueues[readerId] = readerQueue;\n\n        for (var i = 0; i < currentLength; i++) {\n          readerQueue.Enqueue(_this.streambuffer[i]);\n        }\n\n        return new StreamReader(_this.id, readerQueue, function () {\n          delete _this.readerQueues[readerId];\n        });\n      };\n\n      this.Close = function () {\n        if (!_this.isEnded) {\n          _this.WriteStreamChunk({\n            Buffer: null,\n            IsEnd: true\n          });\n\n          _this.isEnded = true;\n        }\n      };\n\n      this.WriteStreamChunk = function (streamChunk) {\n        _this.ThrowIfClosed();\n\n        _this.streambuffer.push(streamChunk);\n\n        for (var readerId in _this.readerQueues) {\n          if (!_this.readerQueues[readerId].IsDisposed()) {\n            try {\n              _this.readerQueues[readerId].Enqueue(streamChunk);\n            } catch (e) {// Do nothing\n            }\n          }\n        }\n      };\n\n      this.ThrowIfClosed = function () {\n        if (_this.isEnded) {\n          throw new Error_1.InvalidOperationError(\"Stream closed\");\n        }\n      };\n\n      this.id = streamId ? streamId : Guid_1.CreateNoDashGuid();\n      this.streambuffer = [];\n      this.readerQueues = {};\n    }\n\n    Object.defineProperty(Stream.prototype, \"IsClosed\", {\n      get: function get() {\n        return this.isEnded;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"Id\", {\n      get: function get() {\n        return this.id;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return Stream;\n  }();\n\n  exports.Stream = Stream; // tslint:disable-next-line:max-classes-per-file\n\n  var StreamReader =\n  /** @class */\n  function () {\n    function StreamReader(streamId, readerQueue, onClose) {\n      var _this = this;\n\n      this.isClosed = false;\n\n      this.Read = function () {\n        if (_this.IsClosed) {\n          throw new Error_1.InvalidOperationError(\"StreamReader closed\");\n        }\n\n        return _this.readerQueue.Dequeue().OnSuccessContinueWith(function (streamChunk) {\n          if (streamChunk.IsEnd) {\n            _this.readerQueue.Dispose(\"End of stream reached\");\n          }\n\n          return streamChunk;\n        });\n      };\n\n      this.Close = function () {\n        if (!_this.isClosed) {\n          _this.isClosed = true;\n\n          _this.readerQueue.Dispose(\"StreamReader closed\");\n\n          _this.onClose();\n        }\n      };\n\n      this.readerQueue = readerQueue;\n      this.onClose = onClose;\n      this.streamId = streamId;\n    }\n\n    Object.defineProperty(StreamReader.prototype, \"IsClosed\", {\n      get: function get() {\n        return this.isClosed;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(StreamReader.prototype, \"StreamId\", {\n      get: function get() {\n        return this.streamId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return StreamReader;\n  }();\n\n  exports.StreamReader = StreamReader;\n  /***/\n},\n/* 33 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var LocalStorage =\n  /** @class */\n  function () {\n    function LocalStorage() {\n      this.Get = function (key) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        return localStorage.getItem(key);\n      };\n\n      this.GetOrAdd = function (key, valueToAdd) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        var value = localStorage.getItem(key);\n\n        if (value === null || value === undefined) {\n          localStorage.setItem(key, valueToAdd);\n        }\n\n        return localStorage.getItem(key);\n      };\n\n      this.Set = function (key, value) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        localStorage.setItem(key, value);\n      };\n\n      this.Remove = function (key) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        localStorage.removeItem(key);\n      };\n    }\n\n    return LocalStorage;\n  }();\n\n  exports.LocalStorage = LocalStorage;\n  /***/\n},\n/* 34 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n\n  var Exports_2 = __webpack_require__(1);\n\n  var MicAudioSource =\n  /** @class */\n  function () {\n    function MicAudioSource(recorder, audioSourceId) {\n      var _this = this;\n\n      this.streams = {};\n\n      this.TurnOn = function () {\n        if (_this.initializeDeferral) {\n          return _this.initializeDeferral.Promise();\n        }\n\n        _this.initializeDeferral = new Exports_2.Deferred();\n\n        _this.CreateAudioContext();\n\n        var nav = window.navigator;\n        var getUserMedia = nav.getUserMedia || nav.webkitGetUserMedia || nav.mozGetUserMedia || nav.msGetUserMedia;\n\n        if (!!nav.mediaDevices) {\n          getUserMedia = function getUserMedia(constraints, successCallback, errorCallback) {\n            nav.mediaDevices.getUserMedia(constraints).then(successCallback).catch(errorCallback);\n          };\n        }\n\n        if (!getUserMedia) {\n          var errorMsg = \"Browser does not support getUserMedia.\";\n\n          _this.initializeDeferral.Reject(errorMsg);\n\n          _this.OnEvent(new Exports_2.AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n\n        } else {\n          var next = function next() {\n            _this.OnEvent(new Exports_2.AudioSourceInitializingEvent(_this.id)); // no stream id\n\n\n            getUserMedia({\n              audio: true,\n              video: false\n            }, function (mediaStream) {\n              _this.mediaStream = mediaStream;\n\n              _this.OnEvent(new Exports_2.AudioSourceReadyEvent(_this.id));\n\n              _this.initializeDeferral.Resolve(true);\n            }, function (error) {\n              var errorMsg = \"Error occurred during microphone initialization: \" + error;\n              var tmp = _this.initializeDeferral; // HACK: this should be handled through onError callbacks of all promises up the stack.\n              // Unfortunately, the current implementation does not provide an easy way to reject promises\n              // without a lot of code replication.\n              // TODO: fix promise implementation, allow for a graceful reject chaining.\n\n              _this.initializeDeferral = null;\n              tmp.Reject(errorMsg); // this will bubble up through the whole chain of promises,\n              // with each new level adding extra \"Unhandled callback error\" prefix to the error message.\n              // The following line is not guaranteed to be executed.\n\n              _this.OnEvent(new Exports_2.AudioSourceErrorEvent(_this.id, errorMsg));\n            });\n          };\n\n          if (_this.context.state === \"suspended\") {\n            // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n            // https://github.com/WebAudio/web-audio-api/issues/790\n            _this.context.resume().then(next, function (reason) {\n              _this.initializeDeferral.Reject(\"Failed to initialize audio context: \" + reason);\n            });\n          } else {\n            next();\n          }\n        }\n\n        return _this.initializeDeferral.Promise();\n      };\n\n      this.Id = function () {\n        return _this.id;\n      };\n\n      this.Attach = function (audioNodeId) {\n        _this.OnEvent(new Exports_2.AudioStreamNodeAttachingEvent(_this.id, audioNodeId));\n\n        return _this.Listen(audioNodeId).OnSuccessContinueWith(function (streamReader) {\n          _this.OnEvent(new Exports_2.AudioStreamNodeAttachedEvent(_this.id, audioNodeId));\n\n          return {\n            Detach: function Detach() {\n              streamReader.Close();\n              delete _this.streams[audioNodeId];\n\n              _this.OnEvent(new Exports_2.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n\n              _this.TurnOff();\n            },\n            Id: function Id() {\n              return audioNodeId;\n            },\n            Read: function Read() {\n              return streamReader.Read();\n            }\n          };\n        });\n      };\n\n      this.Detach = function (audioNodeId) {\n        if (audioNodeId && _this.streams[audioNodeId]) {\n          _this.streams[audioNodeId].Close();\n\n          delete _this.streams[audioNodeId];\n\n          _this.OnEvent(new Exports_2.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n        }\n      };\n\n      this.TurnOff = function () {\n        for (var streamId in _this.streams) {\n          if (streamId) {\n            var stream = _this.streams[streamId];\n\n            if (stream) {\n              stream.Close();\n            }\n          }\n        }\n\n        _this.OnEvent(new Exports_2.AudioSourceOffEvent(_this.id)); // no stream now\n\n\n        _this.initializeDeferral = null;\n\n        _this.DestroyAudioContext();\n\n        return Exports_2.PromiseHelper.FromResult(true);\n      };\n\n      this.Listen = function (audioNodeId) {\n        return _this.TurnOn().OnSuccessContinueWith(function (_) {\n          var stream = new Exports_2.Stream(audioNodeId);\n          _this.streams[audioNodeId] = stream;\n\n          try {\n            _this.recorder.Record(_this.context, _this.mediaStream, stream);\n          } catch (error) {\n            _this.OnEvent(new Exports_2.AudioStreamNodeErrorEvent(_this.id, audioNodeId, error));\n\n            throw error;\n          }\n\n          return stream.GetReader();\n        });\n      };\n\n      this.OnEvent = function (event) {\n        _this.events.OnEvent(event);\n\n        Exports_2.Events.Instance.OnEvent(event);\n      };\n\n      this.CreateAudioContext = function () {\n        if (!!_this.context) {\n          return;\n        } // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n\n\n        var AudioContext = window.AudioContext || window.webkitAudioContext || false;\n\n        if (!AudioContext) {\n          throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n        }\n\n        _this.context = new AudioContext();\n      };\n\n      this.DestroyAudioContext = function () {\n        if (!_this.context) {\n          return;\n        }\n\n        _this.recorder.ReleaseMediaResources(_this.context);\n\n        if (\"close\" in _this.context) {\n          _this.context.close();\n\n          _this.context = null;\n        } else if (_this.context.state === \"running\") {\n          // Suspend actually takes a callback, but analogous to the\n          // resume method, it'll be only fired if suspend is called\n          // in a direct response to a user action. The later is not always\n          // the case, as TurnOff is also called, when we receive an\n          // end-of-speech message from the service. So, doing a best effort\n          // fire-and-forget here.\n          _this.context.suspend();\n        }\n      };\n\n      this.id = audioSourceId ? audioSourceId : Exports_2.CreateNoDashGuid();\n      this.events = new Exports_2.EventSource();\n      this.recorder = recorder;\n    }\n\n    Object.defineProperty(MicAudioSource.prototype, \"Format\", {\n      get: function get() {\n        return MicAudioSource.AUDIOFORMAT;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(MicAudioSource.prototype, \"Events\", {\n      get: function get() {\n        return this.events;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    MicAudioSource.AUDIOFORMAT = Exports_1.AudioStreamFormat.getDefaultInputFormat();\n    return MicAudioSource;\n  }();\n\n  exports.MicAudioSource = MicAudioSource;\n  /***/\n},\n/* 35 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(6);\n\n  var Exports_2 = __webpack_require__(0);\n\n  var AudioInputStream_1 = __webpack_require__(17);\n  /**\n   * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n   * @class AudioConfig\n   */\n\n\n  var AudioConfig =\n  /** @class */\n  function () {\n    function AudioConfig() {}\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n\n\n    AudioConfig.fromDefaultMicrophoneInput = function () {\n      var pcmRecorder = new Exports_1.PcmRecorder();\n      return new AudioConfigImpl(new Exports_1.MicAudioSource(pcmRecorder));\n    };\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n\n\n    AudioConfig.fromWavFileInput = function (file) {\n      return new AudioConfigImpl(new Exports_1.FileAudioSource(file));\n    };\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback} audioStream - Specifies the custom audio input stream. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n\n\n    AudioConfig.fromStreamInput = function (audioStream) {\n      if (audioStream instanceof Exports_2.PullAudioInputStreamCallback) {\n        return new AudioConfigImpl(new AudioInputStream_1.PullAudioInputStreamImpl(audioStream));\n      }\n\n      if (audioStream instanceof Exports_2.AudioInputStream) {\n        return new AudioConfigImpl(audioStream);\n      }\n\n      throw new Error(\"Not Supported Type\");\n    };\n\n    return AudioConfig;\n  }();\n\n  exports.AudioConfig = AudioConfig;\n  /**\n   * Represents audio input stream used for custom audio input configurations.\n   * @private\n   * @class AudioConfigImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var AudioConfigImpl =\n  /** @class */\n  function (_super) {\n    __extends(AudioConfigImpl, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n\n\n    function AudioConfigImpl(source) {\n      var _this = _super.call(this) || this;\n\n      _this.source = source;\n      return _this;\n    }\n\n    Object.defineProperty(AudioConfigImpl.prototype, \"Format\", {\n      /**\n       * Format information for the audio\n       */\n      get: function get() {\n        return this.source.Format;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n\n    AudioConfigImpl.prototype.close = function () {\n      this.source.TurnOff();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.Id\n     * @function\n     * @public\n     */\n\n\n    AudioConfigImpl.prototype.Id = function () {\n      return this.source.Id();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.TurnOn\n     * @function\n     * @public\n     * @returns {Promise<boolean>} A promise.\n     */\n\n\n    AudioConfigImpl.prototype.TurnOn = function () {\n      return this.source.TurnOn();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.Attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n\n\n    AudioConfigImpl.prototype.Attach = function (audioNodeId) {\n      return this.source.Attach(audioNodeId);\n    };\n    /**\n     * @member AudioConfigImpl.prototype.Detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n\n\n    AudioConfigImpl.prototype.Detach = function (audioNodeId) {\n      return this.Detach(audioNodeId);\n    };\n    /**\n     * @member AudioConfigImpl.prototype.TurnOff\n     * @function\n     * @public\n     * @returns {Promise<boolean>} A promise.\n     */\n\n\n    AudioConfigImpl.prototype.TurnOff = function () {\n      return this.source.TurnOff();\n    };\n\n    Object.defineProperty(AudioConfigImpl.prototype, \"Events\", {\n      /**\n       * @member AudioConfigImpl.prototype.Events\n       * @function\n       * @public\n       * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n       */\n      get: function get() {\n        return this.source.Events;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return AudioConfigImpl;\n  }(AudioConfig);\n\n  exports.AudioConfigImpl = AudioConfigImpl;\n  /***/\n},\n/* 36 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines the possible reasons a recognition result might be canceled.\n   * @class CancellationReason\n   */\n\n  var CancellationReason;\n\n  (function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition. Use getErrorDetails() contains detailed error response.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n  })(CancellationReason = exports.CancellationReason || (exports.CancellationReason = {}));\n  /***/\n\n},\n/* 37 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * An abstract base class that defines callback methods (read() and close()) for custom audio input streams).\n   * @class PullAudioInputStreamCallback\n   */\n\n  var PullAudioInputStreamCallback =\n  /** @class */\n  function () {\n    function PullAudioInputStreamCallback() {}\n\n    return PullAudioInputStreamCallback;\n  }();\n\n  exports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;\n  /***/\n},\n/* 38 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Contracts_1 = __webpack_require__(4); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  /**\n   * Represents a keyword recognition model for recognizing when\n   * the user says a keyword to initiate further speech recognition.\n   * @class KeywordRecognitionModel\n   */\n\n\n  var KeywordRecognitionModel =\n  /** @class */\n  function () {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    function KeywordRecognitionModel() {\n      this.disposed = false;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     *                 Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n\n\n    KeywordRecognitionModel.fromFile = function (fileName) {\n      Contracts_1.Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n      throw new Error(\"Not yet implemented.\");\n    };\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     *                 Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n\n\n    KeywordRecognitionModel.fromStream = function (file) {\n      Contracts_1.Contracts.throwIfNull(file, \"file\");\n      throw new Error(\"Not yet implemented.\");\n    };\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n\n\n    KeywordRecognitionModel.prototype.close = function () {\n      if (this.disposed) {\n        return;\n      }\n\n      this.disposed = true;\n    };\n\n    return KeywordRecognitionModel;\n  }();\n\n  exports.KeywordRecognitionModel = KeywordRecognitionModel;\n  /***/\n},\n/* 39 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n   * @class SessionEventArgs\n   */\n\n  var SessionEventArgs =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    function SessionEventArgs(sessionId) {\n      this.privSessionId = sessionId;\n    }\n\n    Object.defineProperty(SessionEventArgs.prototype, \"sessionId\", {\n      /**\n       * Represents the session identifier.\n       * @member SessionEventArgs.prototype.sessionId\n       * @function\n       * @public\n       * @returns {string} Represents the session identifier.\n       */\n      get: function get() {\n        return this.privSessionId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SessionEventArgs;\n  }();\n\n  exports.SessionEventArgs = SessionEventArgs;\n  /***/\n},\n/* 40 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Defines payload for session events like Speech Start/End Detected\n   * @class\n   */\n\n\n  var RecognitionEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(RecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n\n\n    function RecognitionEventArgs(offset, sessionId) {\n      var _this = _super.call(this, sessionId) || this;\n\n      _this.privOffset = offset;\n      return _this;\n    }\n\n    Object.defineProperty(RecognitionEventArgs.prototype, \"offset\", {\n      /**\n       * Represents the message offset\n       * @member RecognitionEventArgs.prototype.offset\n       * @function\n       * @public\n       */\n      get: function get() {\n        return this.privOffset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognitionEventArgs;\n  }(Exports_1.SessionEventArgs);\n\n  exports.RecognitionEventArgs = RecognitionEventArgs;\n  /***/\n},\n/* 41 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Define Speech Recognizer output formats.\n   * @class OutputFormat\n   */\n\n  var OutputFormat;\n\n  (function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n  })(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n  /***/\n\n},\n/* 42 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Intent recognition result event arguments.\n   * @class\n   */\n\n\n  var IntentRecognitionEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(IntentRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n\n\n    function IntentRecognitionEventArgs(result, offset, sessionId) {\n      var _this = _super.call(this, offset, sessionId) || this;\n\n      _this.privResult = result;\n      return _this;\n    }\n\n    Object.defineProperty(IntentRecognitionEventArgs.prototype, \"result\", {\n      /**\n       * Represents the intent recognition result.\n       * @member IntentRecognitionEventArgs.prototype.result\n       * @function\n       * @public\n       * @returns {IntentRecognitionResult} Represents the intent recognition result.\n       */\n      get: function get() {\n        return this.privResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return IntentRecognitionEventArgs;\n  }(Exports_1.RecognitionEventArgs);\n\n  exports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;\n  /***/\n},\n/* 43 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines result of speech recognition.\n   * @class RecognitionResult\n   */\n\n  var RecognitionResult =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    function RecognitionResult(resultId, reason, text, duration, offset, errorDetails, json, properties) {\n      this.privResultId = resultId;\n      this.privReason = reason;\n      this.privText = text;\n      this.privDuration = duration;\n      this.privOffset = offset;\n      this.privErrorDetails = errorDetails;\n      this.privJson = json;\n      this.privProperties = properties;\n    }\n\n    Object.defineProperty(RecognitionResult.prototype, \"resultId\", {\n      /**\n       * Specifies the result identifier.\n       * @member RecognitionResult.prototype.resultId\n       * @function\n       * @public\n       * @returns {string} Specifies the result identifier.\n       */\n      get: function get() {\n        return this.privResultId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"reason\", {\n      /**\n       * Specifies status of the result.\n       * @member RecognitionResult.prototype.reason\n       * @function\n       * @public\n       * @returns {ResultReason} Specifies status of the result.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"text\", {\n      /**\n       * Presents the recognized text in the result.\n       * @member RecognitionResult.prototype.text\n       * @function\n       * @public\n       * @returns {string} Presents the recognized text in the result.\n       */\n      get: function get() {\n        return this.privText;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"duration\", {\n      /**\n       * Duration of recognized speech in 100 nano second incements.\n       * @member RecognitionResult.prototype.duration\n       * @function\n       * @public\n       * @returns {number} Duration of recognized speech in 100 nano second incements.\n       */\n      get: function get() {\n        return this.privDuration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"offset\", {\n      /**\n       * Offset of recognized speech in 100 nano second incements.\n       * @member RecognitionResult.prototype.offset\n       * @function\n       * @public\n       * @returns {number} Offset of recognized speech in 100 nano second incements.\n       */\n      get: function get() {\n        return this.privOffset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"errorDetails\", {\n      /**\n       * In case of an unsuccessful recognition, provides a brief description of an occurred error.\n       * This field is only filled-out if the recognition status (@see RecognitionStatus) is set to Canceled.\n       * @member RecognitionResult.prototype.errorDetails\n       * @function\n       * @public\n       * @returns {string} a brief description of an error.\n       */\n      get: function get() {\n        return this.privErrorDetails;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"json\", {\n      /**\n       * A string containing Json serialized recognition result as it was received from the service.\n       * @member RecognitionResult.prototype.json\n       * @function\n       * @private\n       * @returns {string} Json serialized representation of the result.\n       */\n      get: function get() {\n        return this.privJson;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"properties\", {\n      /**\n       *  The set of properties exposed in the result.\n       * @member RecognitionResult.prototype.properties\n       * @function\n       * @public\n       * @returns {PropertyCollection} The set of properties exposed in the result.\n       */\n      get: function get() {\n        return this.privProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognitionResult;\n  }();\n\n  exports.RecognitionResult = RecognitionResult;\n  /***/\n},\n/* 44 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Defines result of speech recognition.\n   * @class SpeechRecognitionResult\n   */\n\n\n  var SpeechRecognitionResult =\n  /** @class */\n  function (_super) {\n    __extends(SpeechRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n\n\n    function SpeechRecognitionResult(resultId, reason, text, duration, offset, errorDetails, json, properties) {\n      return _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n    }\n\n    return SpeechRecognitionResult;\n  }(Exports_1.RecognitionResult);\n\n  exports.SpeechRecognitionResult = SpeechRecognitionResult;\n  /***/\n},\n/* 45 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Intent recognition result.\n   * @class\n   */\n\n\n  var IntentRecognitionResult =\n  /** @class */\n  function (_super) {\n    __extends(IntentRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n\n\n    function IntentRecognitionResult(intentId, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n      var _this = _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n\n      _this.privIntentId = intentId;\n      return _this;\n    }\n\n    Object.defineProperty(IntentRecognitionResult.prototype, \"intentId\", {\n      /**\n       * A String that represents the intent identifier being recognized.\n       * @member IntentRecognitionResult.prototype.intentId\n       * @function\n       * @public\n       * @returns {string} A String that represents the intent identifier being recognized.\n       */\n      get: function get() {\n        return this.privIntentId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return IntentRecognitionResult;\n  }(Exports_1.SpeechRecognitionResult);\n\n  exports.IntentRecognitionResult = IntentRecognitionResult;\n  /***/\n},\n/* 46 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Contracts_1 = __webpack_require__(4);\n  /**\n   * Language understanding model\n   * @class LanguageUnderstandingModel\n   */\n\n\n  var LanguageUnderstandingModel =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    function LanguageUnderstandingModel() {}\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n\n\n    LanguageUnderstandingModel.fromEndpoint = function (uri) {\n      Contracts_1.Contracts.throwIfNull(uri, \"uri\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n      var langModelImp = new LanguageUnderstandingModelImpl(); // Need to extract the app ID from the URL.\n      // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n      // Start tearing the string apart.\n      // region can be extracted from the host name.\n\n      var firstDot = uri.host.indexOf(\".\");\n\n      if (-1 === firstDot) {\n        throw new Error(\"Could not determine region from endpoint\");\n      }\n\n      langModelImp.region = uri.host.substr(0, firstDot); // Now the app ID.\n\n      var lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n\n      if (-1 === lastSegment) {\n        throw new Error(\"Could not determine appId from endpoint\");\n      }\n\n      langModelImp.appId = uri.pathname.substr(lastSegment); // And finally the key.\n\n      langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n\n      if (undefined === langModelImp.subscriptionKey) {\n        throw new Error(\"Could not determine subscription key from endpoint\");\n      }\n\n      return langModelImp;\n    };\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n\n\n    LanguageUnderstandingModel.fromAppId = function (appId) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n      var langModelImp = new LanguageUnderstandingModelImpl();\n      langModelImp.appId = appId;\n      return langModelImp;\n    };\n    /**\n     * Creates a language understanding model using hostname, subscription key and application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n\n\n    LanguageUnderstandingModel.fromSubscription = function (subscriptionKey, appId, region) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n      var langModelImp = new LanguageUnderstandingModelImpl();\n      langModelImp.appId = appId;\n      langModelImp.region = region;\n      langModelImp.subscriptionKey = subscriptionKey;\n      return langModelImp;\n    };\n\n    return LanguageUnderstandingModel;\n  }();\n\n  exports.LanguageUnderstandingModel = LanguageUnderstandingModel;\n  /**\n   * @private\n   * @class LanguageUnderstandingModelImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var LanguageUnderstandingModelImpl =\n  /** @class */\n  function (_super) {\n    __extends(LanguageUnderstandingModelImpl, _super);\n\n    function LanguageUnderstandingModelImpl() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return LanguageUnderstandingModelImpl;\n  }(LanguageUnderstandingModel);\n\n  exports.LanguageUnderstandingModelImpl = LanguageUnderstandingModelImpl;\n  /***/\n},\n/* 47 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Defines contents of speech recognizing/recognized event.\n   * @class SpeechRecognitionEventArgs\n   */\n\n\n  var SpeechRecognitionEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(SpeechRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n\n\n    function SpeechRecognitionEventArgs(result, offset, sessionId) {\n      var _this = _super.call(this, offset, sessionId) || this;\n\n      _this.privResult = result;\n      return _this;\n    }\n\n    Object.defineProperty(SpeechRecognitionEventArgs.prototype, \"result\", {\n      /**\n       * Specifies the recognition result.\n       * @member SpeechRecognitionEventArgs.prototype.result\n       * @function\n       * @public\n       * @returns {SpeechRecognitionResult} the recognition result.\n       */\n      get: function get() {\n        return this.privResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechRecognitionEventArgs;\n  }(Exports_1.RecognitionEventArgs);\n\n  exports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;\n  /***/\n},\n/* 48 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Defines content of a RecognitionErrorEvent.\n   * @class SpeechRecognitionCanceledEventArgs\n   */\n\n\n  var SpeechRecognitionCanceledEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(SpeechRecognitionCanceledEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n\n\n    function SpeechRecognitionCanceledEventArgs(reason, errorDetails, errorCode, offset, sessionId) {\n      var _this = _super.call(this, offset, sessionId) || this;\n\n      _this.privReason = reason;\n      _this.privErrorDetails = errorDetails;\n      _this.privErrorCode = errorCode;\n      return _this;\n    }\n\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"reason\", {\n      /**\n       * The reason the recognition was canceled.\n       * @member SpeechRecognitionCanceledEventArgs.prototype.reason\n       * @function\n       * @public\n       * @returns {CancellationReason} Specifies the reason canceled.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n      /**\n       * The error code of why the cancellation occurred.\n       * @return An error code that represents the error reason.\n       * Added in version 1.1.0.\n       */\n      get: function get() {\n        return this.privErrorCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n      /**\n       * In case of an unsuccessful recognition, provides a details of why the occurred error.\n       * This field is only filled-out if the reason canceled (@see getReason) is set to Error.\n       * @member SpeechRecognitionCanceledEventArgs.prototype.errorDetails\n       * @function\n       * @public\n       * @returns {string} A String that represents the error details.\n       */\n      get: function get() {\n        return this.privErrorDetails;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechRecognitionCanceledEventArgs;\n  }(Exports_1.RecognitionEventArgs);\n\n  exports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs;\n  /***/\n},\n/* 49 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Translation text result event arguments.\n   * @class TranslationRecognitionEventArgs\n   */\n\n\n  var TranslationRecognitionEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(TranslationRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n\n\n    function TranslationRecognitionEventArgs(result, offset, sessionId) {\n      var _this = _super.call(this, offset, sessionId) || this;\n\n      _this.privResult = result;\n      return _this;\n    }\n\n    Object.defineProperty(TranslationRecognitionEventArgs.prototype, \"result\", {\n      /**\n       * Specifies the recognition result.\n       * @member TranslationRecognitionEventArgs.prototype.result\n       * @function\n       * @public\n       * @returns {TranslationRecognitionResult} the recognition result.\n       */\n      get: function get() {\n        return this.privResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationRecognitionEventArgs;\n  }(Exports_1.RecognitionEventArgs);\n\n  exports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs;\n  /***/\n},\n/* 50 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Translation Synthesis event arguments\n   * @class TranslationSynthesisEventArgs\n   */\n\n\n  var TranslationSynthesisEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(TranslationSynthesisEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n\n\n    function TranslationSynthesisEventArgs(result, sessionId) {\n      var _this = _super.call(this, sessionId) || this;\n\n      _this.privResult = result;\n      return _this;\n    }\n\n    Object.defineProperty(TranslationSynthesisEventArgs.prototype, \"result\", {\n      /**\n       * Specifies the translation synthesis result.\n       * @member TranslationSynthesisEventArgs.prototype.result\n       * @function\n       * @public\n       * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n       */\n      get: function get() {\n        return this.privResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationSynthesisEventArgs;\n  }(Exports_1.SessionEventArgs);\n\n  exports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs;\n  /***/\n},\n/* 51 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Translation text result.\n   * @class TranslationRecognitionResult\n   */\n\n\n  var TranslationRecognitionResult =\n  /** @class */\n  function (_super) {\n    __extends(TranslationRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n\n\n    function TranslationRecognitionResult(translations, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n      var _this = _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n\n      _this.privTranslations = translations;\n      return _this;\n    }\n\n    Object.defineProperty(TranslationRecognitionResult.prototype, \"translations\", {\n      /**\n       * Presents the translation results. Each item in the dictionary represents a translation result in one of target languages, where the key\n       * is the name of the target language, in BCP-47 format, and the value is the translation text in the specified language.\n       * @member TranslationRecognitionResult.prototype.translations\n       * @function\n       * @public\n       * @returns {Translations} the current translation map that holds all translations requested.\n       */\n      get: function get() {\n        return this.privTranslations;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationRecognitionResult;\n  }(Exports_1.SpeechRecognitionResult);\n\n  exports.TranslationRecognitionResult = TranslationRecognitionResult;\n  /***/\n},\n/* 52 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  /**\n   * Defines translation synthesis result, i.e. the voice output of the translated text in the target language.\n   * @class TranslationSynthesisResult\n   */\n\n  var TranslationSynthesisResult =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    function TranslationSynthesisResult(reason, audio) {\n      this.privReason = reason;\n      this.privAudio = audio;\n    }\n\n    Object.defineProperty(TranslationSynthesisResult.prototype, \"audio\", {\n      /**\n       * Translated text in the target language.\n       * @member TranslationSynthesisResult.prototype.audio\n       * @function\n       * @public\n       * @returns {ArrayBuffer} Translated audio in the target language.\n       */\n      get: function get() {\n        return this.privAudio;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationSynthesisResult.prototype, \"reason\", {\n      /**\n       * The synthesis status.\n       * @member TranslationSynthesisResult.prototype.reason\n       * @function\n       * @public\n       * @returns {ResultReason} The synthesis status.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationSynthesisResult;\n  }();\n\n  exports.TranslationSynthesisResult = TranslationSynthesisResult;\n  /***/\n},\n/* 53 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines the possible reasons a recognition result might be generated.\n   * @class ResultReason\n   */\n\n  var ResultReason;\n\n  (function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 4] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 5] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 6] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 7] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 8] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 9] = \"SynthesizingAudioCompleted\";\n  })(ResultReason = exports.ResultReason || (exports.ResultReason = {}));\n  /***/\n\n},\n/* 54 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Speech configuration.\n   * @class SpeechConfig\n   */\n\n\n  var SpeechConfig =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    function SpeechConfig() {}\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n\n\n    SpeechConfig.fromSubscription = function (subscriptionKey, region) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n      var speechImpl = new SpeechConfigImpl();\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n      return speechImpl;\n    };\n    /**\n     * Creates an instance of the speech factory with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\n     * the language setting in uri takes precedence, and the effective language is \"de-DE\".\n     * @member SpeechConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n\n\n    SpeechConfig.fromEndpoint = function (endpoint, subscriptionKey) {\n      Contracts_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n      var speechImpl = new SpeechConfigImpl();\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n      return speechImpl;\n    };\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n\n\n    SpeechConfig.fromAuthorizationToken = function (authorizationToken, region) {\n      Contracts_1.Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n      var speechImpl = new SpeechConfigImpl();\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n      speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n      speechImpl.authorizationToken = authorizationToken;\n      return speechImpl;\n    };\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n\n    /* tslint:disable:no-empty */\n\n\n    SpeechConfig.prototype.close = function () {};\n\n    return SpeechConfig;\n  }();\n\n  exports.SpeechConfig = SpeechConfig;\n  /**\n   * @private\n   * @class SpeechConfigImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var SpeechConfigImpl =\n  /** @class */\n  function (_super) {\n    __extends(SpeechConfigImpl, _super);\n\n    function SpeechConfigImpl() {\n      var _this = _super.call(this) || this;\n\n      _this.privProperties = new Exports_2.PropertyCollection();\n      _this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n\n      _this.outputFormat = Exports_2.OutputFormat.Simple;\n      return _this;\n    }\n\n    Object.defineProperty(SpeechConfigImpl.prototype, \"properties\", {\n      get: function get() {\n        return this.privProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"endPoint\", {\n      get: function get() {\n        return new URL(this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint));\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"subscriptionKey\", {\n      get: function get() {\n        return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Key);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"region\", {\n      get: function get() {\n        return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Region);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"authorizationToken\", {\n      get: function get() {\n        return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n      },\n      set: function set(value) {\n        this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"speechRecognitionLanguage\", {\n      get: function get() {\n        return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n      },\n      set: function set(value) {\n        this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"outputFormat\", {\n      get: function get() {\n        return Exports_2.OutputFormat[this.privProperties.getProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[Exports_2.OutputFormat.Simple])];\n      },\n      set: function set(value) {\n        this.privProperties.setProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[value]);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"endpointId\", {\n      get: function get() {\n        return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId);\n      },\n      set: function set(value) {\n        this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    SpeechConfigImpl.prototype.setProperty = function (name, value) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n      this.privProperties.setProperty(name, value);\n    };\n\n    SpeechConfigImpl.prototype.getProperty = function (name, def) {\n      return this.privProperties.getProperty(name, def);\n    };\n\n    SpeechConfigImpl.prototype.clone = function () {\n      var ret = new SpeechConfigImpl();\n      ret.privProperties = this.privProperties.clone();\n      return ret;\n    };\n\n    return SpeechConfigImpl;\n  }(SpeechConfig);\n\n  exports.SpeechConfigImpl = SpeechConfigImpl;\n  /***/\n},\n/* 55 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var IAuthentication_1 = __webpack_require__(9);\n\n  var AuthHeader = \"Ocp-Apim-Subscription-Key\";\n  /**\n   * @class\n   */\n\n  var CognitiveSubscriptionKeyAuthentication =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    function CognitiveSubscriptionKeyAuthentication(subscriptionKey) {\n      var _this = this;\n      /**\n       * Fetches the subscription key.\n       * @member\n       * @function\n       * @public\n       * @param {string} authFetchEventId - The id to fetch.\n       */\n\n\n      this.Fetch = function (authFetchEventId) {\n        return Exports_1.PromiseHelper.FromResult(_this.authInfo);\n      };\n      /**\n       * Fetches the subscription key.\n       * @member\n       * @function\n       * @public\n       * @param {string} authFetchEventId - The id to fetch.\n       */\n\n\n      this.FetchOnExpiry = function (authFetchEventId) {\n        return Exports_1.PromiseHelper.FromResult(_this.authInfo);\n      };\n\n      if (!subscriptionKey) {\n        throw new Exports_1.ArgumentNullError(\"subscriptionKey\");\n      }\n\n      this.authInfo = new IAuthentication_1.AuthInfo(AuthHeader, subscriptionKey);\n    }\n\n    return CognitiveSubscriptionKeyAuthentication;\n  }();\n\n  exports.CognitiveSubscriptionKeyAuthentication = CognitiveSubscriptionKeyAuthentication;\n  /***/\n},\n/* 56 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var IAuthentication_1 = __webpack_require__(9);\n\n  var AuthHeader = \"Authorization\";\n\n  var CognitiveTokenAuthentication =\n  /** @class */\n  function () {\n    function CognitiveTokenAuthentication(fetchCallback, fetchOnExpiryCallback) {\n      var _this = this;\n\n      this.Fetch = function (authFetchEventId) {\n        return _this.fetchCallback(authFetchEventId).OnSuccessContinueWith(function (token) {\n          return new IAuthentication_1.AuthInfo(AuthHeader, token);\n        });\n      };\n\n      this.FetchOnExpiry = function (authFetchEventId) {\n        return _this.fetchOnExpiryCallback(authFetchEventId).OnSuccessContinueWith(function (token) {\n          return new IAuthentication_1.AuthInfo(AuthHeader, token);\n        });\n      };\n\n      if (!fetchCallback) {\n        throw new Exports_1.ArgumentNullError(\"fetchCallback\");\n      }\n\n      if (!fetchOnExpiryCallback) {\n        throw new Exports_1.ArgumentNullError(\"fetchOnExpiryCallback\");\n      }\n\n      this.fetchCallback = fetchCallback;\n      this.fetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n\n    return CognitiveTokenAuthentication;\n  }();\n\n  exports.CognitiveTokenAuthentication = CognitiveTokenAuthentication;\n  /***/\n},\n/* 57 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(6);\n\n  var Exports_2 = __webpack_require__(1);\n\n  var Exports_3 = __webpack_require__(0);\n\n  var Exports_4 = __webpack_require__(2);\n\n  var TestHooksParamName = \"testhooks\";\n  var ConnectionIdHeader = \"X-ConnectionId\";\n\n  var IntentConnectionFactory =\n  /** @class */\n  function () {\n    function IntentConnectionFactory() {\n      var _this = this;\n\n      this.Create = function (config, authInfo, connectionId) {\n        var endpoint = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Endpoint);\n\n        if (!endpoint) {\n          var region = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_IntentRegion);\n          endpoint = _this.Host() + Exports_2.Storage.Local.GetOrAdd(\"TranslationRelativeUri\", \"/speech/\" + _this.GetSpeechRegionFromIntentRegion(region) + \"/recognition/interactive/cognitiveservices/v1\");\n        }\n\n        var queryParams = {\n          format: \"simple\",\n          language: config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_RecoLanguage)\n        };\n\n        if (_this.IsDebugModeEnabled) {\n          queryParams[TestHooksParamName] = \"1\";\n        }\n\n        var headers = {};\n        headers[authInfo.HeaderName] = authInfo.Token;\n        headers[ConnectionIdHeader] = connectionId;\n        return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_4.WebsocketMessageFormatter(), connectionId);\n      };\n    }\n\n    IntentConnectionFactory.prototype.Host = function () {\n      return Exports_2.Storage.Local.GetOrAdd(\"Host\", \"wss://speech.platform.bing.com\");\n    };\n\n    Object.defineProperty(IntentConnectionFactory.prototype, \"IsDebugModeEnabled\", {\n      get: function get() {\n        var value = Exports_2.Storage.Local.GetOrAdd(\"IsDebugModeEnabled\", \"false\");\n        return value.toLowerCase() === \"true\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    IntentConnectionFactory.prototype.GetSpeechRegionFromIntentRegion = function (intentRegion) {\n      switch (intentRegion) {\n        case \"West US\":\n        case \"US West\":\n        case \"westus\":\n          return \"uswest\";\n\n        case \"West US 2\":\n        case \"US West 2\":\n        case \"westus2\":\n          return \"uswest2\";\n\n        case \"South Central US\":\n        case \"US South Central\":\n        case \"southcentralus\":\n          return \"ussouthcentral\";\n\n        case \"West Central US\":\n        case \"US West Central\":\n        case \"westcentralus\":\n          return \"uswestcentral\";\n\n        case \"East US\":\n        case \"US East\":\n        case \"eastus\":\n          return \"useast\";\n\n        case \"East US 2\":\n        case \"US East 2\":\n        case \"eastus2\":\n          return \"useast2\";\n\n        case \"West Europe\":\n        case \"Europe West\":\n        case \"westeurope\":\n          return \"europewest\";\n\n        case \"North Europe\":\n        case \"Europe North\":\n        case \"northeurope\":\n          return \"europenorth\";\n\n        case \"Brazil South\":\n        case \"South Brazil\":\n        case \"southbrazil\":\n          return \"brazilsouth\";\n\n        case \"Australia East\":\n        case \"East Australia\":\n        case \"eastaustralia\":\n          return \"australiaeast\";\n\n        case \"Southeast Asia\":\n        case \"Asia Southeast\":\n        case \"southeastasia\":\n          return \"asiasoutheast\";\n\n        case \"East Asia\":\n        case \"Asia East\":\n        case \"eastasia\":\n          return \"asiaeast\";\n\n        default:\n          return intentRegion;\n      }\n    };\n\n    return IntentConnectionFactory;\n  }();\n\n  exports.IntentConnectionFactory = IntentConnectionFactory;\n  /***/\n},\n/* 58 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var Exports_2 = __webpack_require__(0);\n\n  var Exports_3 = __webpack_require__(2);\n\n  var SpeechConnectionMessage_Internal_1 = __webpack_require__(59);\n\n  var ServiceRecognizerBase =\n  /** @class */\n  function () {\n    function ServiceRecognizerBase(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n      var _this = this;\n\n      this.SendTelemetryData = function (requestId, connection, telemetryData) {\n        if (!!ServiceRecognizerBase.TelemetryData) {\n          try {\n            ServiceRecognizerBase.TelemetryData(telemetryData);\n            /* tslint:disable:no-empty */\n          } catch (_a) {}\n        }\n\n        return connection.Send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_1.MessageType.Text, \"telemetry\", requestId, \"application/json\", telemetryData));\n      };\n\n      this.FetchConnection = function (requestSession, isUnAuthorized) {\n        if (isUnAuthorized === void 0) {\n          isUnAuthorized = false;\n        }\n\n        if (_this.connectionFetchPromise) {\n          if (_this.connectionFetchPromise.Result().IsError || _this.connectionFetchPromise.Result().Result.State() === Exports_1.ConnectionState.Disconnected) {\n            _this.connectionId = null;\n            _this.connectionFetchPromise = null;\n            return _this.FetchConnection(requestSession);\n          } else {\n            requestSession.OnPreConnectionStart(_this.authFetchEventId, _this.connectionId);\n            requestSession.OnConnectionEstablishCompleted(200);\n            requestSession.ListenForServiceTelemetry(_this.connectionFetchPromise.Result().Result.Events);\n            return _this.connectionFetchPromise;\n          }\n        }\n\n        _this.authFetchEventId = Exports_1.CreateNoDashGuid();\n        _this.connectionId = Exports_1.CreateNoDashGuid();\n        requestSession.OnPreConnectionStart(_this.authFetchEventId, _this.connectionId);\n        var authPromise = isUnAuthorized ? _this.authentication.FetchOnExpiry(_this.authFetchEventId) : _this.authentication.Fetch(_this.authFetchEventId);\n        _this.connectionFetchPromise = authPromise.ContinueWithPromise(function (result) {\n          if (result.IsError) {\n            requestSession.OnAuthCompleted(true, result.Error);\n            throw new Error(result.Error);\n          } else {\n            requestSession.OnAuthCompleted(false);\n          }\n\n          if (_this.connection) {\n            _this.connection.Dispose();\n\n            _this.connection = undefined;\n          }\n\n          _this.connection = _this.connectionFactory.Create(_this.recognizerConfig, result.Result, _this.connectionId);\n          requestSession.ListenForServiceTelemetry(_this.connection.Events);\n          return _this.connection.Open().OnSuccessContinueWithPromise(function (response) {\n            if (response.StatusCode === 200) {\n              requestSession.OnConnectionEstablishCompleted(response.StatusCode);\n              return Exports_1.PromiseHelper.FromResult(_this.connection);\n            } else if (response.StatusCode === 403 && !isUnAuthorized) {\n              return _this.FetchConnection(requestSession, true);\n            } else {\n              requestSession.OnConnectionEstablishCompleted(response.StatusCode, response.Reason);\n              return Exports_1.PromiseHelper.FromError(\"Unable to contact server. StatusCode: \" + response.StatusCode + \", Reason: \" + response.Reason);\n            }\n          });\n        });\n        return _this.connectionFetchPromise;\n      };\n\n      this.ReceiveMessage = function (connection, requestSession, successCallback, errorCallBack) {\n        return connection.Read().OnSuccessContinueWithPromise(function (message) {\n          // indicates we are draining the queue and it came with no message;\n          if (!message) {\n            return Exports_1.PromiseHelper.FromResult(true);\n          }\n\n          var connectionMessage = SpeechConnectionMessage_Internal_1.SpeechConnectionMessage.FromConnectionMessage(message);\n\n          if (connectionMessage.RequestId.toLowerCase() === requestSession.RequestId.toLowerCase()) {\n            switch (connectionMessage.Path.toLowerCase()) {\n              case \"turn.start\":\n                var sessionStartEventArgs = new Exports_2.SessionEventArgs(requestSession.SessionId);\n\n                if (!!_this.recognizer.sessionStarted) {\n                  _this.recognizer.sessionStarted(_this.recognizer, sessionStartEventArgs);\n                }\n\n                break;\n\n              case \"speech.startdetected\":\n                var speechStartDetected = Exports_3.SpeechDetected.FromJSON(connectionMessage.TextBody);\n                var speechStartEventArgs = new Exports_2.RecognitionEventArgs(speechStartDetected.Offset, requestSession.SessionId);\n\n                if (!!_this.recognizer.speechStartDetected) {\n                  _this.recognizer.speechStartDetected(_this.recognizer, speechStartEventArgs);\n                }\n\n                break;\n\n              case \"speech.enddetected\":\n                var json = void 0;\n\n                if (connectionMessage.TextBody.length > 0) {\n                  json = connectionMessage.TextBody;\n                } else {\n                  // If the request was empty, the JSON returned is empty.\n                  json = \"{ Offset: 0 }\";\n                }\n\n                var speechStopDetected = Exports_3.SpeechDetected.FromJSON(json);\n                var speechStopEventArgs = new Exports_2.RecognitionEventArgs(speechStopDetected.Offset, requestSession.SessionId);\n\n                if (!!_this.recognizer.speechEndDetected) {\n                  _this.recognizer.speechEndDetected(_this.recognizer, speechStopEventArgs);\n                }\n\n                break;\n\n              case \"turn.end\":\n                var sessionStopEventArgs = new Exports_2.SessionEventArgs(requestSession.SessionId);\n\n                if (!!_this.recognizer.sessionStopped) {\n                  _this.recognizer.sessionStopped(_this.recognizer, sessionStopEventArgs);\n                }\n\n                requestSession.OnServiceTurnEndResponse();\n                return Exports_1.PromiseHelper.FromResult(true);\n\n              default:\n                _this.ProcessTypeSpecificMessages(connectionMessage, requestSession, connection, successCallback, errorCallBack);\n\n            }\n          }\n\n          return _this.ReceiveMessage(connection, requestSession, successCallback, errorCallBack);\n        });\n      };\n\n      this.SendSpeechConfig = function (requestId, connection, speechConfigJson) {\n        if (speechConfigJson && _this.connectionId !== _this.speechConfigConnectionId) {\n          _this.speechConfigConnectionId = _this.connectionId;\n          return connection.Send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_1.MessageType.Text, \"speech.config\", requestId, \"application/json\", speechConfigJson));\n        }\n\n        return Exports_1.PromiseHelper.FromResult(true);\n      };\n\n      this.SendSpeechContext = function (requestId, connection, speechContextJson) {\n        if (speechContextJson) {\n          return connection.Send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_1.MessageType.Text, \"speech.context\", requestId, \"application/json\", speechContextJson));\n        }\n\n        return Exports_1.PromiseHelper.FromResult(true);\n      };\n\n      this.SendAudio = function (requestId, connection, audioStreamNode, requestSession) {\n        // NOTE: Home-baked promises crash ios safari during the invocation\n        // of the error callback chain (looks like the recursion is way too deep, and\n        // it blows up the stack). The following construct is a stop-gap that does not\n        // bubble the error up the callback chain and hence circumvents this problem.\n        // TODO: rewrite with ES6 promises.\n        var deferred = new Exports_1.Deferred(); // The time we last sent data to the service.\n\n        var lastSendTime = 0;\n        var audioFormat = _this.audioSource.Format;\n\n        var readAndUploadCycle = function readAndUploadCycle(_) {\n          // If speech is done, stop sending audio.\n          if (!_this.isDisposed && !requestSession.IsSpeechEnded && !requestSession.IsCompleted) {\n            audioStreamNode.Read().On(function (audioStreamChunk) {\n              // we have a new audio chunk to upload.\n              if (requestSession.IsSpeechEnded) {\n                // If service already recognized audio end then dont send any more audio\n                deferred.Resolve(true);\n                return;\n              }\n\n              var payload = audioStreamChunk.IsEnd ? null : audioStreamChunk.Buffer;\n              var uploaded = connection.Send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_1.MessageType.Binary, \"audio\", requestId, null, payload));\n\n              if (!audioStreamChunk.IsEnd) {\n                // Caculate any delay to the audio stream needed. /2 to allow 2x real time transmit rate max.\n                var minSendTime = payload.byteLength / audioFormat.avgBytesPerSec / 2 * 1000;\n                var delay_1 = Math.max(0, lastSendTime - Date.now() + minSendTime);\n                uploaded.OnSuccessContinueWith(function (result) {\n                  setTimeout(function () {\n                    lastSendTime = Date.now();\n                    readAndUploadCycle(result);\n                  }, delay_1);\n                });\n              } else {\n                // the audio stream has been closed, no need to schedule next\n                // read-upload cycle.\n                deferred.Resolve(true);\n              }\n            }, function (error) {\n              if (requestSession.IsSpeechEnded) {\n                // For whatever reason, Reject is used to remove queue subscribers inside\n                // the Queue.DrainAndDispose invoked from DetachAudioNode down blow, which\n                // means that sometimes things can be rejected in normal circumstances, without\n                // any errors.\n                deferred.Resolve(true); // TODO: remove the argument, it's is completely meaningless.\n              } else {\n                // Only reject, if there was a proper error.\n                deferred.Reject(error);\n              }\n            });\n          }\n        };\n\n        readAndUploadCycle(true);\n        return deferred.Promise();\n      };\n\n      if (!authentication) {\n        throw new Exports_1.ArgumentNullError(\"authentication\");\n      }\n\n      if (!connectionFactory) {\n        throw new Exports_1.ArgumentNullError(\"connectionFactory\");\n      }\n\n      if (!audioSource) {\n        throw new Exports_1.ArgumentNullError(\"audioSource\");\n      }\n\n      if (!recognizerConfig) {\n        throw new Exports_1.ArgumentNullError(\"recognizerConfig\");\n      }\n\n      this.authentication = authentication;\n      this.connectionFactory = connectionFactory;\n      this.audioSource = audioSource;\n      this.recognizerConfig = recognizerConfig;\n      this.isDisposed = false;\n      this.recognizer = recognizer;\n    }\n\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"AudioSource\", {\n      get: function get() {\n        return this.audioSource;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    ServiceRecognizerBase.prototype.IsDisposed = function () {\n      return this.isDisposed;\n    };\n\n    ServiceRecognizerBase.prototype.Dispose = function (reason) {\n      this.isDisposed = true;\n\n      if (this.connection) {\n        this.connection.Dispose(reason);\n        this.connection = undefined;\n      }\n    };\n\n    ServiceRecognizerBase.prototype.Recognize = function (speechContextJson, successCallback, errorCallBack) {\n      var _this = this;\n\n      var requestSession = new Exports_3.RequestSession(this.audioSource.Id());\n      requestSession.ListenForServiceTelemetry(this.audioSource.Events);\n      return this.audioSource.Attach(requestSession.AudioNodeId).ContinueWithPromise(function (result) {\n        if (result.IsError) {\n          _this.ErrorCallback(result.Error);\n\n          throw new Error(result.Error);\n        } else {\n          requestSession.OnAudioSourceAttachCompleted(result.Result, false);\n        }\n\n        var audioNode = result.Result;\n        return _this.FetchConnection(requestSession).On(function (connection) {\n          var messageRetrievalPromise = _this.ReceiveMessage(connection, requestSession, successCallback, errorCallBack);\n\n          var messageSendPromise = _this.SendSpeechConfig(requestSession.RequestId, connection, _this.recognizerConfig.PlatformConfig.Serialize()).OnSuccessContinueWithPromise(function (_) {\n            return _this.SendSpeechContext(requestSession.RequestId, connection, speechContextJson).OnSuccessContinueWithPromise(function (_) {\n              return _this.SendAudio(requestSession.RequestId, connection, audioNode, requestSession);\n            });\n          });\n\n          var completionPromise = Exports_1.PromiseHelper.WhenAll([messageRetrievalPromise, messageSendPromise]);\n          completionPromise.On(function (r) {\n            requestSession.Dispose();\n\n            _this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n          }, function (error) {\n            requestSession.Dispose(error);\n\n            _this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n          });\n          return completionPromise;\n        }, function (error) {\n          _this.ConnectionError(requestSession.SessionId, requestSession.RequestId, error);\n        }).OnSuccessContinueWithPromise(function () {\n          return requestSession.CompletionPromise;\n        });\n      });\n    };\n\n    ServiceRecognizerBase.prototype.ErrorCallback = function (error) {\n      throw new Error(error);\n    };\n\n    return ServiceRecognizerBase;\n  }();\n\n  exports.ServiceRecognizerBase = ServiceRecognizerBase;\n  /***/\n},\n/* 59 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var PathHeaderName = \"path\";\n  var ContentTypeHeaderName = \"content-type\";\n  var RequestIdHeaderName = \"x-requestid\";\n  var RequestTimestampHeaderName = \"x-timestamp\";\n\n  var SpeechConnectionMessage =\n  /** @class */\n  function (_super) {\n    __extends(SpeechConnectionMessage, _super);\n\n    function SpeechConnectionMessage(messageType, path, requestId, contentType, body, additionalHeaders, id) {\n      var _this = this;\n\n      if (!path) {\n        throw new Exports_1.ArgumentNullError(\"path\");\n      }\n\n      if (!requestId) {\n        throw new Exports_1.ArgumentNullError(\"requestId\");\n      }\n\n      var headers = {};\n      headers[PathHeaderName] = path;\n      headers[RequestIdHeaderName] = requestId;\n      headers[RequestTimestampHeaderName] = new Date().toISOString();\n\n      if (contentType) {\n        headers[ContentTypeHeaderName] = contentType;\n      }\n\n      if (additionalHeaders) {\n        for (var headerName in additionalHeaders) {\n          if (headerName) {\n            headers[headerName] = additionalHeaders[headerName];\n          }\n        }\n      }\n\n      if (id) {\n        _this = _super.call(this, messageType, body, headers, id) || this;\n      } else {\n        _this = _super.call(this, messageType, body, headers) || this;\n      }\n\n      _this.path = path;\n      _this.requestId = requestId;\n      _this.contentType = contentType;\n      _this.additionalHeaders = additionalHeaders;\n      return _this;\n    }\n\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"Path\", {\n      get: function get() {\n        return this.path;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"RequestId\", {\n      get: function get() {\n        return this.requestId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"ContentType\", {\n      get: function get() {\n        return this.contentType;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"AdditionalHeaders\", {\n      get: function get() {\n        return this.additionalHeaders;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    SpeechConnectionMessage.FromConnectionMessage = function (message) {\n      var path = null;\n      var requestId = null;\n      var contentType = null;\n      var requestTimestamp = null;\n      var additionalHeaders = {};\n\n      if (message.Headers) {\n        for (var headerName in message.Headers) {\n          if (headerName) {\n            if (headerName.toLowerCase() === PathHeaderName.toLowerCase()) {\n              path = message.Headers[headerName];\n            } else if (headerName.toLowerCase() === RequestIdHeaderName.toLowerCase()) {\n              requestId = message.Headers[headerName];\n            } else if (headerName.toLowerCase() === RequestTimestampHeaderName.toLowerCase()) {\n              requestTimestamp = message.Headers[headerName];\n            } else if (headerName.toLowerCase() === ContentTypeHeaderName.toLowerCase()) {\n              contentType = message.Headers[headerName];\n            } else {\n              additionalHeaders[headerName] = message.Headers[headerName];\n            }\n          }\n        }\n      }\n\n      return new SpeechConnectionMessage(message.MessageType, path, requestId, contentType, message.Body, additionalHeaders, message.Id);\n    };\n\n    return SpeechConnectionMessage;\n  }(Exports_1.ConnectionMessage);\n\n  exports.SpeechConnectionMessage = SpeechConnectionMessage;\n  /***/\n},\n/* 60 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var RecognitionMode;\n\n  (function (RecognitionMode) {\n    RecognitionMode[RecognitionMode[\"Interactive\"] = 0] = \"Interactive\";\n    RecognitionMode[RecognitionMode[\"Conversation\"] = 1] = \"Conversation\";\n    RecognitionMode[RecognitionMode[\"Dictation\"] = 2] = \"Dictation\";\n  })(RecognitionMode = exports.RecognitionMode || (exports.RecognitionMode = {}));\n\n  var SpeechResultFormat;\n\n  (function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n  })(SpeechResultFormat = exports.SpeechResultFormat || (exports.SpeechResultFormat = {}));\n\n  var RecognizerConfig =\n  /** @class */\n  function () {\n    function RecognizerConfig(platformConfig, recognitionMode, speechConfig) {\n      if (recognitionMode === void 0) {\n        recognitionMode = RecognitionMode.Interactive;\n      }\n\n      this.recognitionMode = RecognitionMode.Interactive;\n      this.platformConfig = platformConfig ? platformConfig : new PlatformConfig(new Context(null));\n      this.recognitionMode = recognitionMode;\n      this.recognitionActivityTimeout = recognitionMode === RecognitionMode.Interactive ? 8000 : 25000;\n      this.speechConfig = speechConfig;\n    }\n\n    Object.defineProperty(RecognizerConfig.prototype, \"parameters\", {\n      get: function get() {\n        return this.speechConfig;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"RecognitionMode\", {\n      get: function get() {\n        return this.recognitionMode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"PlatformConfig\", {\n      get: function get() {\n        return this.platformConfig;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"RecognitionActivityTimeout\", {\n      get: function get() {\n        return this.recognitionActivityTimeout;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"IsContinuousRecognition\", {\n      get: function get() {\n        return this.recognitionMode !== RecognitionMode.Interactive;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return RecognizerConfig;\n  }();\n\n  exports.RecognizerConfig = RecognizerConfig; // tslint:disable-next-line:max-classes-per-file\n\n  var PlatformConfig =\n  /** @class */\n  function () {\n    function PlatformConfig(context) {\n      var _this = this;\n\n      this.Serialize = function () {\n        return JSON.stringify(_this, function (key, value) {\n          if (value && (0, _typeof2.default)(value) === \"object\") {\n            var replacement = {};\n\n            for (var k in value) {\n              if (Object.hasOwnProperty.call(value, k)) {\n                replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n              }\n            }\n\n            return replacement;\n          }\n\n          return value;\n        });\n      };\n\n      this.context = context;\n    }\n\n    Object.defineProperty(PlatformConfig.prototype, \"Context\", {\n      get: function get() {\n        return this.context;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return PlatformConfig;\n  }();\n\n  exports.PlatformConfig = PlatformConfig; // tslint:disable-next-line:max-classes-per-file\n\n  var Context =\n  /** @class */\n  function () {\n    function Context(os) {\n      this.system = new System();\n      this.os = os;\n    }\n\n    Object.defineProperty(Context.prototype, \"System\", {\n      get: function get() {\n        return this.system;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"OS\", {\n      get: function get() {\n        return this.os;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return Context;\n  }();\n\n  exports.Context = Context; // tslint:disable-next-line:max-classes-per-file\n\n  var System =\n  /** @class */\n  function () {\n    function System() {\n      // Note: below will be patched for official builds.\n      var SPEECHSDK_CLIENTSDK_VERSION = \"1.1.0\";\n      this.name = \"SpeechSDK\";\n      this.version = SPEECHSDK_CLIENTSDK_VERSION;\n      this.build = \"JavaScript\";\n      this.lang = \"JavaScript\";\n    }\n\n    Object.defineProperty(System.prototype, \"Version\", {\n      get: function get() {\n        // Controlled by sdk\n        return this.version;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(System.prototype, \"Lang\", {\n      get: function get() {\n        // Controlled by sdk\n        return this.lang;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return System;\n  }();\n\n  exports.System = System; // tslint:disable-next-line:max-classes-per-file\n\n  var OS =\n  /** @class */\n  function () {\n    function OS(platform, name, version) {\n      this.platform = platform;\n      this.name = name;\n      this.version = version;\n    }\n\n    Object.defineProperty(OS.prototype, \"Platform\", {\n      get: function get() {\n        return this.platform;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(OS.prototype, \"Name\", {\n      get: function get() {\n        return this.name;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(OS.prototype, \"Version\", {\n      get: function get() {\n        return this.version;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return OS;\n  }();\n\n  exports.OS = OS; // tslint:disable-next-line:max-classes-per-file\n\n  var Device =\n  /** @class */\n  function () {\n    function Device(manufacturer, model, version) {\n      this.manufacturer = manufacturer;\n      this.model = model;\n      this.version = version;\n    }\n\n    Object.defineProperty(Device.prototype, \"Manufacturer\", {\n      get: function get() {\n        return this.manufacturer;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"Model\", {\n      get: function get() {\n        return this.model;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"Version\", {\n      get: function get() {\n        return this.version;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return Device;\n  }();\n\n  exports.Device = Device;\n  /***/\n},\n/* 61 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var CRLF = \"\\r\\n\";\n\n  var WebsocketMessageFormatter =\n  /** @class */\n  function () {\n    function WebsocketMessageFormatter() {\n      var _this = this;\n\n      this.ToConnectionMessage = function (message) {\n        var deferral = new Exports_1.Deferred();\n\n        try {\n          if (message.MessageType === Exports_1.MessageType.Text) {\n            var textMessage = message.TextContent;\n            var headers = {};\n            var body = null;\n\n            if (textMessage) {\n              var headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n\n              if (headerBodySplit && headerBodySplit.length > 0) {\n                headers = _this.ParseHeaders(headerBodySplit[0]);\n\n                if (headerBodySplit.length > 1) {\n                  body = headerBodySplit[1];\n                }\n              }\n            }\n\n            deferral.Resolve(new Exports_1.ConnectionMessage(message.MessageType, body, headers, message.Id));\n          } else if (message.MessageType === Exports_1.MessageType.Binary) {\n            var binaryMessage = message.BinaryContent;\n            var headers = {};\n            var body = null;\n\n            if (!binaryMessage || binaryMessage.byteLength < 2) {\n              throw new Error(\"Invalid binary message format. Header length missing.\");\n            }\n\n            var dataView = new DataView(binaryMessage);\n            var headerLength = dataView.getInt16(0);\n\n            if (binaryMessage.byteLength < headerLength + 2) {\n              throw new Error(\"Invalid binary message format. Header content missing.\");\n            }\n\n            var headersString = \"\";\n\n            for (var i = 0; i < headerLength; i++) {\n              headersString += String.fromCharCode(dataView.getInt8(i + 2));\n            }\n\n            headers = _this.ParseHeaders(headersString);\n\n            if (binaryMessage.byteLength > headerLength + 2) {\n              body = binaryMessage.slice(2 + headerLength);\n            }\n\n            deferral.Resolve(new Exports_1.ConnectionMessage(message.MessageType, body, headers, message.Id));\n          }\n        } catch (e) {\n          deferral.Reject(\"Error formatting the message. Error: \" + e);\n        }\n\n        return deferral.Promise();\n      };\n\n      this.FromConnectionMessage = function (message) {\n        var deferral = new Exports_1.Deferred();\n\n        try {\n          if (message.MessageType === Exports_1.MessageType.Text) {\n            var payload = \"\" + _this.MakeHeaders(message) + CRLF + (message.TextBody ? message.TextBody : \"\");\n            deferral.Resolve(new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Text, payload, message.Id));\n          } else if (message.MessageType === Exports_1.MessageType.Binary) {\n            var headersString = _this.MakeHeaders(message);\n\n            var content = message.BinaryBody;\n            var headerInt8Array = new Int8Array(_this.StringToArrayBuffer(headersString));\n            var payload = new ArrayBuffer(2 + headerInt8Array.byteLength + (content ? content.byteLength : 0));\n            var dataView = new DataView(payload);\n            dataView.setInt16(0, headerInt8Array.length);\n\n            for (var i = 0; i < headerInt8Array.byteLength; i++) {\n              dataView.setInt8(2 + i, headerInt8Array[i]);\n            }\n\n            if (content) {\n              var bodyInt8Array = new Int8Array(content);\n\n              for (var i = 0; i < bodyInt8Array.byteLength; i++) {\n                dataView.setInt8(2 + headerInt8Array.byteLength + i, bodyInt8Array[i]);\n              }\n            }\n\n            deferral.Resolve(new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Binary, payload, message.Id));\n          }\n        } catch (e) {\n          deferral.Reject(\"Error formatting the message. \" + e);\n        }\n\n        return deferral.Promise();\n      };\n\n      this.MakeHeaders = function (message) {\n        var headersString = \"\";\n\n        if (message.Headers) {\n          for (var header in message.Headers) {\n            if (header) {\n              headersString += header + \": \" + message.Headers[header] + CRLF;\n            }\n          }\n        }\n\n        return headersString;\n      };\n\n      this.ParseHeaders = function (headersString) {\n        var headers = {};\n\n        if (headersString) {\n          var headerMatches = headersString.match(/[^\\r\\n]+/g);\n\n          if (headers) {\n            for (var _i = 0, headerMatches_1 = headerMatches; _i < headerMatches_1.length; _i++) {\n              var header = headerMatches_1[_i];\n\n              if (header) {\n                var separatorIndex = header.indexOf(\":\");\n                var headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                var headerValue = separatorIndex > 0 && header.length > separatorIndex + 1 ? header.substr(separatorIndex + 1).trim() : \"\";\n                headers[headerName] = headerValue;\n              }\n            }\n          }\n        }\n\n        return headers;\n      };\n\n      this.StringToArrayBuffer = function (str) {\n        var buffer = new ArrayBuffer(str.length);\n        var view = new DataView(buffer);\n\n        for (var i = 0; i < str.length; i++) {\n          view.setUint8(i, str.charCodeAt(i));\n        }\n\n        return buffer;\n      };\n    }\n\n    return WebsocketMessageFormatter;\n  }();\n\n  exports.WebsocketMessageFormatter = WebsocketMessageFormatter;\n  /***/\n},\n/* 62 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var QueryParameterNames =\n  /** @class */\n  function () {\n    function QueryParameterNames() {}\n\n    Object.defineProperty(QueryParameterNames, \"TestHooksParamName\", {\n      get: function get() {\n        return \"testhooks\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"ConnectionIdHeader\", {\n      get: function get() {\n        return \"X-ConnectionId\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"DeploymentIdParamName\", {\n      get: function get() {\n        return \"cid\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"FormatParamName\", {\n      get: function get() {\n        return \"format\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"LanguageParamName\", {\n      get: function get() {\n        return \"language\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"TranslationFromParamName\", {\n      get: function get() {\n        return \"from\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"TranslationToParamName\", {\n      get: function get() {\n        return \"to\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return QueryParameterNames;\n  }();\n\n  exports.QueryParameterNames = QueryParameterNames;\n  /***/\n},\n/* 63 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(6);\n\n  var Exports_2 = __webpack_require__(1);\n\n  var Exports_3 = __webpack_require__(0);\n\n  var Exports_4 = __webpack_require__(2);\n\n  var TestHooksParamName = \"testhooks\";\n  var ConnectionIdHeader = \"X-ConnectionId\";\n\n  var TranslationConnectionFactory =\n  /** @class */\n  function () {\n    function TranslationConnectionFactory() {\n      var _this = this;\n\n      this.Create = function (config, authInfo, connectionId) {\n        var endpoint = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n\n        if (!endpoint) {\n          var region = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Region, undefined);\n          endpoint = _this.Host(region) + Exports_2.Storage.Local.GetOrAdd(\"TranslationRelativeUri\", \"/speech/translation/cognitiveservices/v1\");\n        }\n\n        var queryParams = {\n          from: config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_RecoLanguage),\n          to: config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_TranslationToLanguages)\n        };\n\n        if (_this.IsDebugModeEnabled) {\n          queryParams[TestHooksParamName] = \"1\";\n        }\n\n        var voiceName = \"voice\";\n        var featureName = \"features\";\n\n        if (config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n          queryParams[voiceName] = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_TranslationVoice);\n          queryParams[featureName] = \"texttospeech\";\n        }\n\n        var headers = {};\n        headers[authInfo.HeaderName] = authInfo.Token;\n        headers[ConnectionIdHeader] = connectionId;\n        return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_4.WebsocketMessageFormatter(), connectionId);\n      };\n    }\n\n    TranslationConnectionFactory.prototype.Host = function (region) {\n      return Exports_2.Storage.Local.GetOrAdd(\"Host\", \"wss://\" + region + \".s2s.speech.microsoft.com\");\n    };\n\n    Object.defineProperty(TranslationConnectionFactory.prototype, \"IsDebugModeEnabled\", {\n      get: function get() {\n        var value = Exports_2.Storage.Local.GetOrAdd(\"IsDebugModeEnabled\", \"false\");\n        return value.toLowerCase() === \"true\";\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationConnectionFactory;\n  }();\n\n  exports.TranslationConnectionFactory = TranslationConnectionFactory;\n  /***/\n},\n/* 64 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n\n  var Exports_2 = __webpack_require__(2);\n\n  var EnumTranslation =\n  /** @class */\n  function () {\n    function EnumTranslation() {}\n\n    EnumTranslation.implTranslateRecognitionResult = function (recognitionStatus) {\n      var reason = Exports_1.ResultReason.Canceled;\n\n      switch (recognitionStatus) {\n        case Exports_2.RecognitionStatus.Success:\n          reason = Exports_1.ResultReason.RecognizedSpeech;\n          break;\n\n        case Exports_2.RecognitionStatus.NoMatch:\n        case Exports_2.RecognitionStatus.InitialSilenceTimeout:\n        case Exports_2.RecognitionStatus.BabbleTimeout:\n          reason = Exports_1.ResultReason.NoMatch;\n          break;\n\n        case Exports_2.RecognitionStatus.EndOfDictation:\n        case Exports_2.RecognitionStatus.Error:\n        default:\n          reason = Exports_1.ResultReason.Canceled;\n          break;\n      }\n\n      return reason;\n    };\n\n    EnumTranslation.implTranslateCancelResult = function (recognitionStatus) {\n      var reason = Exports_1.CancellationReason.EndOfStream;\n\n      switch (recognitionStatus) {\n        case Exports_2.RecognitionStatus.Success:\n        case Exports_2.RecognitionStatus.EndOfDictation:\n        case Exports_2.RecognitionStatus.NoMatch:\n          reason = Exports_1.CancellationReason.EndOfStream;\n          break;\n\n        case Exports_2.RecognitionStatus.InitialSilenceTimeout:\n        case Exports_2.RecognitionStatus.BabbleTimeout:\n        case Exports_2.RecognitionStatus.Error:\n        default:\n          reason = Exports_1.CancellationReason.Error;\n          break;\n      }\n\n      return reason;\n    };\n\n    return EnumTranslation;\n  }();\n\n  exports.EnumTranslation = EnumTranslation;\n  /***/\n},\n/* 65 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * @class SynthesisStatus\n   * @private\n   */\n\n  var SynthesisStatus;\n\n  (function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n  })(SynthesisStatus = exports.SynthesisStatus || (exports.SynthesisStatus = {}));\n\n  var RecognitionStatus;\n\n  (function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n  })(RecognitionStatus = exports.RecognitionStatus || (exports.RecognitionStatus = {}));\n  /***/\n\n},\n/* 66 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var TranslationSynthesisEnd =\n  /** @class */\n  function () {\n    function TranslationSynthesisEnd(json) {\n      this.obj = JSON.parse(json);\n      this.obj.SynthesisStatus = Exports_1.SynthesisStatus[this.obj.SynthesisStatus];\n    }\n\n    TranslationSynthesisEnd.FromJSON = function (json) {\n      return new TranslationSynthesisEnd(json);\n    };\n\n    Object.defineProperty(TranslationSynthesisEnd.prototype, \"SynthesisStatus\", {\n      get: function get() {\n        return this.obj.SynthesisStatus;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationSynthesisEnd.prototype, \"FailureReason\", {\n      get: function get() {\n        return this.obj.FailureReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationSynthesisEnd;\n  }();\n\n  exports.TranslationSynthesisEnd = TranslationSynthesisEnd;\n  /***/\n},\n/* 67 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var TranslationStatus_1 = __webpack_require__(8);\n\n  var TranslationHypothesis =\n  /** @class */\n  function () {\n    function TranslationHypothesis(json) {\n      this.translationHypothesis = JSON.parse(json);\n      this.translationHypothesis.Translation.TranslationStatus = TranslationStatus_1.TranslationStatus[this.translationHypothesis.Translation.TranslationStatus];\n    }\n\n    TranslationHypothesis.FromJSON = function (json) {\n      return new TranslationHypothesis(json);\n    };\n\n    Object.defineProperty(TranslationHypothesis.prototype, \"Duration\", {\n      get: function get() {\n        return this.translationHypothesis.Duration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Offset\", {\n      get: function get() {\n        return this.translationHypothesis.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Text\", {\n      get: function get() {\n        return this.translationHypothesis.Text;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Translation\", {\n      get: function get() {\n        return this.translationHypothesis.Translation;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationHypothesis;\n  }();\n\n  exports.TranslationHypothesis = TranslationHypothesis;\n  /***/\n},\n/* 68 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var TranslationStatus_1 = __webpack_require__(8);\n\n  var TranslationPhrase =\n  /** @class */\n  function () {\n    function TranslationPhrase(json) {\n      this.translationPhrase = JSON.parse(json);\n      this.translationPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.translationPhrase.RecognitionStatus];\n\n      if (this.translationPhrase.Translation !== undefined) {\n        this.translationPhrase.Translation.TranslationStatus = TranslationStatus_1.TranslationStatus[this.translationPhrase.Translation.TranslationStatus];\n      }\n    }\n\n    TranslationPhrase.FromJSON = function (json) {\n      return new TranslationPhrase(json);\n    };\n\n    Object.defineProperty(TranslationPhrase.prototype, \"RecognitionStatus\", {\n      get: function get() {\n        return this.translationPhrase.RecognitionStatus;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Offset\", {\n      get: function get() {\n        return this.translationPhrase.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Duration\", {\n      get: function get() {\n        return this.translationPhrase.Duration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Text\", {\n      get: function get() {\n        return this.translationPhrase.Text;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Translation\", {\n      get: function get() {\n        return this.translationPhrase.Translation;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationPhrase;\n  }();\n\n  exports.TranslationPhrase = TranslationPhrase;\n  /***/\n},\n/* 69 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(1);\n\n  var Exports_2 = __webpack_require__(0);\n\n  var Exports_3 = __webpack_require__(2); // tslint:disable-next-line:max-classes-per-file\n\n\n  var TranslationServiceRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(TranslationServiceRecognizer, _super);\n\n    function TranslationServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n      var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) || this;\n\n      _this.translationRecognizer = translationRecognizer;\n      return _this;\n    }\n\n    TranslationServiceRecognizer.prototype.ProcessTypeSpecificMessages = function (connectionMessage, requestSession, connection, successCallback, errorCallBack) {\n      switch (connectionMessage.Path.toLowerCase()) {\n        case \"translation.hypothesis\":\n          var result = this.FireEventForResult(Exports_3.TranslationHypothesis.FromJSON(connectionMessage.TextBody), requestSession);\n\n          if (!!this.translationRecognizer.recognizing) {\n            try {\n              this.translationRecognizer.recognizing(this.translationRecognizer, result);\n              /* tslint:disable:no-empty */\n            } catch (error) {// Not going to let errors in the event handler\n              // trip things up.\n            }\n          }\n\n          break;\n\n        case \"translation.phrase\":\n          if (this.recognizerConfig.IsContinuousRecognition) {\n            // For continuous recognition telemetry has to be sent for every phrase as per spec.\n            this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n          }\n\n          var translatedPhrase = Exports_3.TranslationPhrase.FromJSON(connectionMessage.TextBody);\n\n          if (translatedPhrase.RecognitionStatus === Exports_3.RecognitionStatus.Success) {\n            // OK, the recognition was successful. How'd the translation do?\n            var result_1 = this.FireEventForResult(translatedPhrase, requestSession);\n\n            if (!!this.translationRecognizer.recognized) {\n              try {\n                this.translationRecognizer.recognized(this.translationRecognizer, result_1);\n                /* tslint:disable:no-empty */\n              } catch (error) {// Not going to let errors in the event handler\n                // trip things up.\n              }\n            } // report result to promise.\n\n\n            if (!!successCallback) {\n              try {\n                successCallback(result_1.result);\n              } catch (e) {\n                if (!!errorCallBack) {\n                  errorCallBack(e);\n                }\n              } // Only invoke the call back once.\n              // and if it's successful don't invoke the\n              // error after that.\n\n\n              successCallback = undefined;\n              errorCallBack = undefined;\n            }\n\n            break;\n          } else {\n            var reason = Exports_3.EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n            var result_2 = new Exports_2.TranslationRecognitionResult(undefined, requestSession.RequestId, reason, translatedPhrase.Text, translatedPhrase.Duration, translatedPhrase.Offset, undefined, connectionMessage.TextBody, undefined);\n\n            if (reason === Exports_2.ResultReason.Canceled) {\n              var cancelReason = Exports_3.EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n              var ev = new Exports_2.TranslationRecognitionCanceledEventArgs(requestSession.SessionId, cancelReason, null, cancelReason === Exports_2.CancellationReason.Error ? Exports_2.CancellationErrorCode.ServiceError : Exports_2.CancellationErrorCode.NoError, result_2);\n\n              if (!!this.translationRecognizer.canceled) {\n                try {\n                  this.translationRecognizer.canceled(this.translationRecognizer, ev);\n                  /* tslint:disable:no-empty */\n                } catch (error) {// Not going to let errors in the event handler\n                  // trip things up.\n                }\n              }\n            } else {\n              var ev = new Exports_2.TranslationRecognitionEventArgs(result_2, 0\n              /*offset*/\n              , requestSession.SessionId);\n\n              if (!!this.translationRecognizer.recognized) {\n                try {\n                  this.translationRecognizer.recognized(this.translationRecognizer, ev);\n                  /* tslint:disable:no-empty */\n                } catch (error) {// Not going to let errors in the event handler\n                  // trip things up.\n                }\n              }\n            } // report result to promise.\n\n\n            if (!!successCallback) {\n              try {\n                successCallback(result_2);\n              } catch (e) {\n                if (!!errorCallBack) {\n                  errorCallBack(e);\n                }\n              } // Only invoke the call back once.\n              // and if it's successful don't invoke the\n              // error after that.\n\n\n              successCallback = undefined;\n              errorCallBack = undefined;\n            }\n          }\n\n          break;\n\n        case \"translation.synthesis\":\n          this.sendSynthesisAudio(connectionMessage.BinaryBody, requestSession.SessionId);\n          break;\n\n        case \"translation.synthesis.end\":\n          var synthEnd = Exports_3.TranslationSynthesisEnd.FromJSON(connectionMessage.TextBody);\n\n          switch (synthEnd.SynthesisStatus) {\n            case Exports_3.SynthesisStatus.Error:\n              if (!!this.translationRecognizer.synthesizing) {\n                var result_3 = new Exports_2.TranslationSynthesisResult(Exports_2.ResultReason.Canceled, undefined);\n                var retEvent = new Exports_2.TranslationSynthesisEventArgs(result_3, requestSession.SessionId);\n\n                try {\n                  this.translationRecognizer.synthesizing(this.translationRecognizer, retEvent);\n                  /* tslint:disable:no-empty */\n                } catch (error) {// Not going to let errors in the event handler\n                  // trip things up.\n                }\n              }\n\n              if (!!this.translationRecognizer.canceled) {\n                // And raise a canceled event to send the rich(er) error message back.\n                var canceledResult = new Exports_2.TranslationRecognitionCanceledEventArgs(requestSession.SessionId, Exports_2.CancellationReason.Error, synthEnd.FailureReason, Exports_2.CancellationErrorCode.ServiceError, null);\n\n                try {\n                  this.translationRecognizer.canceled(this.translationRecognizer, canceledResult);\n                  /* tslint:disable:no-empty */\n                } catch (error) {// Not going to let errors in the event handler\n                  // trip things up.\n                }\n              }\n\n              break;\n\n            case Exports_3.SynthesisStatus.Success:\n              this.sendSynthesisAudio(undefined, requestSession.SessionId);\n              break;\n\n            default:\n              break;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    TranslationServiceRecognizer.prototype.ConnectionError = function (sessionId, requestId, error) {\n      if (!!this.translationRecognizer.canceled) {\n        var properties = new Exports_2.PropertyCollection();\n        properties.setProperty(Exports_3.CancellationErrorCodePropertyName, Exports_2.CancellationErrorCode[Exports_2.CancellationErrorCode.ConnectionFailure]);\n        var result = new Exports_2.TranslationRecognitionResult(undefined, requestId, Exports_2.ResultReason.Canceled, undefined, undefined, undefined, error, undefined, properties);\n        var cancelEvent = new Exports_2.TranslationRecognitionCanceledEventArgs(sessionId, Exports_2.CancellationReason.Error, error, Exports_2.CancellationErrorCode.ConnectionFailure, result);\n\n        try {\n          this.translationRecognizer.canceled(this.translationRecognizer, cancelEvent);\n          /* tslint:disable:no-empty */\n        } catch (_a) {}\n      }\n    };\n\n    TranslationServiceRecognizer.prototype.FireEventForResult = function (serviceResult, requestSession) {\n      var translations;\n\n      if (undefined !== serviceResult.Translation.Translations) {\n        translations = new Exports_2.Translations();\n\n        for (var _i = 0, _a = serviceResult.Translation.Translations; _i < _a.length; _i++) {\n          var translation = _a[_i];\n          translations.set(translation.Language, translation.Text);\n        }\n      }\n\n      var resultReason;\n\n      if (serviceResult instanceof Exports_3.TranslationPhrase) {\n        if (serviceResult.Translation.TranslationStatus === Exports_1.TranslationStatus.Success) {\n          resultReason = Exports_2.ResultReason.TranslatedSpeech;\n        } else {\n          resultReason = Exports_2.ResultReason.RecognizedSpeech;\n        }\n      } else {\n        resultReason = Exports_2.ResultReason.TranslatingSpeech;\n      }\n\n      var result = new Exports_2.TranslationRecognitionResult(translations, requestSession.RequestId, resultReason, serviceResult.Text, serviceResult.Duration, serviceResult.Offset, serviceResult.Translation.FailureReason, JSON.stringify(serviceResult), undefined);\n      var ev = new Exports_2.TranslationRecognitionEventArgs(result, serviceResult.Offset, requestSession.SessionId);\n      return ev;\n    };\n\n    TranslationServiceRecognizer.prototype.sendSynthesisAudio = function (audio, sessionId) {\n      var reason = undefined === audio ? Exports_2.ResultReason.SynthesizingAudioCompleted : Exports_2.ResultReason.SynthesizingAudio;\n      var result = new Exports_2.TranslationSynthesisResult(reason, audio);\n      var retEvent = new Exports_2.TranslationSynthesisEventArgs(result, sessionId);\n\n      if (!!this.translationRecognizer.synthesizing) {\n        try {\n          this.translationRecognizer.synthesizing(this.translationRecognizer, retEvent);\n          /* tslint:disable:no-empty */\n        } catch (error) {// Not going to let errors in the event handler\n          // trip things up.\n        }\n      }\n    };\n\n    return TranslationServiceRecognizer;\n  }(Exports_3.ServiceRecognizerBase);\n\n  exports.TranslationServiceRecognizer = TranslationServiceRecognizer;\n  /***/\n},\n/* 70 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var SpeechDetected =\n  /** @class */\n  function () {\n    function SpeechDetected(json) {\n      this.speechStartDetected = JSON.parse(json);\n    }\n\n    SpeechDetected.FromJSON = function (json) {\n      return new SpeechDetected(json);\n    };\n\n    Object.defineProperty(SpeechDetected.prototype, \"Offset\", {\n      get: function get() {\n        return this.speechStartDetected.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechDetected;\n  }();\n\n  exports.SpeechDetected = SpeechDetected;\n  /***/\n},\n/* 71 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var SpeechHypothesis =\n  /** @class */\n  function () {\n    function SpeechHypothesis(json) {\n      this.speechHypothesis = JSON.parse(json);\n    }\n\n    SpeechHypothesis.FromJSON = function (json) {\n      return new SpeechHypothesis(json);\n    };\n\n    Object.defineProperty(SpeechHypothesis.prototype, \"Text\", {\n      get: function get() {\n        return this.speechHypothesis.Text;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechHypothesis.prototype, \"Offset\", {\n      get: function get() {\n        return this.speechHypothesis.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechHypothesis.prototype, \"Duration\", {\n      get: function get() {\n        return this.speechHypothesis.Duration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SpeechHypothesis;\n  }();\n\n  exports.SpeechHypothesis = SpeechHypothesis;\n  /***/\n},\n/* 72 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n\n  var Exports_2 = __webpack_require__(2); // tslint:disable-next-line:max-classes-per-file\n\n\n  var SpeechServiceRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(SpeechServiceRecognizer, _super);\n\n    function SpeechServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n      var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) || this;\n\n      _this.speechRecognizer = speechRecognizer;\n      return _this;\n    }\n\n    SpeechServiceRecognizer.prototype.ProcessTypeSpecificMessages = function (connectionMessage, requestSession, connection, successCallback, errorCallBack) {\n      var result;\n\n      switch (connectionMessage.Path.toLowerCase()) {\n        case \"speech.hypothesis\":\n          var hypothesis = Exports_2.SpeechHypothesis.FromJSON(connectionMessage.TextBody);\n          result = new Exports_1.SpeechRecognitionResult(requestSession.RequestId, Exports_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, undefined, connectionMessage.TextBody, undefined);\n          var ev = new Exports_1.SpeechRecognitionEventArgs(result, hypothesis.Duration, requestSession.SessionId);\n\n          if (!!this.speechRecognizer.recognizing) {\n            try {\n              this.speechRecognizer.recognizing(this.speechRecognizer, ev);\n              /* tslint:disable:no-empty */\n            } catch (error) {// Not going to let errors in the event handler\n              // trip things up.\n            }\n          }\n\n          break;\n\n        case \"speech.phrase\":\n          if (this.recognizerConfig.IsContinuousRecognition) {\n            // For continuous recognition telemetry has to be sent for every phrase as per spec.\n            this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n          }\n\n          var simple = Exports_2.SimpleSpeechPhrase.FromJSON(connectionMessage.TextBody);\n          var resultReason = Exports_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n\n          if (Exports_1.ResultReason.Canceled === resultReason) {\n            result = new Exports_1.SpeechRecognitionResult(requestSession.RequestId, resultReason, undefined, undefined, undefined, undefined, connectionMessage.TextBody, undefined);\n\n            if (!!this.speechRecognizer.canceled) {\n              var cancelEvent = new Exports_1.SpeechRecognitionCanceledEventArgs(Exports_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus), undefined, undefined, Exports_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus) === Exports_1.CancellationReason.Error ? Exports_1.CancellationErrorCode.ServiceError : Exports_1.CancellationErrorCode.NoError, requestSession.SessionId);\n\n              try {\n                this.speechRecognizer.canceled(this.speechRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n              } catch (_a) {}\n            }\n          } else {\n            if (this.recognizerConfig.parameters.getProperty(Exports_2.OutputFormatPropertyName) === Exports_1.OutputFormat[Exports_1.OutputFormat.Simple]) {\n              result = new Exports_1.SpeechRecognitionResult(requestSession.RequestId, Exports_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset, undefined, connectionMessage.TextBody, undefined);\n            } else {\n              var detailed = Exports_2.DetailedSpeechPhrase.FromJSON(connectionMessage.TextBody);\n              result = new Exports_1.SpeechRecognitionResult(requestSession.RequestId, Exports_2.EnumTranslation.implTranslateRecognitionResult(detailed.RecognitionStatus), detailed.RecognitionStatus === Exports_2.RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset, undefined, connectionMessage.TextBody, undefined);\n            }\n\n            var event_1 = new Exports_1.SpeechRecognitionEventArgs(result, result.offset, requestSession.SessionId);\n\n            if (!!this.speechRecognizer.recognized) {\n              try {\n                this.speechRecognizer.recognized(this.speechRecognizer, event_1);\n                /* tslint:disable:no-empty */\n              } catch (error) {// Not going to let errors in the event handler\n                // trip things up.\n              }\n            }\n          } // report result to promise.\n\n\n          if (!!successCallback) {\n            try {\n              successCallback(result);\n            } catch (e) {\n              if (!!errorCallBack) {\n                errorCallBack(e);\n              }\n            } // Only invoke the call back once.\n            // and if it's successful don't invoke the\n            // error after that.\n\n\n            successCallback = undefined;\n            errorCallBack = undefined;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    SpeechServiceRecognizer.prototype.ConnectionError = function (sessionId, requestId, error) {\n      if (!!this.speechRecognizer.canceled) {\n        var properties = new Exports_1.PropertyCollection();\n        properties.setProperty(Exports_2.CancellationErrorCodePropertyName, Exports_1.CancellationErrorCode[Exports_1.CancellationErrorCode.ConnectionFailure]);\n        var cancelEvent = new Exports_1.SpeechRecognitionCanceledEventArgs(Exports_1.CancellationReason.Error, error, Exports_1.CancellationErrorCode.ConnectionFailure, undefined, sessionId);\n\n        try {\n          this.speechRecognizer.canceled(this.speechRecognizer, cancelEvent);\n          /* tslint:disable:no-empty */\n        } catch (_a) {}\n      }\n    };\n\n    return SpeechServiceRecognizer;\n  }(Exports_2.ServiceRecognizerBase);\n\n  exports.SpeechServiceRecognizer = SpeechServiceRecognizer;\n  /***/\n},\n/* 73 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var DetailedSpeechPhrase =\n  /** @class */\n  function () {\n    function DetailedSpeechPhrase(json) {\n      this.detailedSpeechPhrase = JSON.parse(json);\n      this.detailedSpeechPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.detailedSpeechPhrase.RecognitionStatus];\n    }\n\n    DetailedSpeechPhrase.FromJSON = function (json) {\n      return new DetailedSpeechPhrase(json);\n    };\n\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"RecognitionStatus\", {\n      get: function get() {\n        return this.detailedSpeechPhrase.RecognitionStatus;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"NBest\", {\n      get: function get() {\n        return this.detailedSpeechPhrase.NBest;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"Duration\", {\n      get: function get() {\n        return this.detailedSpeechPhrase.Duration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"Offset\", {\n      get: function get() {\n        return this.detailedSpeechPhrase.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return DetailedSpeechPhrase;\n  }();\n\n  exports.DetailedSpeechPhrase = DetailedSpeechPhrase;\n  /***/\n},\n/* 74 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var SimpleSpeechPhrase =\n  /** @class */\n  function () {\n    function SimpleSpeechPhrase(json) {\n      this.simpleSpeechPhrase = JSON.parse(json);\n      this.simpleSpeechPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.simpleSpeechPhrase.RecognitionStatus];\n    }\n\n    SimpleSpeechPhrase.FromJSON = function (json) {\n      return new SimpleSpeechPhrase(json);\n    };\n\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"RecognitionStatus\", {\n      get: function get() {\n        return this.simpleSpeechPhrase.RecognitionStatus;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"DisplayText\", {\n      get: function get() {\n        return this.simpleSpeechPhrase.DisplayText;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"Offset\", {\n      get: function get() {\n        return this.simpleSpeechPhrase.Offset;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"Duration\", {\n      get: function get() {\n        return this.simpleSpeechPhrase.Duration;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return SimpleSpeechPhrase;\n  }();\n\n  exports.SimpleSpeechPhrase = SimpleSpeechPhrase;\n  /***/\n},\n/* 75 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * @class AddedLmIntent\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var AddedLmIntent =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    function AddedLmIntent(modelImpl, intentName) {\n      this.modelImpl = modelImpl;\n      this.intentName = intentName;\n    }\n\n    return AddedLmIntent;\n  }();\n\n  exports.AddedLmIntent = AddedLmIntent;\n  /***/\n},\n/* 76 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n\n  var Exports_2 = __webpack_require__(2); // tslint:disable-next-line:max-classes-per-file\n\n\n  var IntentServiceRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(IntentServiceRecognizer, _super);\n\n    function IntentServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, recognizer, intentDataSent) {\n      var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, recognizer) || this;\n\n      _this.intentRecognizer = recognizer;\n      _this.intentDataSent = intentDataSent;\n      return _this;\n    }\n\n    IntentServiceRecognizer.prototype.setIntents = function (addedIntents, umbrellaIntent) {\n      this.addedLmIntents = addedIntents;\n      this.umbrellaIntent = umbrellaIntent;\n    };\n\n    IntentServiceRecognizer.prototype.ProcessTypeSpecificMessages = function (connectionMessage, requestSession, connection, successCallback, errorCallBack) {\n      var _this = this;\n\n      var result;\n      var ev;\n\n      switch (connectionMessage.Path.toLowerCase()) {\n        case \"speech.hypothesis\":\n          var speechHypothesis = Exports_2.SpeechHypothesis.FromJSON(connectionMessage.TextBody);\n          result = new Exports_1.IntentRecognitionResult(undefined, requestSession.RequestId, Exports_1.ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset, undefined, connectionMessage.TextBody, undefined);\n          ev = new Exports_1.IntentRecognitionEventArgs(result, speechHypothesis.Offset, requestSession.SessionId);\n\n          if (!!this.intentRecognizer.recognizing) {\n            try {\n              this.intentRecognizer.recognizing(this.intentRecognizer, ev);\n              /* tslint:disable:no-empty */\n            } catch (error) {// Not going to let errors in the event handler\n              // trip things up.\n            }\n          }\n\n          break;\n\n        case \"speech.phrase\":\n          var simple = Exports_2.SimpleSpeechPhrase.FromJSON(connectionMessage.TextBody);\n          result = new Exports_1.IntentRecognitionResult(undefined, requestSession.RequestId, Exports_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset, undefined, connectionMessage.TextBody, undefined);\n          ev = new Exports_1.IntentRecognitionEventArgs(result, result.offset, requestSession.SessionId);\n\n          var sendEvent = function sendEvent() {\n            if (_this.recognizerConfig.IsContinuousRecognition) {\n              // For continuous recognition telemetry has to be sent for every phrase as per spec.\n              _this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n            }\n\n            if (!!_this.intentRecognizer.recognized) {\n              try {\n                _this.intentRecognizer.recognized(_this.intentRecognizer, ev);\n                /* tslint:disable:no-empty */\n\n              } catch (error) {// Not going to let errors in the event handler\n                // trip things up.\n              }\n            } // report result to promise.\n\n\n            if (!!successCallback) {\n              try {\n                successCallback(result);\n              } catch (e) {\n                if (!!errorCallBack) {\n                  errorCallBack(e);\n                }\n              } // Only invoke the call back once.\n              // and if it's successful don't invoke the\n              // error after that.\n\n\n              successCallback = undefined;\n              errorCallBack = undefined;\n            }\n          }; // If intent data was sent, the terminal result for this recognizer is an intent being found.\n          // If no intent data was sent, the terminal event is speech recognition being successful.\n\n\n          if (false === this.intentDataSent || Exports_1.ResultReason.NoMatch === ev.result.reason) {\n            sendEvent();\n          } else {\n            // Squirrel away the args, when the response event arrives it will build upon them\n            // and then return\n            this.pendingIntentArgs = ev;\n          }\n\n          break;\n\n        case \"response\":\n          // Response from LUIS\n          if (this.recognizerConfig.IsContinuousRecognition) {\n            // For continuous recognition telemetry has to be sent for every phrase as per spec.\n            this.SendTelemetryData(requestSession.RequestId, connection, requestSession.GetTelemetry());\n          }\n\n          ev = this.pendingIntentArgs;\n          this.pendingIntentArgs = undefined;\n          var intentResponse = Exports_2.IntentResponse.FromJSON(connectionMessage.TextBody);\n\n          if (undefined === ev) {\n            // Odd... Not sure this can happen\n            ev = new Exports_1.IntentRecognitionEventArgs(new Exports_1.IntentRecognitionResult(), 0\n            /*TODO*/\n            , requestSession.SessionId);\n          } // If LUIS didn't return anything, send the existing event, else\n          // modify it to show the match.\n          // See if the intent found is in the list of intents asked for.\n\n\n          var addedIntent = this.addedLmIntents[intentResponse.topScoringIntent.intent];\n\n          if (this.umbrellaIntent !== undefined) {\n            addedIntent = this.umbrellaIntent;\n          }\n\n          if (null !== intentResponse && addedIntent !== undefined) {\n            var intentId = addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n            var reason = ev.result.reason;\n\n            if (undefined !== intentId) {\n              reason = Exports_1.ResultReason.RecognizedIntent;\n            } // make sure, properties is set.\n\n\n            var properties = undefined !== ev.result.properties ? ev.result.properties : new Exports_1.PropertyCollection();\n            properties.setProperty(Exports_1.PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.TextBody);\n            ev = new Exports_1.IntentRecognitionEventArgs(new Exports_1.IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset, ev.result.errorDetails, ev.result.json, properties), ev.offset, ev.sessionId);\n          }\n\n          if (!!this.intentRecognizer.recognized) {\n            try {\n              this.intentRecognizer.recognized(this.intentRecognizer, ev);\n              /* tslint:disable:no-empty */\n            } catch (error) {// Not going to let errors in the event handler\n              // trip things up.\n            }\n          } // report result to promise.\n\n\n          if (!!successCallback) {\n            try {\n              successCallback(ev.result);\n            } catch (e) {\n              if (!!errorCallBack) {\n                errorCallBack(e);\n              }\n            } // Only invoke the call back once.\n            // and if it's successful don't invoke the\n            // error after that.\n\n\n            successCallback = undefined;\n            errorCallBack = undefined;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    IntentServiceRecognizer.prototype.ConnectionError = function (sessionId, requestId, error) {\n      if (!!this.intentRecognizer.canceled) {\n        var properties = new Exports_1.PropertyCollection();\n        properties.setProperty(Exports_2.CancellationErrorCodePropertyName, Exports_1.CancellationErrorCode[Exports_1.CancellationErrorCode.ConnectionFailure]);\n        var result = new Exports_1.IntentRecognitionResult(undefined, requestId, Exports_1.ResultReason.Canceled, undefined, undefined, undefined, error, undefined, properties);\n        var cancelEvent = new Exports_1.IntentRecognitionCanceledEventArgs(Exports_1.CancellationReason.Error, error, Exports_1.CancellationErrorCode.ConnectionFailure, undefined, undefined, sessionId);\n\n        try {\n          this.intentRecognizer.canceled(this.intentRecognizer, cancelEvent);\n          /* tslint:disable:no-empty */\n        } catch (_a) {}\n      }\n    };\n\n    return IntentServiceRecognizer;\n  }(Exports_2.ServiceRecognizerBase);\n\n  exports.IntentServiceRecognizer = IntentServiceRecognizer;\n  /***/\n},\n/* 77 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var IntentResponse =\n  /** @class */\n  function () {\n    function IntentResponse(json) {\n      this.intentResponse = JSON.parse(json);\n    }\n\n    IntentResponse.FromJSON = function (json) {\n      return new IntentResponse(json);\n    };\n\n    Object.defineProperty(IntentResponse.prototype, \"query\", {\n      get: function get() {\n        return this.intentResponse.query;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentResponse.prototype, \"topScoringIntent\", {\n      get: function get() {\n        return this.intentResponse.topScoringIntent;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentResponse.prototype, \"entities\", {\n      get: function get() {\n        return this.intentResponse.entities;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return IntentResponse;\n  }();\n\n  exports.IntentResponse = IntentResponse;\n  /***/\n},\n/* 78 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var RecognitionEvents_1 = __webpack_require__(10);\n\n  var ServiceTelemetryListener_Internal_1 = __webpack_require__(79);\n\n  var RequestSession =\n  /** @class */\n  function () {\n    function RequestSession(audioSourceId) {\n      var _this = this;\n\n      this.isDisposed = false;\n      this.detachables = new Array();\n      this.isAudioNodeDetached = false;\n      this.isCompleted = false;\n\n      this.OnAudioSourceAttachCompleted = function (audioNode, isError, error) {\n        _this.audioNode = audioNode;\n\n        if (isError) {\n          _this.OnComplete();\n        } else {\n          _this.OnEvent(new RecognitionEvents_1.ListeningStartedEvent(_this.requestId, _this.sessionId, _this.audioSourceId, _this.audioNodeId));\n        }\n      };\n\n      this.OnPreConnectionStart = function (authFetchEventId, connectionId) {\n        _this.authFetchEventId = authFetchEventId;\n        _this.sessionId = connectionId;\n\n        _this.OnEvent(new RecognitionEvents_1.ConnectingToServiceEvent(_this.requestId, _this.authFetchEventId, _this.sessionId));\n      };\n\n      this.OnAuthCompleted = function (isError, error) {\n        if (isError) {\n          _this.OnComplete();\n        }\n      };\n\n      this.OnConnectionEstablishCompleted = function (statusCode, reason) {\n        if (statusCode === 200) {\n          _this.OnEvent(new RecognitionEvents_1.RecognitionStartedEvent(_this.RequestId, _this.audioSourceId, _this.audioNodeId, _this.authFetchEventId, _this.sessionId));\n\n          return;\n        } else if (statusCode === 403) {\n          _this.OnComplete();\n        } else {\n          _this.OnComplete();\n        }\n      };\n\n      this.OnServiceTurnEndResponse = function () {\n        _this.OnComplete();\n      };\n\n      this.Dispose = function (error) {\n        if (!_this.isDisposed) {\n          // we should have completed by now. If we did not its an unknown error.\n          _this.isDisposed = true;\n\n          for (var _i = 0, _a = _this.detachables; _i < _a.length; _i++) {\n            var detachable = _a[_i];\n            detachable.Detach();\n          }\n\n          _this.serviceTelemetryListener.Dispose();\n        }\n      };\n\n      this.GetTelemetry = function () {\n        return _this.serviceTelemetryListener.GetTelemetry();\n      };\n\n      this.OnEvent = function (event) {\n        _this.serviceTelemetryListener.OnEvent(event);\n\n        Exports_1.Events.Instance.OnEvent(event);\n      };\n\n      this.OnComplete = function () {\n        if (!_this.isCompleted) {\n          _this.isCompleted = true;\n\n          _this.DetachAudioNode();\n        }\n      };\n\n      this.DetachAudioNode = function () {\n        if (!_this.isAudioNodeDetached) {\n          _this.isAudioNodeDetached = true;\n\n          if (_this.audioNode) {\n            _this.audioNode.Detach();\n          }\n        }\n      };\n\n      this.audioSourceId = audioSourceId;\n      this.requestId = Exports_1.CreateNoDashGuid();\n      this.audioNodeId = Exports_1.CreateNoDashGuid();\n      this.requestCompletionDeferral = new Exports_1.Deferred();\n      this.serviceTelemetryListener = new ServiceTelemetryListener_Internal_1.ServiceTelemetryListener(this.requestId, this.audioSourceId, this.audioNodeId);\n      this.OnEvent(new RecognitionEvents_1.RecognitionTriggeredEvent(this.RequestId, this.sessionId, this.audioSourceId, this.audioNodeId));\n    }\n\n    Object.defineProperty(RequestSession.prototype, \"SessionId\", {\n      get: function get() {\n        return this.sessionId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"RequestId\", {\n      get: function get() {\n        return this.requestId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"AudioNodeId\", {\n      get: function get() {\n        return this.audioNodeId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"CompletionPromise\", {\n      get: function get() {\n        return this.requestCompletionDeferral.Promise();\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"IsSpeechEnded\", {\n      get: function get() {\n        return this.isAudioNodeDetached;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"IsCompleted\", {\n      get: function get() {\n        return this.isCompleted;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    RequestSession.prototype.ListenForServiceTelemetry = function (eventSource) {\n      this.detachables.push(eventSource.AttachListener(this.serviceTelemetryListener));\n    };\n\n    return RequestSession;\n  }();\n\n  exports.RequestSession = RequestSession;\n  /***/\n},\n/* 79 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var RecognitionEvents_1 = __webpack_require__(10); // tslint:disable-next-line:max-classes-per-file\n\n\n  var ServiceTelemetryListener =\n  /** @class */\n  function () {\n    function ServiceTelemetryListener(requestId, audioSourceId, audioNodeId) {\n      var _this = this;\n\n      this.isDisposed = false;\n      this.listeningTriggerMetric = null;\n      this.micMetric = null;\n      this.connectionEstablishMetric = null;\n\n      this.OnEvent = function (e) {\n        if (_this.isDisposed) {\n          return;\n        }\n\n        if (e instanceof RecognitionEvents_1.RecognitionTriggeredEvent && e.RequestId === _this.requestId) {\n          _this.listeningTriggerMetric = {\n            End: e.EventTime,\n            Name: \"ListeningTrigger\",\n            Start: e.EventTime\n          };\n        }\n\n        if (e instanceof Exports_1.AudioStreamNodeAttachingEvent && e.AudioSourceId === _this.audioSourceId && e.AudioNodeId === _this.audioNodeId) {\n          _this.micStartTime = e.EventTime;\n        }\n\n        if (e instanceof Exports_1.AudioStreamNodeAttachedEvent && e.AudioSourceId === _this.audioSourceId && e.AudioNodeId === _this.audioNodeId) {\n          _this.micStartTime = e.EventTime;\n        }\n\n        if (e instanceof Exports_1.AudioSourceErrorEvent && e.AudioSourceId === _this.audioSourceId) {\n          if (!_this.micMetric) {\n            _this.micMetric = {\n              End: e.EventTime,\n              Error: e.Error,\n              Name: \"Microphone\",\n              Start: _this.micStartTime\n            };\n          }\n        }\n\n        if (e instanceof Exports_1.AudioStreamNodeErrorEvent && e.AudioSourceId === _this.audioSourceId && e.AudioNodeId === _this.audioNodeId) {\n          if (!_this.micMetric) {\n            _this.micMetric = {\n              End: e.EventTime,\n              Error: e.Error,\n              Name: \"Microphone\",\n              Start: _this.micStartTime\n            };\n          }\n        }\n\n        if (e instanceof Exports_1.AudioStreamNodeDetachedEvent && e.AudioSourceId === _this.audioSourceId && e.AudioNodeId === _this.audioNodeId) {\n          if (!_this.micMetric) {\n            _this.micMetric = {\n              End: e.EventTime,\n              Name: \"Microphone\",\n              Start: _this.micStartTime\n            };\n          }\n        }\n\n        if (e instanceof RecognitionEvents_1.ConnectingToServiceEvent && e.RequestId === _this.requestId) {\n          _this.connectionId = e.SessionId;\n        }\n\n        if (e instanceof Exports_1.ConnectionStartEvent && e.ConnectionId === _this.connectionId) {\n          _this.connectionStartTime = e.EventTime;\n        }\n\n        if (e instanceof Exports_1.ConnectionEstablishedEvent && e.ConnectionId === _this.connectionId) {\n          if (!_this.connectionEstablishMetric) {\n            _this.connectionEstablishMetric = {\n              End: e.EventTime,\n              Id: _this.connectionId,\n              Name: \"Connection\",\n              Start: _this.connectionStartTime\n            };\n          }\n        }\n\n        if (e instanceof Exports_1.ConnectionEstablishErrorEvent && e.ConnectionId === _this.connectionId) {\n          if (!_this.connectionEstablishMetric) {\n            _this.connectionEstablishMetric = {\n              End: e.EventTime,\n              Error: _this.GetConnectionError(e.StatusCode),\n              Id: _this.connectionId,\n              Name: \"Connection\",\n              Start: _this.connectionStartTime\n            };\n          }\n        }\n\n        if (e instanceof Exports_1.ConnectionMessageReceivedEvent && e.ConnectionId === _this.connectionId) {\n          if (e.Message && e.Message.Headers && e.Message.Headers.path) {\n            if (!_this.receivedMessages[e.Message.Headers.path]) {\n              _this.receivedMessages[e.Message.Headers.path] = new Array();\n            }\n\n            _this.receivedMessages[e.Message.Headers.path].push(e.NetworkReceivedTime);\n          }\n        }\n      };\n\n      this.GetTelemetry = function () {\n        var metrics = new Array();\n\n        if (_this.listeningTriggerMetric) {\n          metrics.push(_this.listeningTriggerMetric);\n        }\n\n        if (_this.micMetric) {\n          metrics.push(_this.micMetric);\n        }\n\n        if (_this.connectionEstablishMetric) {\n          metrics.push(_this.connectionEstablishMetric);\n        }\n\n        var telemetry = {\n          Metrics: metrics,\n          ReceivedMessages: _this.receivedMessages\n        };\n        var json = JSON.stringify(telemetry); // We dont want to send the same telemetry again. So clean those out.\n\n        _this.receivedMessages = {};\n        _this.listeningTriggerMetric = null;\n        _this.micMetric = null;\n        _this.connectionEstablishMetric = null;\n        return json;\n      };\n\n      this.Dispose = function () {\n        _this.isDisposed = true;\n      };\n\n      this.GetConnectionError = function (statusCode) {\n        /*\n        -- Websocket status codes --\n        NormalClosure = 1000,\n        EndpointUnavailable = 1001,\n        ProtocolError = 1002,\n        InvalidMessageType = 1003,\n        Empty = 1005,\n        InvalidPayloadData = 1007,\n        PolicyViolation = 1008,\n        MessageTooBig = 1009,\n        MandatoryExtension = 1010,\n        InternalServerError = 1011\n        */\n        switch (statusCode) {\n          case 400:\n          case 1002:\n          case 1003:\n          case 1005:\n          case 1007:\n          case 1008:\n          case 1009:\n            return \"BadRequest\";\n\n          case 401:\n            return \"Unauthorized\";\n\n          case 403:\n            return \"Forbidden\";\n\n          case 503:\n          case 1001:\n            return \"ServerUnavailable\";\n\n          case 500:\n          case 1011:\n            return \"ServerError\";\n\n          case 408:\n          case 504:\n            return \"Timeout\";\n\n          default:\n            return \"statuscode:\" + statusCode.toString();\n        }\n      };\n\n      this.requestId = requestId;\n      this.audioSourceId = audioSourceId;\n      this.audioNodeId = audioNodeId;\n      this.receivedMessages = {};\n    }\n\n    return ServiceTelemetryListener;\n  }();\n\n  exports.ServiceTelemetryListener = ServiceTelemetryListener;\n  /***/\n},\n/* 80 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Speech translation configuration.\n   * @class SpeechTranslationConfig\n   */\n\n\n  var SpeechTranslationConfig =\n  /** @class */\n  function (_super) {\n    __extends(SpeechTranslationConfig, _super);\n    /**\n     * Creates an instance of recognizer config.\n     */\n\n\n    function SpeechTranslationConfig() {\n      return _super.call(this) || this;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n\n\n    SpeechTranslationConfig.fromSubscription = function (subscriptionKey, region) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n      var ret = new SpeechTranslationConfigImpl();\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n      return ret;\n    };\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expipres, the caller needs to refresh it by setting the property authorizationToken with a new valid token.\n     * Otherwise, all the recognizers created by this SpeechTranslationConfig instance will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n\n\n    SpeechTranslationConfig.fromAuthorizationToken = function (authorizationToken, region) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n      var ret = new SpeechTranslationConfigImpl();\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n      return ret;\n    };\n    /**\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by the speechRecognitionLanguage property,\n     * the language setting in uri takes precedence, and the effective language is \"de-DE\".\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\n     * @member SpeechTranslationConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechTranslationConfig} A speech config instance.\n     */\n\n\n    SpeechTranslationConfig.fromEndpoint = function (endpoint, subscriptionKey) {\n      Contracts_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n      var ret = new SpeechTranslationConfigImpl();\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n      ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n      return ret;\n    };\n\n    return SpeechTranslationConfig;\n  }(Exports_2.SpeechConfig);\n\n  exports.SpeechTranslationConfig = SpeechTranslationConfig;\n  /**\n   * @private\n   * @class SpeechTranslationConfigImpl\n   */\n  // tslint:disable-next-line:max-classes-per-file\n\n  var SpeechTranslationConfigImpl =\n  /** @class */\n  function (_super) {\n    __extends(SpeechTranslationConfigImpl, _super);\n\n    function SpeechTranslationConfigImpl() {\n      var _this = _super.call(this) || this;\n\n      _this.speechProperties = new Exports_2.PropertyCollection();\n      return _this;\n    }\n\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"authorizationToken\", {\n      /**\n       * Sets the authorization token.\n       * If this is set, subscription key is ignored.\n       * User needs to make sure the provided authorization token is valid and not expired.\n       * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n       * @function\n       * @public\n       * @param {string} value - The authorization token.\n       */\n      set: function set(value) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"speechRecognitionLanguage\", {\n      /**\n       * Sets the authorization token.\n       * If this is set, subscription key is ignored.\n       * User needs to make sure the provided authorization token is valid and not expired.\n       * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n       * @function\n       * @public\n       * @param {string} value - The authorization token.\n       */\n      set: function set(value) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"subscriptionKey\", {\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n       * @function\n       * @public\n       */\n      get: function get() {\n        return this.speechProperties.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_Key]);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"outputFormat\", {\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.outputFormat\n       * @function\n       * @public\n       */\n      get: function get() {\n        return Exports_2.OutputFormat[this.speechProperties.getProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[Exports_2.OutputFormat.Simple])];\n      },\n\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.outputFormat\n       * @function\n       * @public\n       */\n      set: function set(value) {\n        this.speechProperties.setProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[value]);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"endpointId\", {\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.endpointId\n       * @function\n       * @public\n       */\n      get: function get() {\n        return this.speechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId);\n      },\n\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.endpointId\n       * @function\n       * @public\n       */\n      set: function set(value) {\n        this.speechProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n\n    SpeechTranslationConfigImpl.prototype.addTargetLanguage = function (value) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n      var languages = this.targetLanguages;\n      languages.push(value);\n      this.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n    };\n\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"targetLanguages\", {\n      /**\n       * Add a (text) target language to translate into.\n       * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n       * @function\n       * @public\n       * @param {string} value - The language such as de-DE\n       */\n      get: function get() {\n        if (this.speechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n          return this.speechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        } else {\n          return [];\n        }\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"voiceName\", {\n      /**\n       * @member SpeechTranslationConfigImpl.prototype.voiceName\n       * @function\n       * @public\n       */\n      get: function get() {\n        return this.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n      },\n\n      /**\n       * Sets voice of the translated language, enable voice synthesis output.\n       * @member SpeechTranslationConfigImpl.prototype.voiceName\n       * @function\n       * @public\n       * @param {string} value - The name of the voice.\n       */\n      set: function set(value) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"region\", {\n      /**\n       * Provides the region.\n       * @member SpeechTranslationConfigImpl.prototype.region\n       * @function\n       * @public\n       * @returns {string} The region.\n       */\n      get: function get() {\n        return this.speechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Region);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Allows for setting arbitrary properties.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} value - The value of the property.\n     */\n\n    SpeechTranslationConfigImpl.prototype.setProperty = function (name, value) {\n      this.properties.setProperty(name, value);\n    };\n    /**\n     * Allows for retrieving arbitrary property values.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n\n\n    SpeechTranslationConfigImpl.prototype.getProperty = function (name, def) {\n      return this.speechProperties.getProperty(name, def);\n    };\n\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"properties\", {\n      /**\n       * Provides access to custom properties.\n       * @member SpeechTranslationConfigImpl.prototype.properties\n       * @function\n       * @public\n       * @returns {PropertyCollection} The properties.\n       */\n      get: function get() {\n        return this.speechProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n\n    SpeechTranslationConfigImpl.prototype.close = function () {\n      return;\n    };\n\n    return SpeechTranslationConfigImpl;\n  }(SpeechTranslationConfig);\n\n  exports.SpeechTranslationConfigImpl = SpeechTranslationConfigImpl;\n  /***/\n},\n/* 81 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Represents collection of properties and their values.\n   * @class PropertyCollection\n   */\n\n\n  var PropertyCollection =\n  /** @class */\n  function () {\n    function PropertyCollection() {\n      this.keys = [];\n      this.values = [];\n    }\n    /**\n     * Returns the property value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n\n\n    PropertyCollection.prototype.getProperty = function (key, def) {\n      var keyToUse;\n\n      if (typeof key === \"string\") {\n        keyToUse = key;\n      } else {\n        keyToUse = Exports_1.PropertyId[key];\n      }\n\n      for (var n = 0; n < this.keys.length; n++) {\n        if (this.keys[n] === keyToUse) {\n          return this.values[n];\n        }\n      }\n\n      return def;\n    };\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n\n\n    PropertyCollection.prototype.setProperty = function (key, value) {\n      var keyToUse;\n\n      if (typeof key === \"string\") {\n        keyToUse = key;\n      } else {\n        keyToUse = Exports_1.PropertyId[key];\n      }\n\n      for (var n = 0; n < this.keys.length; n++) {\n        if (this.keys[n] === keyToUse) {\n          this.values[n] = value;\n          return;\n        }\n      }\n\n      this.keys.push(keyToUse);\n      this.values.push(value);\n    };\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n\n\n    PropertyCollection.prototype.clone = function () {\n      var clonedMap = new PropertyCollection();\n\n      for (var n = 0; n < this.keys.length; n++) {\n        clonedMap.keys.push(this.keys[n]);\n        clonedMap.values.push(this.values[n]);\n      }\n\n      return clonedMap;\n    };\n\n    return PropertyCollection;\n  }();\n\n  exports.PropertyCollection = PropertyCollection;\n  /***/\n},\n/* 82 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines speech property ids.\n   * @class PropertyId\n   */\n\n  var PropertyId;\n\n  (function (PropertyId) {\n    /**\n     * Subscription key.\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * Endpoint.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * Region.\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * Authorization token.\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * Authorization type.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * Endpoint ID.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * Translation to languages.\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * Translation output voice.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * Intent region.\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 9] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * Recognition mode.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 10] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * Recognition language.\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 11] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * Session id.\n     * @member PropertyId.Speech_SessionId\n     */\n\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 12] = \"Speech_SessionId\";\n    /**\n     * Detailed result required.\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 13] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * Profanity filtering required.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 14] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * JSON in result.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 15] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * Error details.\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 16] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * Cancellation reason.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 17] = \"CancellationDetails_Reason\";\n    /**\n     * Cancellation text.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 18] = \"CancellationDetails_ReasonText\";\n    /**\n     * Cancellation detailed text.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 19] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * JSON result of language understanding service.\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 20] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n  })(PropertyId = exports.PropertyId || (exports.PropertyId = {}));\n  /***/\n\n},\n/* 83 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Exports_2 = __webpack_require__(1);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_3 = __webpack_require__(0);\n  /**\n   * Defines the base class Recognizer which mainly contains common event handlers.\n   * @class Recognizer\n   */\n\n\n  var Recognizer =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     */\n    function Recognizer(audioConfig) {\n      this.audioConfig = audioConfig !== undefined ? audioConfig : Exports_3.AudioConfig.fromDefaultMicrophoneInput();\n      this.disposed = false;\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n\n\n    Recognizer.prototype.close = function () {\n      Contracts_1.Contracts.throwIfDisposed(this.disposed);\n      this.dispose(true);\n    };\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n\n\n    Recognizer.prototype.dispose = function (disposing) {\n      if (this.disposed) {\n        return;\n      }\n\n      if (disposing) {// disconnect\n      }\n\n      this.disposed = true;\n    }; // Setup the recognizer\n\n\n    Recognizer.prototype.implRecognizerSetup = function (recognitionMode, speechProperties, audioConfig, speechConnectionFactory) {\n      var osPlatform = window !== undefined ? \"Browser\" : \"Node\";\n      var osName = \"unknown\";\n      var osVersion = \"unknown\";\n\n      if (navigator !== undefined) {\n        osPlatform = osPlatform + \"/\" + navigator.platform;\n        osName = navigator.userAgent;\n        osVersion = navigator.appVersion;\n      }\n\n      var recognizerConfig = this.CreateRecognizerConfig(new Exports_1.PlatformConfig(new Exports_1.Context(new Exports_1.OS(osPlatform, osName, osVersion))), recognitionMode); // SDK.SpeechResultFormat.Simple (Options - Simple/Detailed)\n\n      var subscriptionKey = speechProperties.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Key, undefined);\n      var authentication = subscriptionKey ? new Exports_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey) : new Exports_1.CognitiveTokenAuthentication(function (authFetchEventId) {\n        var authorizationToken = speechProperties.getProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n        return Exports_2.PromiseHelper.FromResult(authorizationToken);\n      }, function (authFetchEventId) {\n        var authorizationToken = speechProperties.getProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n        return Exports_2.PromiseHelper.FromResult(authorizationToken);\n      });\n      return this.CreateServiceRecognizer(authentication, speechConnectionFactory, audioConfig, recognizerConfig);\n    }; // Start the recognition\n\n\n    Recognizer.prototype.implRecognizerStart = function (recognizer, successCallback, errorCallback, speechContext) {\n      recognizer.Recognize(speechContext, successCallback, errorCallback).On(\n      /* tslint:disable:no-empty */\n      function (result) {}, function (error) {\n        if (!!errorCallback) {\n          // Internal error with service communication.\n          errorCallback(\"Runtime error: \" + error);\n        }\n      });\n    };\n\n    return Recognizer;\n  }();\n\n  exports.Recognizer = Recognizer;\n  /***/\n},\n/* 84 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(2);\n\n  var SpeechConnectionFactory_1 = __webpack_require__(19);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n   * @class SpeechRecognizer\n   */\n\n\n  var SpeechRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(SpeechRecognizer, _super);\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n\n\n    function SpeechRecognizer(speechConfig, audioConfig) {\n      var _this = _super.call(this, audioConfig) || this;\n\n      _this.disposedSpeechRecognizer = false;\n      var speechConfigImpl = speechConfig;\n      Contracts_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n      _this.privProperties = speechConfigImpl.properties.clone();\n      Contracts_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n      return _this;\n    }\n\n    Object.defineProperty(SpeechRecognizer.prototype, \"endpointId\", {\n      /**\n       * Gets the endpoint id of a customized speech model that is used for speech recognition.\n       * @member SpeechRecognizer.prototype.endpointId\n       * @function\n       * @public\n       * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"authorizationToken\", {\n      /**\n       * Gets the authorization token used to communicate with the service.\n       * @member SpeechRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @returns {string} Authorization token.\n       */\n      get: function get() {\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n      },\n\n      /**\n       * Sets the authorization token used to communicate with the service.\n       * @member SpeechRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @param {string} token - Authorization token.\n       */\n      set: function set(token) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, token);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"speechRecognitionLanguage\", {\n      /**\n       * Gets the spoken language of recognition.\n       * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n       * @function\n       * @public\n       * @returns {string} The spoken language of recognition.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"outputFormat\", {\n      /**\n       * Gets the output format of recognition.\n       * @member SpeechRecognizer.prototype.outputFormat\n       * @function\n       * @public\n       * @returns {OutputFormat} The output format of recognition.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n\n        if (this.properties.getProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[Exports_2.OutputFormat.Simple]) === Exports_2.OutputFormat[Exports_2.OutputFormat.Simple]) {\n          return Exports_2.OutputFormat.Simple;\n        } else {\n          return Exports_2.OutputFormat.Detailed;\n        }\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"properties\", {\n      /**\n       * The collection of properties and their values defined for this SpeechRecognizer.\n       * @member SpeechRecognizer.prototype.properties\n       * @function\n       * @public\n       * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n       */\n      get: function get() {\n        return this.privProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized. The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized, so it is suitable only for single shot recognition\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n\n    SpeechRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n        this.implCloseExistingRecognizer();\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Interactive, this.properties, this.audioConfig, new SpeechConnectionFactory_1.SpeechConnectionFactory());\n        this.implRecognizerStart(this.reco, cb, err);\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    SpeechRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n        this.implCloseExistingRecognizer();\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Conversation, this.properties, this.audioConfig, new SpeechConnectionFactory_1.SpeechConnectionFactory());\n        this.implRecognizerStart(this.reco, undefined, undefined); // report result to promise.\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n\n          cb = undefined;\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    SpeechRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n        this.implCloseExistingRecognizer();\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    SpeechRecognizer.prototype.startKeywordRecognitionAsync = function (model, cb, err) {\n      Contracts_1.Contracts.throwIfNull(model, \"model\");\n\n      if (!!err) {\n        err(\"Not yet implemented.\");\n      }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    SpeechRecognizer.prototype.stopKeywordRecognitionAsync = function (cb, err) {\n      if (!!cb) {\n        cb();\n      }\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n\n\n    SpeechRecognizer.prototype.close = function () {\n      Contracts_1.Contracts.throwIfDisposed(this.disposedSpeechRecognizer);\n      this.dispose(true);\n    };\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n\n\n    SpeechRecognizer.prototype.dispose = function (disposing) {\n      if (this.disposedSpeechRecognizer) {\n        return;\n      }\n\n      if (disposing) {\n        this.implCloseExistingRecognizer();\n        this.disposedSpeechRecognizer = true;\n      }\n\n      _super.prototype.dispose.call(this, disposing);\n    };\n\n    SpeechRecognizer.prototype.CreateRecognizerConfig = function (speechConfig, recognitionMode) {\n      return new Exports_1.RecognizerConfig(speechConfig, recognitionMode, this.properties);\n    };\n\n    SpeechRecognizer.prototype.CreateServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n      var configImpl = audioConfig;\n      return new Exports_1.SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    };\n\n    SpeechRecognizer.prototype.implCloseExistingRecognizer = function () {\n      if (this.reco) {\n        this.reco.AudioSource.TurnOff();\n        this.reco.Dispose();\n        this.reco = undefined;\n      }\n    };\n\n    return SpeechRecognizer;\n  }(Exports_2.Recognizer);\n\n  exports.SpeechRecognizer = SpeechRecognizer;\n  /***/\n},\n/* 85 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Intent recognizer.\n   * @class\n   */\n\n\n  var IntentRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(IntentRecognizer, _super);\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n\n\n    function IntentRecognizer(speechConfig, audioConfig) {\n      var _this = this;\n\n      Contracts_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n      var configImpl = speechConfig;\n      Contracts_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n      _this = _super.call(this, audioConfig) || this;\n      _this.intentDataSent = false;\n      _this.addedIntents = [];\n      _this.addedLmIntents = {};\n      _this.disposedIntentRecognizer = false;\n      _this.privProperties = configImpl.properties;\n      Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n      return _this;\n    }\n\n    Object.defineProperty(IntentRecognizer.prototype, \"speechRecognitionLanguage\", {\n      /**\n       * Gets the spoken language of recognition.\n       * @member IntentRecognizer.prototype.speechRecognitionLanguage\n       * @function\n       * @public\n       * @returns {string} the spoken language of recognition.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentRecognizer.prototype, \"authorizationToken\", {\n      /**\n       * Gets the authorization token used to communicate with the service.\n       * @member IntentRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @returns {string} Authorization token.\n       */\n      get: function get() {\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n      },\n\n      /**\n       * Sets the authorization token used to communicate with the service.\n       * @member IntentRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @param {string} value - Authorization token.\n       */\n      set: function set(value) {\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentRecognizer.prototype, \"properties\", {\n      /**\n       * The collection of properties and their values defined for this IntentRecognizer.\n       * @member IntentRecognizer.prototype.properties\n       * @function\n       * @public\n       * @returns {PropertyCollection} The collection of properties and their values defined for this IntentRecognizer.\n       */\n      get: function get() {\n        return this.privProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized. The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized, so it is suitable only for single shot recognition like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n\n    IntentRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n        this.implCloseExistingRecognizer();\n        var contextJson = void 0;\n\n        if (Object.keys(this.addedLmIntents).length !== 0 || undefined !== this.umbrellaIntent) {\n          contextJson = this.buildSpeechContext();\n          this.intentDataSent = true;\n        }\n\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Interactive, this.properties, this.audioConfig, new Exports_1.IntentConnectionFactory());\n        var intentReco = this.reco;\n        intentReco.setIntents(this.addedLmIntents, this.umbrellaIntent);\n        this.implRecognizerStart(this.reco, cb, err, contextJson);\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    IntentRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n        this.implCloseExistingRecognizer();\n        var contextJson = void 0;\n\n        if (Object.keys(this.addedLmIntents).length !== 0) {\n          contextJson = this.buildSpeechContext();\n          this.intentDataSent = true;\n        }\n\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Conversation, this.properties, this.audioConfig, new Exports_1.IntentConnectionFactory());\n        var intentReco = this.reco;\n        intentReco.setIntents(this.addedLmIntents, this.umbrellaIntent);\n        this.implRecognizerStart(this.reco, undefined, undefined, contextJson); // report result to promise.\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n\n          cb = undefined;\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    IntentRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n        this.implCloseExistingRecognizer();\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    IntentRecognizer.prototype.startKeywordRecognitionAsync = function (model, cb, err) {\n      Contracts_1.Contracts.throwIfNull(model, \"model\");\n\n      if (!!err) {\n        err(\"Not yet implemented.\");\n      }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    IntentRecognizer.prototype.stopKeywordRecognitionAsync = function (cb, err) {\n      if (!!cb) {\n        cb();\n      }\n    };\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n\n\n    IntentRecognizer.prototype.addIntent = function (simplePhrase, intentId) {\n      Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n      Contracts_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n      Contracts_1.Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n      this.addedIntents.push([intentId, simplePhrase]);\n    };\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it is empty, all intent names defined in the model will be added.\n     */\n\n\n    IntentRecognizer.prototype.addIntentWithLanguageModel = function (intentId, model, intentName) {\n      Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n      Contracts_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n      Contracts_1.Contracts.throwIfNull(model, \"model\");\n      var modelImpl = model;\n      Contracts_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n      this.addedLmIntents[intentId] = new Exports_1.AddedLmIntent(modelImpl, intentName);\n    };\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n\n\n    IntentRecognizer.prototype.addAllIntents = function (model, intentId) {\n      Contracts_1.Contracts.throwIfNull(model, \"model\");\n      var modelImpl = model;\n      Contracts_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n      this.umbrellaIntent = new Exports_1.AddedLmIntent(modelImpl, intentId);\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n\n\n    IntentRecognizer.prototype.close = function () {\n      Contracts_1.Contracts.throwIfDisposed(this.disposedIntentRecognizer);\n      this.dispose(true);\n    };\n\n    IntentRecognizer.prototype.CreateRecognizerConfig = function (speecgConfig, recognitionMode) {\n      return new Exports_1.RecognizerConfig(speecgConfig, recognitionMode, this.properties);\n    };\n\n    IntentRecognizer.prototype.CreateServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n      var audioImpl = audioConfig;\n      return new Exports_1.IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this, this.intentDataSent);\n    };\n\n    IntentRecognizer.prototype.dispose = function (disposing) {\n      if (this.disposedIntentRecognizer) {\n        return;\n      }\n\n      if (disposing) {\n        this.disposedIntentRecognizer = true;\n\n        _super.prototype.dispose.call(this, disposing);\n      }\n    };\n\n    IntentRecognizer.prototype.implCloseExistingRecognizer = function () {\n      if (this.reco) {\n        this.reco.AudioSource.TurnOff();\n        this.reco.Dispose();\n        this.reco = undefined;\n      }\n    };\n\n    IntentRecognizer.prototype.buildSpeechContext = function () {\n      var appId;\n      var region;\n      var subscriptionKey;\n      var refGrammers = [];\n\n      if (undefined !== this.umbrellaIntent) {\n        appId = this.umbrellaIntent.modelImpl.appId;\n        region = this.umbrellaIntent.modelImpl.region;\n        subscriptionKey = this.umbrellaIntent.modelImpl.subscriptionKey;\n      } // Build the reference grammer array.\n\n\n      for (var _i = 0, _a = Object.keys(this.addedLmIntents); _i < _a.length; _i++) {\n        var intentId = _a[_i];\n        var addedLmIntent = this.addedLmIntents[intentId]; // validate all the same model, region, and key...\n\n        if (appId === undefined) {\n          appId = addedLmIntent.modelImpl.appId;\n        } else {\n          if (appId !== addedLmIntent.modelImpl.appId) {\n            throw new Error(\"Intents must all be from the same LUIS model\");\n          }\n        }\n\n        if (region === undefined) {\n          region = addedLmIntent.modelImpl.region;\n        } else {\n          if (region !== addedLmIntent.modelImpl.region) {\n            throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n          }\n        }\n\n        if (subscriptionKey === undefined) {\n          subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n        } else {\n          if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n            throw new Error(\"Intents must all use the same subscription key\");\n          }\n        }\n\n        var grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n        refGrammers.push(grammer);\n      }\n\n      return JSON.stringify({\n        dgi: {\n          ReferenceGrammars: undefined === this.umbrellaIntent ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"]\n        },\n        intent: {\n          id: appId,\n          key: subscriptionKey === undefined ? this.privProperties.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n          provider: \"LUIS\"\n        }\n      });\n    };\n\n    return IntentRecognizer;\n  }(Exports_2.Recognizer);\n\n  exports.IntentRecognizer = IntentRecognizer;\n  /***/\n},\n/* 86 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Contracts_1 = __webpack_require__(4);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Translation recognizer\n   * @class TranslationRecognizer\n   */\n\n\n  var TranslationRecognizer =\n  /** @class */\n  function (_super) {\n    __extends(TranslationRecognizer, _super);\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n\n\n    function TranslationRecognizer(speechConfig, audioConfig) {\n      var _this = this;\n\n      var configImpl = speechConfig;\n      Contracts_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n      _this = _super.call(this, audioConfig) || this;\n      _this.disposedTranslationRecognizer = false;\n      _this.privProperties = configImpl.properties.clone();\n\n      if (_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n      }\n\n      Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n      Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n      return _this;\n    }\n\n    Object.defineProperty(TranslationRecognizer.prototype, \"speechRecognitionLanguage\", {\n      /**\n       * Gets the language name that was set when the recognizer was created.\n       * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n       * @function\n       * @public\n       * @returns {string} Gets the language name that was set when the recognizer was created.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"targetLanguages\", {\n      /**\n       * Gets target languages for translation that were set when the recognizer was created.\n       * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n       * @member TranslationRecognizer.prototype.targetLanguages\n       * @function\n       * @public\n       * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"voiceName\", {\n      /**\n       * Gets the name of output voice.\n       * @member TranslationRecognizer.prototype.voiceName\n       * @function\n       * @public\n       * @returns {string} the name of output voice.\n       */\n      get: function get() {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"authorizationToken\", {\n      /**\n       * Gets the authorization token used to communicate with the service.\n       * @member TranslationRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @returns {string} Authorization token.\n       */\n      get: function get() {\n        return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n      },\n\n      /**\n       * Sets the authorization token used to communicate with the service.\n       * @member TranslationRecognizer.prototype.authorizationToken\n       * @function\n       * @public\n       * @param {string} value - Authorization token.\n       */\n      set: function set(value) {\n        this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"properties\", {\n      /**\n       * The collection of properties and their values defined for this TranslationRecognizer.\n       * @member TranslationRecognizer.prototype.properties\n       * @function\n       * @public\n       * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n       */\n      get: function get() {\n        return this.privProperties;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized. The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitableonly\n     *       for single shot recognition like command or query. For long-running recognition, use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n\n    TranslationRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        this.implCloseExistingRecognizer();\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Conversation, this.properties, this.audioConfig, new Exports_1.TranslationConnectionFactory());\n        this.implRecognizerStart(this.reco, cb, err);\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    TranslationRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        this.implCloseExistingRecognizer();\n        this.reco = this.implRecognizerSetup(Exports_1.RecognitionMode.Conversation, this.properties, this.audioConfig, new Exports_1.TranslationConnectionFactory());\n        this.implRecognizerStart(this.reco, undefined, undefined); // report result to promise.\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n\n          cb = undefined;\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n\n\n    TranslationRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n      try {\n        Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n        this.implCloseExistingRecognizer();\n\n        if (!!cb) {\n          try {\n            cb();\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n        }\n      } catch (error) {\n        if (!!err) {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n        }\n      }\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n\n\n    TranslationRecognizer.prototype.close = function () {\n      Contracts_1.Contracts.throwIfDisposed(this.disposedTranslationRecognizer);\n      this.dispose(true);\n    };\n\n    TranslationRecognizer.prototype.dispose = function (disposing) {\n      if (this.disposedTranslationRecognizer) {\n        return;\n      }\n\n      if (disposing) {\n        this.implCloseExistingRecognizer();\n        this.disposedTranslationRecognizer = true;\n\n        _super.prototype.dispose.call(this, disposing);\n      }\n    };\n\n    TranslationRecognizer.prototype.CreateRecognizerConfig = function (speechConfig, recognitionMode) {\n      return new Exports_1.RecognizerConfig(speechConfig, Exports_1.RecognitionMode.Conversation, this.properties);\n    };\n\n    TranslationRecognizer.prototype.CreateServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n      var configImpl = audioConfig;\n      return new Exports_1.TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    };\n\n    TranslationRecognizer.prototype.implCloseExistingRecognizer = function () {\n      if (this.reco) {\n        this.reco.AudioSource.TurnOff();\n        this.reco.Dispose();\n        this.reco = undefined;\n      }\n    };\n\n    return TranslationRecognizer;\n  }(Exports_2.Recognizer);\n\n  exports.TranslationRecognizer = TranslationRecognizer;\n  /***/\n},\n/* 87 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Represents collection of parameters and their values.\n   * @class Translation\n   */\n\n\n  var Translations =\n  /** @class */\n  function () {\n    function Translations() {\n      // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n      this.map = new Exports_1.PropertyCollection();\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translation.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n\n\n    Translations.prototype.get = function (key, def) {\n      return this.map.getProperty(key, def);\n    };\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translation.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n\n\n    Translations.prototype.set = function (key, value) {\n      this.map.setProperty(key, value);\n    };\n\n    return Translations;\n  }();\n\n  exports.Translations = Translations;\n  /***/\n},\n/* 88 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Defines the possible reasons a recognition result might not be recognized.\n   * @class NoMatchReason\n   */\n\n  var NoMatchReason;\n\n  (function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence, and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise, and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n  })(NoMatchReason = exports.NoMatchReason || (exports.NoMatchReason = {}));\n  /***/\n\n},\n/* 89 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Contains detailed information for NoMatch recognition results.\n   * @class NoMatchDetails\n   */\n\n\n  var NoMatchDetails =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    function NoMatchDetails(reason) {\n      this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult} result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n\n\n    NoMatchDetails.fromResult = function (result) {\n      var simpleSpeech = Exports_1.SimpleSpeechPhrase.FromJSON(result.json);\n      var reason = Exports_2.NoMatchReason.NotRecognized;\n\n      switch (simpleSpeech.RecognitionStatus) {\n        case Exports_1.RecognitionStatus.BabbleTimeout:\n          reason = Exports_2.NoMatchReason.InitialBabbleTimeout;\n          break;\n\n        case Exports_1.RecognitionStatus.InitialSilenceTimeout:\n          reason = Exports_2.NoMatchReason.InitialSilenceTimeout;\n          break;\n\n        default:\n          reason = Exports_2.NoMatchReason.NotRecognized;\n          break;\n      }\n\n      return new NoMatchDetails(reason);\n    };\n\n    Object.defineProperty(NoMatchDetails.prototype, \"reason\", {\n      /**\n       * The reason the recognition was canceled.\n       * @member NoMatchDetails.prototype.reason\n       * @function\n       * @public\n       * @returns {NoMatchReason} Specifies the reason canceled.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return NoMatchDetails;\n  }();\n\n  exports.NoMatchDetails = NoMatchDetails;\n  /***/\n},\n/* 90 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Define payload of speech recognition canceled result events.\n   * @class TranslationRecognitionCanceledEventArgs\n   */\n\n  var TranslationRecognitionCanceledEventArgs =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    function TranslationRecognitionCanceledEventArgs(sessionid, cancellationReason, errorDetails, errorCode, result) {\n      this.privCancelReason = cancellationReason;\n      this.privErrorDetails = errorDetails;\n      this.privResult = result;\n      this.privSessionId = sessionid;\n      this.privErrorCode = errorCode;\n    }\n\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"result\", {\n      /**\n       * Specifies the recognition result.\n       * @member TranslationRecognitionCanceledEventArgs.prototype.result\n       * @function\n       * @public\n       * @returns {TranslationRecognitionResult} the recognition result.\n       */\n      get: function get() {\n        return this.privResult;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"sessionId\", {\n      /**\n       * Specifies the session identifier.\n       * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n       * @function\n       * @public\n       * @returns {string} the session identifier.\n       */\n      get: function get() {\n        return this.privSessionId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"reason\", {\n      /**\n       * The reason the recognition was canceled.\n       * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n       * @function\n       * @public\n       * @returns {CancellationReason} Specifies the reason canceled.\n       */\n      get: function get() {\n        return this.privCancelReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n      /**\n       * The error code of why the cancellation occurred.\n       * @return An error code that represents the error reason.\n       * Added in version 1.1.0.\n       */\n      get: function get() {\n        return this.privErrorCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n      /**\n       * In case of an unsuccessful recognition, provides a details of why the occurred error.\n       * This field is only filled-out if the reason canceled (@see getReason) is set to Error.\n       * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n       * @function\n       * @public\n       * @returns {string} A String that represents the error details.\n       */\n      get: function get() {\n        return this.privErrorDetails;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return TranslationRecognitionCanceledEventArgs;\n  }();\n\n  exports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs;\n  /***/\n},\n/* 91 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n  /**\n   * Define payload of intent recognition canceled result events.\n   * @class IntentRecognitionCanceledEventArgs\n   */\n\n\n  var IntentRecognitionCanceledEventArgs =\n  /** @class */\n  function (_super) {\n    __extends(IntentRecognitionCanceledEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n\n\n    function IntentRecognitionCanceledEventArgs(reason, errorDetails, errorCode, result, offset, sessionId) {\n      var _this = _super.call(this, result, offset, sessionId) || this;\n\n      _this.privReason = reason;\n      _this.privErrorDetails = errorDetails;\n      _this.privErrorCode = errorCode;\n      return _this;\n    }\n\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"reason\", {\n      /**\n       * The reason the recognition was canceled.\n       * @member IntentRecognitionCanceledEventArgs.prototype.reason\n       * @function\n       * @public\n       * @returns {CancellationReason} Specifies the reason canceled.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n      /**\n       * The error code of why the cancellation occurred.\n       * @return An error code that represents the error reason.\n       * Added in version 1.1.0.\n       */\n      get: function get() {\n        return this.privErrorCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n      /**\n       * In case of an unsuccessful recognition, provides a details of why the occurred error.\n       * This field is only filled-out if the reason canceled (@see getReason) is set to Error.\n       * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n       * @function\n       * @public\n       * @returns {string} A String that represents the error details.\n       */\n      get: function get() {\n        return this.privErrorDetails;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return IntentRecognitionCanceledEventArgs;\n  }(Exports_1.IntentRecognitionEventArgs);\n\n  exports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs;\n  /***/\n},\n/* 92 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(2);\n\n  var Exports_2 = __webpack_require__(0);\n  /**\n   * Contains detailed information about why a result was canceled.\n   * @class CancellationDetails\n   */\n\n\n  var CancellationDetails =\n  /** @class */\n  function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    function CancellationDetails(reason, errorDetails, errorCode) {\n      this.privReason = reason;\n      this.privErrorDetails = errorDetails;\n      this.privErrorCode = errorCode;\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n\n\n    CancellationDetails.fromResult = function (result) {\n      var reason = Exports_2.CancellationReason.Error;\n      var errorCode = Exports_2.CancellationErrorCode.NoError;\n\n      if (!!result.json) {\n        var simpleSpeech = Exports_1.SimpleSpeechPhrase.FromJSON(result.json);\n        reason = Exports_1.EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n      }\n\n      if (!!result.properties) {\n        errorCode = Exports_2.CancellationErrorCode[result.properties.getProperty(Exports_1.CancellationErrorCodePropertyName, Exports_2.CancellationErrorCode[Exports_2.CancellationErrorCode.NoError])];\n      }\n\n      return new CancellationDetails(reason, result.errorDetails, errorCode);\n    };\n\n    Object.defineProperty(CancellationDetails.prototype, \"reason\", {\n      /**\n       * The reason the recognition was canceled.\n       * @member CancellationDetails.prototype.reason\n       * @function\n       * @public\n       * @returns {CancellationReason} Specifies the reason canceled.\n       */\n      get: function get() {\n        return this.privReason;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(CancellationDetails.prototype, \"errorDetails\", {\n      /**\n       * In case of an unsuccessful recognition, provides a details of why the occurred error.\n       * This field is only filled-out if the reason canceled (@see getReason) is set to Error.\n       * @member CancellationDetails.prototype.errorDetails\n       * @function\n       * @public\n       * @returns {string} A String that represents the error details.\n       */\n      get: function get() {\n        return this.privErrorDetails;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(CancellationDetails.prototype, \"ErrorCode\", {\n      /**\n       * The error code of why the cancellation occurred.\n       * @return An error code that represents the error reason.\n       * Added in version 1.1.0.\n       */\n      get: function get() {\n        return this.privErrorCode;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return CancellationDetails;\n  }();\n\n  exports.CancellationDetails = CancellationDetails;\n  /***/\n},\n/* 93 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; //\n  // Copyright (c) Microsoft. All rights reserved.\n  // Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n  //\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   *  Defines error code in case that CancellationReason is Error.\n   *  Added in version 1.1.0.\n   */\n\n  var CancellationErrorCode;\n\n  (function (CancellationErrorCode) {\n    /**\n     * Indicates that an error occurred during speech recognition. Use errorDetails() contains detailed error response.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error. The errorDetails property contains detailed error response.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed concurrent transcriptions for the subscription.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates an connection error. The errorDetails property contains detailed error response.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error. The errorDetails property contains detailed error response.\n     */\n\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n  })(CancellationErrorCode = exports.CancellationErrorCode || (exports.CancellationErrorCode = {}));\n  /***/\n\n},\n/* 94 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Exports_1 = __webpack_require__(0);\n\n  var Exports_2 = __webpack_require__(1);\n\n  var Exports_3 = __webpack_require__(6);\n\n  var FileAudioSource =\n  /** @class */\n  function () {\n    function FileAudioSource(file, audioSourceId) {\n      var _this = this;\n\n      this.streams = {};\n\n      this.TurnOn = function () {\n        if (typeof FileReader === \"undefined\") {\n          var errorMsg = \"Browser does not support FileReader.\";\n\n          _this.OnEvent(new Exports_2.AudioSourceErrorEvent(errorMsg, \"\")); // initialization error - no streamid at this point\n\n\n          return Exports_2.PromiseHelper.FromError(errorMsg);\n        } else if (_this.file.name.lastIndexOf(\".wav\") !== _this.file.name.length - 4) {\n          var errorMsg = _this.file.name + \" is not supported. Only WAVE files are allowed at the moment.\";\n\n          _this.OnEvent(new Exports_2.AudioSourceErrorEvent(errorMsg, \"\"));\n\n          return Exports_2.PromiseHelper.FromError(errorMsg);\n        } else if (_this.file.size > FileAudioSource.MAX_SIZE) {\n          var errorMsg = _this.file.name + \" exceeds the maximum allowed file size (\" + FileAudioSource.MAX_SIZE + \").\";\n\n          _this.OnEvent(new Exports_2.AudioSourceErrorEvent(errorMsg, \"\"));\n\n          return Exports_2.PromiseHelper.FromError(errorMsg);\n        }\n\n        _this.OnEvent(new Exports_2.AudioSourceInitializingEvent(_this.id)); // no stream id\n\n\n        _this.OnEvent(new Exports_2.AudioSourceReadyEvent(_this.id));\n\n        return Exports_2.PromiseHelper.FromResult(true);\n      };\n\n      this.Id = function () {\n        return _this.id;\n      };\n\n      this.Attach = function (audioNodeId) {\n        _this.OnEvent(new Exports_2.AudioStreamNodeAttachingEvent(_this.id, audioNodeId));\n\n        return _this.Upload(audioNodeId).OnSuccessContinueWith(function (streamReader) {\n          _this.OnEvent(new Exports_2.AudioStreamNodeAttachedEvent(_this.id, audioNodeId));\n\n          return {\n            Detach: function Detach() {\n              streamReader.Close();\n              delete _this.streams[audioNodeId];\n\n              _this.OnEvent(new Exports_2.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n\n              _this.TurnOff();\n            },\n            Id: function Id() {\n              return audioNodeId;\n            },\n            Read: function Read() {\n              return streamReader.Read();\n            }\n          };\n        });\n      };\n\n      this.Detach = function (audioNodeId) {\n        if (audioNodeId && _this.streams[audioNodeId]) {\n          _this.streams[audioNodeId].Close();\n\n          delete _this.streams[audioNodeId];\n\n          _this.OnEvent(new Exports_2.AudioStreamNodeDetachedEvent(_this.id, audioNodeId));\n        }\n      };\n\n      this.TurnOff = function () {\n        for (var streamId in _this.streams) {\n          if (streamId) {\n            var stream = _this.streams[streamId];\n\n            if (stream && !stream.IsClosed) {\n              stream.Close();\n            }\n          }\n        }\n\n        _this.OnEvent(new Exports_2.AudioSourceOffEvent(_this.id)); // no stream now\n\n\n        return Exports_2.PromiseHelper.FromResult(true);\n      };\n\n      this.Upload = function (audioNodeId) {\n        return _this.TurnOn().OnSuccessContinueWith(function (_) {\n          var stream = new Exports_2.Stream(audioNodeId);\n          _this.streams[audioNodeId] = stream;\n          var reader = new FileReader();\n          var startOffset = 0;\n          var endOffset = FileAudioSource.CHUNK_SIZE;\n          var lastWriteTimestamp = 0;\n\n          var processNextChunk = function processNextChunk(event) {\n            if (stream.IsClosed) {\n              return; // output stream was closed (somebody called TurnOff). We're done here.\n            }\n\n            if (lastWriteTimestamp !== 0) {\n              var delay = Date.now() - lastWriteTimestamp;\n\n              if (delay < FileAudioSource.UPLOAD_INTERVAL) {\n                // It's been less than the \"upload interval\" since we've uploaded the\n                // last chunk. Schedule the next upload to make sure that we're sending\n                // upstream roughly one chunk per upload interval.\n                new Exports_3.Timer(FileAudioSource.UPLOAD_INTERVAL - delay, processNextChunk).start();\n                return;\n              }\n            }\n\n            stream.Write(reader.result);\n            lastWriteTimestamp = Date.now();\n\n            if (endOffset < _this.file.size) {\n              startOffset = endOffset;\n              endOffset = Math.min(endOffset + FileAudioSource.CHUNK_SIZE, _this.file.size);\n\n              var chunk_1 = _this.file.slice(startOffset, endOffset);\n\n              reader.readAsArrayBuffer(chunk_1);\n            } else {\n              // we've written the entire file to the output stream, can close it now.\n              stream.Close();\n            }\n          };\n\n          reader.onload = processNextChunk;\n\n          reader.onerror = function (event) {\n            var errorMsg = \"Error occurred while processing '\" + _this.file.name + \"'. \" + event.error;\n\n            _this.OnEvent(new Exports_2.AudioStreamNodeErrorEvent(_this.id, audioNodeId, event.error));\n\n            throw new Error(errorMsg);\n          };\n\n          var chunk = _this.file.slice(startOffset, endOffset);\n\n          reader.readAsArrayBuffer(chunk);\n          return stream.GetReader();\n        });\n      };\n\n      this.OnEvent = function (event) {\n        _this.events.OnEvent(event);\n\n        Exports_2.Events.Instance.OnEvent(event);\n      };\n\n      this.id = audioSourceId ? audioSourceId : Exports_2.CreateNoDashGuid();\n      this.events = new Exports_2.EventSource();\n      this.file = file;\n    }\n\n    Object.defineProperty(FileAudioSource.prototype, \"Format\", {\n      get: function get() {\n        return FileAudioSource.FILEFORMAT;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(FileAudioSource.prototype, \"Events\", {\n      get: function get() {\n        return this.events;\n      },\n      enumerable: true,\n      configurable: true\n    }); // Recommended sample rate (bytes/second).\n\n    FileAudioSource.SAMPLE_RATE = 16000 * 2; // 16 kHz * 16 bits\n    // We should stream audio at no faster than 2x real-time (i.e., send five chunks\n    // per second, with the chunk size == sample rate in bytes per second * 2 / 5).\n\n    FileAudioSource.CHUNK_SIZE = FileAudioSource.SAMPLE_RATE * 2 / 5;\n    FileAudioSource.UPLOAD_INTERVAL = 200; // milliseconds\n    // 10 seconds of audio in bytes =\n    // sample rate (bytes/second) * 600 (seconds) + 44 (size of the wave header).\n\n    FileAudioSource.MAX_SIZE = FileAudioSource.SAMPLE_RATE * 600 + 44;\n    FileAudioSource.FILEFORMAT = Exports_1.AudioStreamFormat.getWaveFormatPCM(16000, 16, 1);\n    return FileAudioSource;\n  }();\n\n  exports.FileAudioSource = FileAudioSource;\n  /***/\n},\n/* 95 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var OpusRecorder =\n  /** @class */\n  function () {\n    function OpusRecorder(options) {\n      var _this = this;\n\n      this.Record = function (context, mediaStream, outputStream) {\n        var mediaRecorder = new MediaRecorder(mediaStream, _this.mediaRecorderOptions);\n        var timeslice = 100; // this is in ms - 100 ensures that the chunk doesn't exceed the max size of chunk allowed in WS connection\n\n        mediaRecorder.ondataavailable = function (dataAvailableEvent) {\n          if (outputStream) {\n            var reader_1 = new FileReader();\n            reader_1.readAsArrayBuffer(dataAvailableEvent.data);\n\n            reader_1.onloadend = function (event) {\n              outputStream.Write(reader_1.result);\n            };\n          }\n        };\n\n        _this.mediaResources = {\n          recorder: mediaRecorder,\n          stream: mediaStream\n        };\n        mediaRecorder.start(timeslice);\n      };\n\n      this.ReleaseMediaResources = function (context) {\n        if (_this.mediaResources.recorder.state !== \"inactive\") {\n          _this.mediaResources.recorder.stop();\n        }\n\n        _this.mediaResources.stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      };\n\n      this.mediaRecorderOptions = options;\n    }\n\n    return OpusRecorder;\n  }();\n\n  exports.OpusRecorder = OpusRecorder;\n  /* Declaring this inline to avoid compiler warnings\n  declare class MediaRecorder {\n      constructor(mediaStream: MediaStream, options: any);\n  \n      public state: string;\n  \n      public ondataavailable(dataAvailableEvent: any): void;\n      public stop(): void;\n  }*/\n\n  /***/\n},\n/* 96 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var PcmRecorder =\n  /** @class */\n  function () {\n    function PcmRecorder() {\n      var _this = this;\n\n      this.Record = function (context, mediaStream, outputStream) {\n        var desiredSampleRate = 16000; // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\n\n        var scriptNode = function () {\n          var bufferSize = 0;\n\n          try {\n            return context.createScriptProcessor(bufferSize, 1, 1);\n          } catch (error) {\n            // Webkit (<= version 31) requires a valid bufferSize.\n            bufferSize = 2048;\n            var audioSampleRate = context.sampleRate;\n\n            while (bufferSize < 16384 && audioSampleRate >= 2 * desiredSampleRate) {\n              bufferSize <<= 1;\n              audioSampleRate >>= 1;\n            }\n\n            return context.createScriptProcessor(bufferSize, 1, 1);\n          }\n        }();\n\n        var waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n        var needHeader = true;\n        var that = _this;\n\n        scriptNode.onaudioprocess = function (event) {\n          var inputFrame = event.inputBuffer.getChannelData(0);\n\n          if (outputStream && !outputStream.IsClosed) {\n            var waveFrame = waveStreamEncoder.Encode(needHeader, inputFrame);\n\n            if (!!waveFrame) {\n              outputStream.Write(waveFrame);\n              needHeader = false;\n            }\n          }\n        }; // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createMediaStreamSource\n\n\n        var micInput = context.createMediaStreamSource(mediaStream);\n        _this.mediaResources = {\n          scriptProcessorNode: scriptNode,\n          source: micInput,\n          stream: mediaStream\n        };\n        micInput.connect(scriptNode);\n        scriptNode.connect(context.destination);\n      };\n\n      this.ReleaseMediaResources = function (context) {\n        if (_this.mediaResources) {\n          if (_this.mediaResources.scriptProcessorNode) {\n            _this.mediaResources.scriptProcessorNode.disconnect(context.destination);\n\n            _this.mediaResources.scriptProcessorNode = null;\n          }\n\n          if (_this.mediaResources.source) {\n            _this.mediaResources.source.disconnect();\n\n            _this.mediaResources.stream.getTracks().forEach(function (track) {\n              return track.stop();\n            });\n\n            _this.mediaResources.source = null;\n          }\n        }\n      };\n    }\n\n    return PcmRecorder;\n  }();\n\n  exports.PcmRecorder = PcmRecorder;\n  /***/\n},\n/* 97 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var SessionStorage =\n  /** @class */\n  function () {\n    function SessionStorage() {\n      this.Get = function (key) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        return sessionStorage.getItem(key);\n      };\n\n      this.GetOrAdd = function (key, valueToAdd) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        var value = sessionStorage.getItem(key);\n\n        if (value === null || value === undefined) {\n          sessionStorage.setItem(key, valueToAdd);\n        }\n\n        return sessionStorage.getItem(key);\n      };\n\n      this.Set = function (key, value) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        sessionStorage.setItem(key, value);\n      };\n\n      this.Remove = function (key) {\n        if (!key) {\n          throw new Exports_1.ArgumentNullError(\"key\");\n        }\n\n        sessionStorage.removeItem(key);\n      };\n    }\n\n    return SessionStorage;\n  }();\n\n  exports.SessionStorage = SessionStorage;\n  /***/\n},\n/* 98 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var Timer =\n  /** @class */\n  function () {\n    function Timer(delayInMillisec, successCallback) {\n      var _this = this;\n\n      this.start = function () {\n        var params = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          params[_i] = arguments[_i];\n        }\n\n        if (_this.timerId) {\n          _this.stop();\n        }\n\n        _this.timerId = setTimeout(_this.successCallback, _this.delayInMillisec, params);\n      };\n\n      this.stop = function () {\n        clearTimeout(_this.timerId);\n      };\n\n      this.delayInMillisec = delayInMillisec;\n      this.successCallback = successCallback;\n    }\n\n    return Timer;\n  }();\n\n  exports.Timer = Timer;\n  /***/\n},\n/* 99 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); //\n  // Copyright (c) Microsoft. All rights reserved.\n  // See https://aka.ms/csspeech/license201809 for the full license information.\n  //\n\n  var Exports_1 = __webpack_require__(1);\n\n  var WebsocketMessageAdapter_1 = __webpack_require__(20);\n\n  var WebsocketConnection =\n  /** @class */\n  function () {\n    function WebsocketConnection(uri, queryParameters, headers, messageFormatter, connectionId) {\n      var _this = this;\n\n      this.isDisposed = false;\n\n      this.Dispose = function () {\n        _this.isDisposed = true;\n\n        if (_this.connectionMessageAdapter) {\n          _this.connectionMessageAdapter.Close();\n        }\n      };\n\n      this.IsDisposed = function () {\n        return _this.isDisposed;\n      };\n\n      this.State = function () {\n        return _this.connectionMessageAdapter.State;\n      };\n\n      this.Open = function () {\n        return _this.connectionMessageAdapter.Open();\n      };\n\n      this.Send = function (message) {\n        return _this.connectionMessageAdapter.Send(message);\n      };\n\n      this.Read = function () {\n        return _this.connectionMessageAdapter.Read();\n      };\n\n      if (!uri) {\n        throw new Exports_1.ArgumentNullError(\"uri\");\n      }\n\n      if (!messageFormatter) {\n        throw new Exports_1.ArgumentNullError(\"messageFormatter\");\n      }\n\n      this.messageFormatter = messageFormatter;\n      var queryParams = \"\";\n      var i = 0;\n\n      if (queryParameters) {\n        for (var paramName in queryParameters) {\n          if (paramName) {\n            queryParams += i === 0 && uri.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n            var val = encodeURIComponent(queryParameters[paramName]);\n            queryParams += paramName + \"=\" + val;\n            i++;\n          }\n        }\n      }\n\n      if (headers) {\n        for (var headerName in headers) {\n          if (headerName) {\n            queryParams += i === 0 ? \"?\" : \"&\";\n            var val = encodeURIComponent(headers[headerName]);\n            queryParams += headerName + \"=\" + val;\n            i++;\n          }\n        }\n      }\n\n      this.uri = uri + queryParams;\n      this.id = connectionId ? connectionId : Exports_1.CreateNoDashGuid();\n      this.connectionMessageAdapter = new WebsocketMessageAdapter_1.WebsocketMessageAdapter(this.uri, this.Id, this.messageFormatter);\n    }\n\n    Object.defineProperty(WebsocketConnection.prototype, \"Id\", {\n      get: function get() {\n        return this.id;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(WebsocketConnection.prototype, \"Events\", {\n      get: function get() {\n        return this.connectionMessageAdapter.Events;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return WebsocketConnection;\n  }();\n\n  exports.WebsocketConnection = WebsocketConnection;\n  /***/\n}]);","map":null,"metadata":{},"sourceType":"script"}