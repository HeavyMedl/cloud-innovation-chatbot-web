{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactScrollToBottom = require(\"react-scroll-to-bottom\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _glamor = require(\"glamor\");\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _concatMiddleware = _interopRequireDefault(require(\"./Middleware/concatMiddleware\"));\n\nvar _Context = _interopRequireDefault(require(\"./Context\"));\n\nvar _createCoreMiddleware = _interopRequireDefault(require(\"./Middleware/CardAction/createCoreMiddleware\"));\n\nvar _createStyleSet = _interopRequireDefault(require(\"./Styles/createStyleSet\"));\n\nvar _adaptiveCardHostConfig = _interopRequireDefault(require(\"./Styles/adaptiveCardHostConfig\"));\n\nvar _Dictation = _interopRequireDefault(require(\"./Dictation\"));\n\nvar _mapMap = _interopRequireDefault(require(\"./Utils/mapMap\"));\n\nvar _observableToPromise = _interopRequireDefault(require(\"./Utils/observableToPromise\"));\n\nvar _shallowEquals = _interopRequireDefault(require(\"./Utils/shallowEquals\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Flywheel object\n\n\nvar EMPTY_ARRAY = [];\nvar DISPATCHERS = {\n  markActivity: _botframeworkWebchatCore.markActivity,\n  postActivity: _botframeworkWebchatCore.postActivity,\n  sendEvent: _botframeworkWebchatCore.sendEvent,\n  sendFiles: _botframeworkWebchatCore.sendFiles,\n  sendMessage: _botframeworkWebchatCore.sendMessage,\n  sendMessageBack: _botframeworkWebchatCore.sendMessageBack,\n  sendPostBack: _botframeworkWebchatCore.sendPostBack,\n  setDictateInterims: _botframeworkWebchatCore.setDictateInterims,\n  setDictateState: _botframeworkWebchatCore.setDictateState,\n  setSendBox: _botframeworkWebchatCore.setSendBox,\n  setSendTimeout: _botframeworkWebchatCore.setSendTimeout,\n  startDictate: _botframeworkWebchatCore.startDictate,\n  startSpeakingActivity: _botframeworkWebchatCore.startSpeakingActivity,\n  stopDictate: _botframeworkWebchatCore.stopDictate,\n  stopSpeakingActivity: _botframeworkWebchatCore.stopSpeakingActivity,\n  submitSendBox: _botframeworkWebchatCore.submitSendBox\n};\n\nfunction styleSetToClassNames(styleSet) {\n  return (0, _mapMap.default)(styleSet, function (style, key) {\n    return key === 'options' ? style : (0, _glamor.css)(style);\n  });\n}\n\nfunction createCardActionLogic(_ref) {\n  var cardActionMiddleware = _ref.cardActionMiddleware,\n      directLine = _ref.directLine,\n      dispatch = _ref.dispatch;\n  var runMiddleware = (0, _concatMiddleware.default)(cardActionMiddleware, (0, _createCoreMiddleware.default)())({\n    dispatch: dispatch\n  });\n  return {\n    onCardAction: function onCardAction(cardAction) {\n      return runMiddleware(function (_ref2) {\n        var type = _ref2.cardAction.type;\n        throw new Error(\"Web Chat: received unknown card action \\\"\".concat(type, \"\\\"\"));\n      })({\n        cardAction: cardAction,\n        getSignInUrl: cardAction.type === 'signin' ? function () {\n          var value = cardAction.value;\n\n          if (directLine.getSessionId) {\n            // TODO: [P3] We should change this one to async/await.\n            //       This is the first place in this project to use async.\n            //       Thus, we need to add @babel/plugin-transform-runtime and @babel/runtime.\n            return (0, _observableToPromise.default)(directLine.getSessionId()).then(function (sessionId) {\n              return \"\".concat(value).concat(encodeURIComponent(\"&code_challenge=\".concat(sessionId)));\n            });\n          } else {\n            return value;\n          }\n        } : null\n      });\n    }\n  };\n}\n\nfunction createFocusSendBoxLogic(_ref3) {\n  var sendBoxRef = _ref3.sendBoxRef;\n  return {\n    focusSendBox: function focusSendBox() {\n      var _ref4 = sendBoxRef || {},\n          current = _ref4.current;\n\n      current && current.focus();\n    }\n  };\n}\n\nfunction createStyleSetLogic(_ref5) {\n  var styleOptions = _ref5.styleOptions,\n      styleSet = _ref5.styleSet;\n  return {\n    styleSet: styleSetToClassNames(styleSet || (0, _createStyleSet.default)(styleOptions))\n  };\n} // TODO: [P3] Take this deprecation code out when releasing on or after 2019 December 11\n\n\nfunction patchPropsForAvatarInitials(_ref6) {\n  var botAvatarInitials = _ref6.botAvatarInitials,\n      userAvatarInitials = _ref6.userAvatarInitials,\n      props = _objectWithoutProperties(_ref6, [\"botAvatarInitials\", \"userAvatarInitials\"]); // This code will take out \"botAvatarInitials\" and \"userAvatarInitials\" from props\n\n\n  var styleOptions = props.styleOptions;\n\n  if (botAvatarInitials) {\n    styleOptions = _objectSpread({}, styleOptions, {\n      botAvatarInitials: botAvatarInitials\n    });\n    console.warn('Web Chat: \"botAvatarInitials\" is deprecated. Please use \"styleOptions.botAvatarInitials\" instead. \"botAvatarInitials\" will be removed on or after December 11 2019 .');\n  }\n\n  if (userAvatarInitials) {\n    styleOptions = _objectSpread({}, styleOptions, {\n      userAvatarInitials: userAvatarInitials\n    });\n    console.warn('Web Chat: \"botAvatarInitials\" is deprecated. Please use \"styleOptions.botAvatarInitials\" instead. \"botAvatarInitials\" will be removed on or after December 11 2019 .');\n  }\n\n  return _objectSpread({}, props, {\n    styleOptions: styleOptions\n  });\n}\n\nfunction createLogic(props) {\n  // This is a heavy function, and it is expected to be only called when there is a need to recreate business logic, e.g.\n  // - User ID changed, causing all send* functions to be updated\n  // - send\n  // TODO: [P4] We should break this into smaller pieces using memoization function, so we don't recreate styleSet if userID is changed\n  // TODO: [P3] We should think about if we allow the user to change onSendBoxValueChanged/sendBoxValue, e.g.\n  // 1. Turns text into UPPERCASE\n  // 2. Filter out profanity\n  // TODO: [P4] Revisit all members of context\n  props = patchPropsForAvatarInitials(props);\n  return _objectSpread({}, props, createCardActionLogic(props), createFocusSendBoxLogic(props), createStyleSetLogic(props));\n}\n\nvar Composer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Composer, _React$Component);\n\n  function Composer(props) {\n    var _this;\n\n    _classCallCheck(this, Composer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Composer).call(this, props));\n    _this.createContextFromProps = (0, _memoizeOne.default)(createLogic, _shallowEquals.default);\n    _this.createWebSpeechPonyfill = (0, _memoizeOne.default)(function (webSpeechPonyfillFactory, referenceGrammarID) {\n      return webSpeechPonyfillFactory && webSpeechPonyfillFactory({\n        referenceGrammarID: referenceGrammarID\n      });\n    });\n    _this.mergeContext = (0, _memoizeOne.default)(function () {\n      for (var _len = arguments.length, contexts = new Array(_len), _key = 0; _key < _len; _key++) {\n        contexts[_key] = arguments[_key];\n      }\n\n      return Object.assign.apply(Object, [{}].concat(contexts));\n    }, _shallowEquals.default);\n    _this.state = {\n      hoistedDispatchers: (0, _mapMap.default)(DISPATCHERS, function (dispatcher) {\n        return function () {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.dispatch(dispatcher.apply(_assertThisInitialized(_this), args));\n        };\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Composer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var props = this.props;\n      var directLine = props.directLine,\n          userID = props.userID,\n          username = props.username;\n      this.setLanguageFromProps(props);\n      this.setSendTimeoutFromProps(props);\n      this.setSendTypingIndicatorFromProps(props);\n      props.dispatch((0, _botframeworkWebchatCore.connect)({\n        directLine: directLine,\n        userID: userID,\n        username: username\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var props = this.props;\n      var directLine = props.directLine,\n          locale = props.locale,\n          sendTimeout = props.sendTimeout,\n          sendTyping = props.sendTyping,\n          sendTypingIndicator = props.sendTypingIndicator,\n          userID = props.userID,\n          username = props.username;\n\n      if (prevProps.locale !== locale) {\n        this.setLanguageFromProps(props);\n      }\n\n      if (prevProps.sendTimeout !== sendTimeout) {\n        this.setSendTimeoutFromProps(props);\n      }\n\n      if (!prevProps.sendTypingIndicator !== !sendTypingIndicator // TODO: [P3] Take this deprecation code out when releasing on or after January 13 2020\n      || !prevProps.sendTyping !== !sendTyping) {\n        this.setSendTypingIndicatorFromProps(props);\n      }\n\n      if (prevProps.directLine !== directLine || prevProps.userID !== userID || prevProps.username !== username) {\n        // TODO: [P3] disconnect() is an async call (pending -> fulfilled), we need to wait, or change it to reconnect()\n        props.dispatch((0, _botframeworkWebchatCore.disconnect)());\n        props.dispatch((0, _botframeworkWebchatCore.connect)({\n          directLine: directLine,\n          userID: userID,\n          username: username\n        }));\n      }\n    }\n  }, {\n    key: \"setLanguageFromProps\",\n    value: function setLanguageFromProps(props) {\n      props.dispatch((0, _botframeworkWebchatCore.setLanguage)(props.locale || window.navigator.language || 'en-US'));\n    }\n  }, {\n    key: \"setSendTimeoutFromProps\",\n    value: function setSendTimeoutFromProps(props) {\n      props.dispatch((0, _botframeworkWebchatCore.setSendTimeout)(props.sendTimeout || 20000));\n    }\n  }, {\n    key: \"setSendTypingIndicatorFromProps\",\n    value: function setSendTypingIndicatorFromProps(props) {\n      if (typeof props.sendTyping === 'undefined') {\n        props.dispatch((0, _botframeworkWebchatCore.setSendTypingIndicator)(!!props.sendTypingIndicator));\n      } else {\n        // TODO: [P3] Take this deprecation code out when releasing on or after January 13 2020\n        console.warn('Web Chat: \"sendTyping\" has been renamed to \"sendTypingIndicator\". Please use \"sendTypingIndicator\" instead. This deprecation migration will be removed on or after January 13 2020.');\n        props.dispatch((0, _botframeworkWebchatCore.setSendTypingIndicator)(!!props.sendTyping));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activityRenderer = _this$props.activityRenderer,\n          adaptiveCardHostConfig = _this$props.adaptiveCardHostConfig,\n          attachmentRenderer = _this$props.attachmentRenderer,\n          children = _this$props.children,\n          disabled = _this$props.disabled,\n          grammars = _this$props.grammars,\n          groupTimestamp = _this$props.groupTimestamp,\n          referenceGrammarID = _this$props.referenceGrammarID,\n          renderMarkdown = _this$props.renderMarkdown,\n          scrollToEnd = _this$props.scrollToEnd,\n          store = _this$props.store,\n          userID = _this$props.userID,\n          username = _this$props.username,\n          webSpeechPonyfillFactory = _this$props.webSpeechPonyfillFactory,\n          propsForLogic = _objectWithoutProperties(_this$props, [\"activityRenderer\", \"adaptiveCardHostConfig\", \"attachmentRenderer\", \"children\", \"disabled\", \"grammars\", \"groupTimestamp\", \"referenceGrammarID\", \"renderMarkdown\", \"scrollToEnd\", \"store\", \"userID\", \"username\", \"webSpeechPonyfillFactory\"]),\n          state = this.state;\n\n      var contextFromProps = this.createContextFromProps(propsForLogic);\n      var context = this.mergeContext(contextFromProps, state.hoistedDispatchers, // TODO: [P4] Should we normalize empties here? Or should we let it thru?\n      //       If we let it thru, the code below become simplified and the user can plug in whatever they want for context, via Composer.props\n      {\n        activityRenderer: activityRenderer,\n        adaptiveCardHostConfig: adaptiveCardHostConfig || (0, _adaptiveCardHostConfig.default)(this.props.styleOptions),\n        attachmentRenderer: attachmentRenderer,\n        groupTimestamp: groupTimestamp,\n        disabled: disabled,\n        grammars: grammars || EMPTY_ARRAY,\n        renderMarkdown: renderMarkdown,\n        scrollToEnd: scrollToEnd,\n        store: store,\n        webSpeechPonyfill: this.createWebSpeechPonyfill(webSpeechPonyfillFactory, referenceGrammarID)\n      }); // TODO: [P3] Check how many times we do re-render context\n\n      return _react.default.createElement(_Context.default.Provider, {\n        value: context\n      }, typeof children === 'function' ? children(context) : children, _react.default.createElement(_Dictation.default, null));\n    }\n  }]);\n\n  return Composer;\n}(_react.default.Component);\n\nvar ConnectedComposer = (0, _reactRedux.connect)(function (_ref7) {\n  var referenceGrammarID = _ref7.referenceGrammarID;\n  return {\n    referenceGrammarID: referenceGrammarID\n  };\n})(function (props) {\n  return _react.default.createElement(_reactScrollToBottom.Composer, null, _react.default.createElement(_reactScrollToBottom.FunctionContext.Consumer, null, function (_ref8) {\n    var scrollToEnd = _ref8.scrollToEnd;\n    return _react.default.createElement(Composer, _extends({\n      scrollToEnd: scrollToEnd\n    }, props));\n  }));\n}); // We will create a Redux store if it was not passed in\n\nvar ConnectedComposerWithStore =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ConnectedComposerWithStore, _React$Component2);\n\n  function ConnectedComposerWithStore(props) {\n    var _this2;\n\n    _classCallCheck(this, ConnectedComposerWithStore);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedComposerWithStore).call(this, props));\n    _this2.createMemoizedStore = (0, _memoizeOne.default)(function () {\n      return (0, _botframeworkWebchatCore.createStore)();\n    });\n    return _this2;\n  }\n\n  _createClass(ConnectedComposerWithStore, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return _react.default.createElement(ConnectedComposer, _extends({}, props, {\n        store: props.store || this.createMemoizedStore()\n      }));\n    }\n  }]);\n\n  return ConnectedComposerWithStore;\n}(_react.default.Component);\n\nvar _default = ConnectedComposerWithStore; // TODO: [P3] We should consider moving some props to Redux store\n//       Although we use `connectToWebChat` to hide the details of accessor of Redux store,\n//       we should clean up the responsibility between Context and Redux store\n//       We should decide which data is needed for React but not in other environment such as CLI/VSCode\n\nexports.default = _default;\nConnectedComposerWithStore.propTypes = {\n  activityRenderer: _propTypes.default.func,\n  adaptiveCardHostConfig: _propTypes.default.any,\n  attachmentRenderer: _propTypes.default.func,\n  cardActionMiddleware: _propTypes.default.func,\n  groupTimestamp: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number]),\n  disabled: _propTypes.default.bool,\n  grammars: _propTypes.default.arrayOf(_propTypes.default.string),\n  renderMarkdown: _propTypes.default.func,\n  sendTimeout: _propTypes.default.number,\n  sendTypingIndicator: _propTypes.default.bool,\n  store: _propTypes.default.any,\n  userID: _propTypes.default.string,\n  username: _propTypes.default.string,\n  webSpeechPonyfillFactory: _propTypes.default.func\n};","map":null,"metadata":{},"sourceType":"script"}