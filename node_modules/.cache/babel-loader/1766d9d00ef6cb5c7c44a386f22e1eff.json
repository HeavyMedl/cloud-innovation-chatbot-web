{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectDictationInterims = exports.default = void 0;\n\nvar _glamor = require(\"glamor\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _Localize = _interopRequireDefault(require(\"../Localization/Localize\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,\n    DICTATING = _Constants$DictateSta.DICTATING,\n    STARTING = _Constants$DictateSta.STARTING,\n    STOPPING = _Constants$DictateSta.STOPPING;\nvar ROOT_CSS = (0, _glamor.css)({\n  alignItems: 'center',\n  display: 'flex'\n});\n\nvar connectDictationInterims = function connectDictationInterims() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref) {\n    var dictateInterims = _ref.dictateInterims,\n        dictateState = _ref.dictateState,\n        language = _ref.language;\n    return {\n      dictateInterims: dictateInterims,\n      dictateState: dictateState,\n      language: language\n    };\n  }].concat(selectors));\n}; // TODO: [P3] After speech started, when clicking on the transcript, it should\n//       stop the dictation and allow the user to type-correct the transcript\n\n\nexports.connectDictationInterims = connectDictationInterims;\n\nvar _default = connectDictationInterims(function (_ref2) {\n  var styleSet = _ref2.styleSet;\n  return {\n    styleSet: styleSet\n  };\n})(function (_ref3) {\n  var className = _ref3.className,\n      dictateInterims = _ref3.dictateInterims,\n      dictateState = _ref3.dictateState,\n      styleSet = _ref3.styleSet;\n  return dictateState === STARTING || dictateState === STOPPING ? _react.default.createElement(\"p\", {\n    className: (0, _classnames.default)(styleSet.dictationInterims + '', ROOT_CSS + '', (className || '') + '', 'status')\n  }, dictateState === STARTING && _react.default.createElement(_Localize.default, {\n    text: \"Starting\\u2026\"\n  })) : dictateState === DICTATING && (dictateInterims.length ? _react.default.createElement(\"p\", {\n    className: (0, _classnames.default)(styleSet.dictationInterims + '', ROOT_CSS + '', (className || '') + '', 'dictating')\n  }, dictateInterims.map(function (interim, index) {\n    return _react.default.createElement(\"span\", {\n      key: index\n    }, interim, \"\\xA0\");\n  })) : _react.default.createElement(\"p\", {\n    className: (0, _classnames.default)(styleSet.dictationInterims + '', ROOT_CSS + '', (className || '') + '', 'status')\n  }, _react.default.createElement(_Localize.default, {\n    text: \"Listening\\u2026\"\n  })));\n});\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}