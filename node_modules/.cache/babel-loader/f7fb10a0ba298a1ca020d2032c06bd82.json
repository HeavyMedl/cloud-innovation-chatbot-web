{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Context = _interopRequireDefault(require(\"./Context\"));\n\nvar _createContext = _interopRequireDefault(require(\"./createContext\"));\n\nvar Composer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(Composer, _React$Component);\n\n  function Composer(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Composer);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Composer).call(this, props));\n    _this.handleVoicesChanged = _this.handleVoicesChanged.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    var voices = [];\n\n    if (props.speechSynthesis) {\n      props.speechSynthesis.addEventListener && props.speechSynthesis.addEventListener('voiceschanged', _this.handleVoicesChanged);\n      voices = props.speechSynthesis.getVoices();\n    }\n\n    _this.mergeContext = (0, _memoizeOne[\"default\"])(function (_ref, voices) {\n      var cancel = _ref.cancel,\n          speak = _ref.speak;\n      return {\n        cancel: cancel,\n        speak: speak,\n        voices: voices\n      };\n    });\n    _this.state = {\n      context: (0, _createContext[\"default\"])({\n        speechSynthesis: props.speechSynthesis,\n        SpeechSynthesisUtterance: props.speechSynthesisUtterance\n      }),\n      voices: voices\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Composer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var props = this.props;\n      var changed = ['speechSynthesis', 'speechSynthesisUtterance'].some(function (name) {\n        return nextProps[name] !== props[name];\n      });\n\n      if (changed) {\n        var speechSynthesis = props.speechSynthesis;\n        var nextSpeechSynthesis = nextProps.speechSynthesis;\n        var nextVoices = [];\n\n        if (speechSynthesis && speechSynthesis.removeEventListener) {\n          speechSynthesis.removeEventListener('voiceschanged', this.handleVoicesChanged);\n        }\n\n        this.state.context.setPonyfill({\n          speechSynthesis: nextProps.speechSynthesis,\n          SpeechSynthesisUtterance: nextProps.speechSynthesisUtterance\n        });\n\n        if (nextSpeechSynthesis) {\n          nextSpeechSynthesis.addEventListener && nextSpeechSynthesis.addEventListener('voiceschanged', this.handleVoicesChanged);\n          nextVoices = nextSpeechSynthesis.getVoices() || [];\n        }\n\n        this.setState(function () {\n          return {\n            voices: nextVoices\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var speechSynthesis = this.props.speechSynthesis;\n      speechSynthesis && speechSynthesis.removeEventListener && speechSynthesis.removeEventListener('voiceschanged', this.handleVoicesChanged);\n    }\n  }, {\n    key: \"handleVoicesChanged\",\n    value: function handleVoicesChanged(_ref2) {\n      var target = _ref2.target;\n      this.setState(function () {\n        return {\n          voices: target.getVoices()\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props,\n          state = this.state;\n      var children = props.children;\n      return _react[\"default\"].createElement(_Context[\"default\"].Consumer, null, function (context) {\n        return context ? typeof children === 'function' ? children(context) : children : _react[\"default\"].createElement(_Context[\"default\"].Provider, {\n          value: _this2.mergeContext(state.context, state.voices)\n        }, typeof children === 'function' ? _react[\"default\"].createElement(_Context[\"default\"].Consumer, null, function (context) {\n          return children(context);\n        }) : children);\n      });\n    }\n  }]);\n  return Composer;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = Composer;\nComposer.defaultProps = {\n  speechSynthesis: window.speechSynthesis || window.webkitSpeechSynthesis,\n  speechSynthesisUtterance: window.SpeechSynthesisUtterance || window.webkitSpeechSynthesisUtterance\n};\nComposer.propTypes = {\n  speechSynthesis: _propTypes[\"default\"].any,\n  speechSynthesisUtterance: _propTypes[\"default\"].any\n};","map":null,"metadata":{},"sourceType":"script"}