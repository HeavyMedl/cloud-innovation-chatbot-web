{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _CarouselLayout = _interopRequireDefault(require(\"../../Activity/CarouselLayout\"));\n\nvar _StackedLayout = _interopRequireDefault(require(\"../../Activity/StackedLayout\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar RETURN_FALSE = function RETURN_FALSE() {\n  return false;\n};\n\nfunction _default() {\n  return function () {\n    return function (next) {\n      return function (_ref) {\n        var activity = _ref.activity,\n            timestampClassName = _ref.timestampClassName; // TODO: [P4] Can we simplify these if-statement to something more readable?\n\n        var type = activity.type; // Filter out activities that should not be visible\n\n        if (type === 'conversationUpdate' || type === 'event') {\n          return RETURN_FALSE;\n        } else if (type === 'message') {\n          var _activity$attachments = activity.attachments,\n              attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n              text = activity.text;\n\n          if ( // Do not show postback\n          activity.channelData && activity.channelData.postBack || // Do not show messageBack if displayText is undefined\n          activity.channelData && activity.channelData.messageBack && !activity.channelData.messageBack.displayText // Do not show empty bubbles (no text and attachments, and not \"typing\")\n          || !(text || attachments.length)) {\n            return RETURN_FALSE;\n          }\n        } else if (type === 'typing' && activity.from.role === 'user') {\n          // Do not show typing by oneself\n          return RETURN_FALSE;\n        }\n\n        if (type === 'message' || type === 'typing') {\n          if (type === 'message' && (activity.attachments || []).length > 1 && activity.attachmentLayout === 'carousel') {\n            return function (children) {\n              return _react.default.createElement(_CarouselLayout.default, {\n                activity: activity,\n                timestampClassName: timestampClassName\n              }, children);\n            };\n          } else {\n            return function (children) {\n              return _react.default.createElement(_StackedLayout.default, {\n                activity: activity,\n                timestampClassName: timestampClassName\n              }, children);\n            };\n          }\n        } else {\n          return next({\n            activity: activity,\n            timestampClassName: timestampClassName\n          });\n        }\n      };\n    };\n  };\n}","map":null,"metadata":{},"sourceType":"script"}