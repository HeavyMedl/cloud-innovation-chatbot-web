{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"../common/Exports\");\n\nvar PcmRecorder =\n/** @class */\nfunction () {\n  function PcmRecorder() {\n    var _this = this;\n\n    this.Record = function (context, mediaStream, outputStream) {\n      var desiredSampleRate = 16000; // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\n\n      var scriptNode = function () {\n        var bufferSize = 0;\n\n        try {\n          return context.createScriptProcessor(bufferSize, 1, 1);\n        } catch (error) {\n          // Webkit (<= version 31) requires a valid bufferSize.\n          bufferSize = 2048;\n          var audioSampleRate = context.sampleRate;\n\n          while (bufferSize < 16384 && audioSampleRate >= 2 * desiredSampleRate) {\n            bufferSize <<= 1;\n            audioSampleRate >>= 1;\n          }\n\n          return context.createScriptProcessor(bufferSize, 1, 1);\n        }\n      }();\n\n      var waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n      var needHeader = true;\n      var that = _this;\n\n      scriptNode.onaudioprocess = function (event) {\n        var inputFrame = event.inputBuffer.getChannelData(0);\n\n        if (outputStream && !outputStream.IsClosed) {\n          var waveFrame = waveStreamEncoder.Encode(needHeader, inputFrame);\n\n          if (!!waveFrame) {\n            outputStream.Write(waveFrame);\n            needHeader = false;\n          }\n        }\n      }; // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createMediaStreamSource\n\n\n      var micInput = context.createMediaStreamSource(mediaStream);\n      _this.mediaResources = {\n        scriptProcessorNode: scriptNode,\n        source: micInput,\n        stream: mediaStream\n      };\n      micInput.connect(scriptNode);\n      scriptNode.connect(context.destination);\n    };\n\n    this.ReleaseMediaResources = function (context) {\n      if (_this.mediaResources) {\n        if (_this.mediaResources.scriptProcessorNode) {\n          _this.mediaResources.scriptProcessorNode.disconnect(context.destination);\n\n          _this.mediaResources.scriptProcessorNode = null;\n        }\n\n        if (_this.mediaResources.source) {\n          _this.mediaResources.source.disconnect();\n\n          _this.mediaResources.stream.getTracks().forEach(function (track) {\n            return track.stop();\n          });\n\n          _this.mediaResources.source = null;\n        }\n      }\n    };\n  }\n\n  return PcmRecorder;\n}();\n\nexports.PcmRecorder = PcmRecorder;","map":null,"metadata":{},"sourceType":"script"}