{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.localize = localize;\nexports.default = void 0;\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _csCZ = _interopRequireDefault(require(\"./cs-CZ\"));\n\nvar _daDK = _interopRequireDefault(require(\"./da-DK\"));\n\nvar _deDE = _interopRequireDefault(require(\"./de-DE\"));\n\nvar _elGR = _interopRequireDefault(require(\"./el-GR\"));\n\nvar _enUS = _interopRequireDefault(require(\"./en-US\"));\n\nvar _esES = _interopRequireDefault(require(\"./es-ES\"));\n\nvar _fiFI = _interopRequireDefault(require(\"./fi-FI\"));\n\nvar _frFR = _interopRequireDefault(require(\"./fr-FR\"));\n\nvar _huHU = _interopRequireDefault(require(\"./hu-HU\"));\n\nvar _itIT = _interopRequireDefault(require(\"./it-IT\"));\n\nvar _jaJP = _interopRequireDefault(require(\"./ja-JP\"));\n\nvar _koKR = _interopRequireDefault(require(\"./ko-KR\"));\n\nvar _lvLV = _interopRequireDefault(require(\"./lv-LV\"));\n\nvar _nbNO = _interopRequireDefault(require(\"./nb-NO\"));\n\nvar _nlNL = _interopRequireDefault(require(\"./nl-NL\"));\n\nvar _plPL = _interopRequireDefault(require(\"./pl-PL\"));\n\nvar _ptBR = _interopRequireDefault(require(\"./pt-BR\"));\n\nvar _ptPT = _interopRequireDefault(require(\"./pt-PT\"));\n\nvar _ruRU = _interopRequireDefault(require(\"./ru-RU\"));\n\nvar _svSE = _interopRequireDefault(require(\"./sv-SE\"));\n\nvar _trTR = _interopRequireDefault(require(\"./tr-TR\"));\n\nvar _zhHANS = _interopRequireDefault(require(\"./zh-HANS\"));\n\nvar _zhHANT = _interopRequireDefault(require(\"./zh-HANT\"));\n\nvar _zhYUE = _interopRequireDefault(require(\"./zh-YUE\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction getStrings(language) {\n  switch (normalizeLanguage(language || '')) {\n    case 'cs-CZ':\n      return _csCZ.default;\n\n    case 'da-DK':\n      return _daDK.default;\n\n    case 'de-DE':\n      return _deDE.default;\n\n    case 'el-GR':\n      return _elGR.default;\n\n    case 'es-ES':\n      return _esES.default;\n\n    case 'fi-FI':\n      return _fiFI.default;\n\n    case 'fr-FR':\n      return _frFR.default;\n\n    case 'hu-HU':\n      return _huHU.default;\n\n    case 'it-IT':\n      return _itIT.default;\n\n    case 'ja-JP':\n      return _jaJP.default;\n\n    case 'ko-KR':\n      return _koKR.default;\n\n    case 'lv-LV':\n      return _lvLV.default;\n\n    case 'nb-NO':\n      return _nbNO.default;\n\n    case 'nl-NL':\n      return _nlNL.default;\n\n    case 'pl-PL':\n      return _plPL.default;\n\n    case 'pt-BR':\n      return _ptBR.default;\n\n    case 'pt-PT':\n      return _ptPT.default;\n\n    case 'ru-RU':\n      return _ruRU.default;\n\n    case 'sv-SE':\n      return _svSE.default;\n\n    case 'tr-TR':\n      return _trTR.default;\n\n    case 'zh-HANS':\n      return _zhHANS.default;\n\n    case 'zh-HANT':\n      return _zhHANT.default;\n\n    case 'zh-YUE':\n      return _zhYUE.default;\n\n    default:\n      return _enUS.default;\n  }\n}\n\nfunction localize(text, language) {\n  var string = (getStrings(language) || {})[text] || _enUS.default[text];\n\n  if (typeof string === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return string.apply(void 0, args);\n  } else {\n    return string || text;\n  }\n}\n\nvar _default = (0, _connectToWebChat.default)(function (_ref) {\n  var language = _ref.language;\n  return {\n    language: language\n  };\n})(function (_ref2) {\n  var args = _ref2.args,\n      language = _ref2.language,\n      text = _ref2.text;\n  return localize.apply(void 0, [text, language].concat(_toConsumableArray(args || [])));\n});\n\nexports.default = _default;\n\nfunction normalizeLanguage(language) {\n  language = language.toLowerCase();\n\n  if (language.startsWith('cs')) {\n    return 'cs-CZ';\n  } else if (language.startsWith('da')) {\n    return 'da-DK';\n  } else if (language.startsWith('de')) {\n    return 'de-DE';\n  } else if (language.startsWith('el')) {\n    return 'el-GR';\n  } else if (language.startsWith('es')) {\n    return 'es-ES';\n  } else if (language.startsWith('fi')) {\n    return 'fi-FI';\n  } else if (language.startsWith('fr')) {\n    return 'fr-FR';\n  } else if (language.startsWith('hu')) {\n    return 'hu-HU';\n  } else if (language.startsWith('it')) {\n    return 'it-IT';\n  } else if (language.startsWith('ja')) {\n    return 'ja-JP';\n  } else if (language.startsWith('ko')) {\n    return 'ko-KR';\n  } else if (language.startsWith('lv')) {\n    return 'lv-LV';\n  } else if (language.startsWith('nb') || language.startsWith('nn') || language.startsWith('no')) {\n    return 'nb-NO';\n  } else if (language.startsWith('nl')) {\n    return 'nl-NL';\n  } else if (language.startsWith('pl')) {\n    return 'pl-PL';\n  } else if (language.startsWith('pt')) {\n    if (language === 'pt-br') {\n      return 'pt-BR';\n    } else {\n      return 'pt-PT';\n    }\n  } else if (language.startsWith('ru')) {\n    return 'ru-RU';\n  } else if (language.startsWith('sv')) {\n    return 'sv-SE';\n  } else if (language.startsWith('tr')) {\n    return 'tr-TR';\n  } else if (language.startsWith('zh')) {\n    if (language === 'zh-yue') {\n      return 'zh-YUE';\n    } else if (language === 'zh-hant' || language === 'zh-hk' || language === 'zh-mo' || language === 'zh-tw') {\n      return 'zh-HANT';\n    } else {\n      return 'zh-HANS';\n    }\n  }\n\n  return 'en-US';\n}","map":null,"metadata":{},"sourceType":"script"}