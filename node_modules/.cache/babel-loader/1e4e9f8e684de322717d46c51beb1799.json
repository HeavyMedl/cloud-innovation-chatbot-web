{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _callee;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _setSuggestedActions = _interopRequireDefault(require(\"../actions/setSuggestedActions\"));\n\nvar _marked =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_callee),\n    _marked2 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(clearSuggestedActionsOnPostActivity),\n    _marked3 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(clearSuggestedActions);\n\nfunction _callee() {\n  return _regenerator[\"default\"].wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _whileConnected[\"default\"])(clearSuggestedActionsOnPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction clearSuggestedActionsOnPostActivity() {\n  return _regenerator[\"default\"].wrap(function clearSuggestedActionsOnPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && payload.activity.type === 'message';\n          }, clearSuggestedActions);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction clearSuggestedActions() {\n  return _regenerator[\"default\"].wrap(function clearSuggestedActions$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _effects.put)((0, _setSuggestedActions[\"default\"])());\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"script"}