{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _callee;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _stopDictate = _interopRequireDefault(require(\"../actions/stopDictate\"));\n\nvar _marked =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_callee),\n    _marked2 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(stopDictateOnCardAction);\n\nfunction _callee() {\n  return _regenerator[\"default\"].wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _whileConnected[\"default\"])(stopDictateOnCardAction);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction stopDictateOnCardAction() {\n  return _regenerator[\"default\"].wrap(function stopDictateOnCardAction$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _effects.takeEvery)( // Currently, there are no actions that are related to card input\n          // For now, we are using POST_ACTIVITY of a \"message\" activity\n          // In the future, if we have an action for card input, we should use that instead\n          function (_ref) {\n            var payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && payload.activity.type === 'message';\n          },\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee2() {\n            return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (0, _effects.put)((0, _stopDictate[\"default\"])());\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":null,"metadata":{},"sourceType":"script"}