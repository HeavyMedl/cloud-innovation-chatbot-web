{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _SpeechServices = _interopRequireDefault(require(\"web-speech-cognitive-services/lib/SpeechServices\"));\n\nfunction _default(_x) {\n  return _ref2.apply(this, arguments);\n}\n\nfunction _ref2() {\n  _ref2 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee(_ref) {\n    var authorizationToken, region, subscriptionKey, textNormalization, ponyfill, SpeechGrammarList, speechSynthesis, SpeechSynthesisUtterance;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            authorizationToken = _ref.authorizationToken, region = _ref.region, subscriptionKey = _ref.subscriptionKey, textNormalization = _ref.textNormalization;\n            console.warn('Web Chat: Cognitive Services Speech Services support is currently in preview. If you encounter any problems, please file us an issue at https://github.com/Microsoft/BotFramework-WebChat/issues/.');\n            _context.next = 4;\n            return (0, _SpeechServices.default)({\n              authorizationToken: authorizationToken,\n              region: region,\n              subscriptionKey: subscriptionKey,\n              textNormalization: textNormalization\n            });\n\n          case 4:\n            ponyfill = _context.sent;\n            SpeechGrammarList = ponyfill.SpeechGrammarList, speechSynthesis = ponyfill.speechSynthesis, SpeechSynthesisUtterance = ponyfill.SpeechSynthesisUtterance;\n            return _context.abrupt(\"return\", function (_ref4) {\n              var referenceGrammarID = _ref4.referenceGrammarID;\n              return {\n                SpeechGrammarList: SpeechGrammarList,\n                SpeechRecognition: injectReferenceGrammarID(ponyfill, referenceGrammarID),\n                speechSynthesis: speechSynthesis,\n                SpeechSynthesisUtterance: SpeechSynthesisUtterance\n              };\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref2.apply(this, arguments);\n}\n\nfunction injectReferenceGrammarID(_ref3, referenceGrammarID) {\n  var SpeechGrammarList = _ref3.SpeechGrammarList,\n      SpeechRecognition = _ref3.SpeechRecognition;\n  return (\n    /*#__PURE__*/\n    function (_SpeechRecognition) {\n      (0, _inherits2.default)(_class, _SpeechRecognition);\n\n      function _class() {\n        (0, _classCallCheck2.default)(this, _class);\n        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_class).apply(this, arguments));\n      }\n\n      (0, _createClass2.default)(_class, [{\n        key: \"start\",\n        value: function start() {\n          this.grammars = new SpeechGrammarList();\n          this.grammars.referenceGrammar = referenceGrammarID || '';\n          return (0, _get2.default)((0, _getPrototypeOf2.default)(_class.prototype), \"start\", this).call(this);\n        }\n      }]);\n      return _class;\n    }(SpeechRecognition)\n  );\n}","map":null,"metadata":{},"sourceType":"script"}