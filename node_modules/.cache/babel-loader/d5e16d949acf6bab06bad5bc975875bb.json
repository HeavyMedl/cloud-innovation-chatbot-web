{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _callee2;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _markActivity = require(\"../actions/markActivity\");\n\nvar _startDictate = _interopRequireDefault(require(\"../actions/startDictate\"));\n\nvar _speakingActivity = _interopRequireDefault(require(\"../definitions/speakingActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _whileSpeakIncomingActivity = _interopRequireDefault(require(\"./effects/whileSpeakIncomingActivity\"));\n\nvar _activities2 = require(\"../selectors/activities\");\n\nvar _marked =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(_callee2),\n    _marked2 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(startDictateAfterSpeakActivity),\n    _marked3 =\n/*#__PURE__*/\n_regenerator[\"default\"].mark(startDictateAfterAllActivitiesSpoken);\n\nfunction _callee2() {\n  return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _whileConnected[\"default\"])(\n          /*#__PURE__*/\n          _regenerator[\"default\"].mark(function _callee() {\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _whileSpeakIncomingActivity[\"default\"])(startDictateAfterSpeakActivity);\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction startDictateAfterSpeakActivity() {\n  return _regenerator[\"default\"].wrap(function startDictateAfterSpeakActivity$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var payload = _ref.payload,\n                type = _ref.type;\n            return type === _markActivity.MARK_ACTIVITY && payload.name === 'speak' && payload.value === false;\n          }, startDictateAfterAllActivitiesSpoken);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction startDictateAfterAllActivitiesSpoken(_ref2) {\n  var activityID, activities, _activities, spokenActivity;\n\n  return _regenerator[\"default\"].wrap(function startDictateAfterAllActivitiesSpoken$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          activityID = _ref2.payload.activityID;\n          _context4.next = 3;\n          return (0, _effects.select)((0, _activities2.ofID)(activityID));\n\n        case 3:\n          activities = _context4.sent;\n          _activities = (0, _slicedToArray2[\"default\"])(activities, 1), spokenActivity = _activities[0];\n\n          if (!(spokenActivity && spokenActivity.inputHint !== 'ignoringInput' // Checks if there are no more activities that will be synthesis\n          && !activities.some(function (activity) {\n            return activity.id !== activityID && (0, _speakingActivity[\"default\"])(activity);\n          }))) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 8;\n          return (0, _effects.put)((0, _startDictate[\"default\"])());\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"script"}