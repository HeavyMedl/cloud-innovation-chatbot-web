{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactSay = require(\"react-say\");\n\nvar _glamor = require(\"glamor\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactScrollToBottom = require(\"react-scroll-to-bottom\");\n\nvar _connectToWebChat = _interopRequireDefault(require(\"./connectToWebChat\"));\n\nvar _ScrollToEndButton = _interopRequireDefault(require(\"./Activity/ScrollToEndButton\"));\n\nvar _Speak = _interopRequireDefault(require(\"./Activity/Speak\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ROOT_CSS = (0, _glamor.css)({\n  overflow: 'hidden',\n  position: 'relative'\n});\nvar PANEL_CSS = (0, _glamor.css)({\n  display: 'flex',\n  flexDirection: 'column',\n  WebkitOverflowScrolling: 'touch'\n});\nvar FILLER_CSS = (0, _glamor.css)({\n  flex: 1\n});\nvar LIST_CSS = (0, _glamor.css)({\n  listStyleType: 'none',\n  '& > li.hide-timestamp .transcript-timestamp': {\n    display: 'none'\n  }\n});\n\nfunction sameTimestampGroup(activityX, activityY, groupTimestamp) {\n  if (groupTimestamp === false) {\n    return true;\n  } else if (activityX && activityY) {\n    groupTimestamp = typeof groupTimestamp === 'number' ? groupTimestamp : 5 * 60 * 1000;\n\n    if (activityX.from.role === activityY.from.role) {\n      var timeX = new Date(activityX.timestamp).getTime();\n      var timeY = new Date(activityY.timestamp).getTime();\n      return Math.abs(timeX - timeY) <= groupTimestamp;\n    }\n  }\n\n  return false;\n}\n\nvar BasicTranscript = function BasicTranscript(_ref) {\n  var activityRenderer = _ref.activityRenderer,\n      activities = _ref.activities,\n      attachmentRenderer = _ref.attachmentRenderer,\n      className = _ref.className,\n      groupTimestamp = _ref.groupTimestamp,\n      styleSet = _ref.styleSet,\n      webSpeechPonyfill = _ref.webSpeechPonyfill;\n\n  var _ref2 = webSpeechPonyfill || {},\n      speechSynthesis = _ref2.speechSynthesis,\n      SpeechSynthesisUtterance = _ref2.SpeechSynthesisUtterance; // We use 2-pass approach for rendering activities, for show/hide timestamp grouping.\n  // Until the activity pass thru middleware, we never know if it is going to show up.\n  // After we know which activities will show up, we can compute which activity will show timestamps.\n  // If the activity does not render, it will not be spoken if text-to-speech is enabled.\n\n\n  var activityElements = activities.reduce(function (activityElements, activity) {\n    var element = activityRenderer({\n      activity: activity,\n      timestampClassName: 'transcript-timestamp'\n    })(function (_ref3) {\n      var attachment = _ref3.attachment;\n      return attachmentRenderer({\n        activity: activity,\n        attachment: attachment\n      });\n    });\n    element && activityElements.push({\n      activity: activity,\n      element: element\n    });\n    return activityElements;\n  }, []);\n  return _react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(ROOT_CSS + '', (className || '') + ''),\n    role: \"log\"\n  }, _react.default.createElement(_reactScrollToBottom.Panel, {\n    className: PANEL_CSS + ''\n  }, _react.default.createElement(\"div\", {\n    className: FILLER_CSS\n  }), _react.default.createElement(_reactSay.Composer, {\n    speechSynthesis: speechSynthesis,\n    speechSynthesisUtterance: SpeechSynthesisUtterance\n  }, _react.default.createElement(\"ul\", {\n    \"aria-live\": \"polite\",\n    className: (0, _classnames.default)(LIST_CSS + '', styleSet.activities + ''),\n    role: \"list\"\n  }, activityElements.map(function (_ref4, index) {\n    var activity = _ref4.activity,\n        element = _ref4.element;\n    return _react.default.createElement(\"li\", {\n      className: (0, _classnames.default)(styleSet.activity + '', {\n        // Hide timestamp if same timestamp group with the next activity\n        'hide-timestamp': sameTimestampGroup(activity, (activityElements[index + 1] || {}).activity, groupTimestamp)\n      }),\n      key: activity.channelData && activity.channelData.clientActivityID || activity.id || index,\n      role: \"listitem\"\n    }, element, // TODO: [P2] We should use core/definitions/speakingActivity for this predicate instead\n    activity.channelData && activity.channelData.speak && _react.default.createElement(_Speak.default, {\n      activity: activity\n    }));\n  })))), _react.default.createElement(_ScrollToEndButton.default, null));\n};\n\nvar _default = (0, _connectToWebChat.default)(function (_ref5) {\n  var activities = _ref5.activities,\n      activityRenderer = _ref5.activityRenderer,\n      attachmentRenderer = _ref5.attachmentRenderer,\n      groupTimestamp = _ref5.groupTimestamp,\n      styleSet = _ref5.styleSet,\n      webSpeechPonyfill = _ref5.webSpeechPonyfill;\n  return {\n    activities: activities,\n    activityRenderer: activityRenderer,\n    attachmentRenderer: attachmentRenderer,\n    groupTimestamp: groupTimestamp,\n    styleSet: styleSet,\n    webSpeechPonyfill: webSpeechPonyfill\n  };\n})(BasicTranscript);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}