{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pDefer = _interopRequireDefault(require(\"./external/p-defer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar EventAsPromise =\n/*#__PURE__*/\nfunction () {\n  function EventAsPromise() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventAsPromise);\n\n    this.defers = [];\n    this.upcomingDeferred = null;\n    this.eventListener = this.eventListener.bind(this);\n    this.options = options;\n    this.one = this.one.bind(this);\n    this.upcoming = this.upcoming.bind(this);\n\n    this[Symbol.iterator] = function () {\n      return {\n        next: function next() {\n          return {\n            done: false,\n            value: _this.upcoming()\n          };\n        }\n      };\n    };\n  }\n\n  _createClass(EventAsPromise, [{\n    key: \"eventListener\",\n    value: function eventListener(event) {\n      var deferred = this.defers.shift();\n      var args = this.options.array ? [].slice.call(arguments) : event;\n      deferred && deferred.resolve(args);\n\n      if (this.upcomingDeferred) {\n        this.upcomingDeferred.resolve(args);\n        this.upcomingDeferred = null;\n      }\n    }\n  }, {\n    key: \"one\",\n    value: function one() {\n      var deferred = (0, _pDefer.default)();\n      this.defers.push(deferred);\n      return deferred.promise;\n    }\n  }, {\n    key: \"upcoming\",\n    value: function upcoming() {\n      if (!this.upcomingDeferred) {\n        this.upcomingDeferred = (0, _pDefer.default)();\n      }\n\n      return this.upcomingDeferred.promise;\n    }\n  }]);\n\n  return EventAsPromise;\n}();\n\nexports.default = EventAsPromise;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":null,"metadata":{},"sourceType":"script"}