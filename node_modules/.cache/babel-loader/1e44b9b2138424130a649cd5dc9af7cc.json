{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"../../common/Exports\");\n\nvar PathHeaderName = \"path\";\nvar ContentTypeHeaderName = \"content-type\";\nvar RequestIdHeaderName = \"x-requestid\";\nvar RequestTimestampHeaderName = \"x-timestamp\";\n\nvar SpeechConnectionMessage =\n/** @class */\nfunction (_super) {\n  __extends(SpeechConnectionMessage, _super);\n\n  function SpeechConnectionMessage(messageType, path, requestId, contentType, body, additionalHeaders, id) {\n    var _this = this;\n\n    if (!path) {\n      throw new Exports_1.ArgumentNullError(\"path\");\n    }\n\n    if (!requestId) {\n      throw new Exports_1.ArgumentNullError(\"requestId\");\n    }\n\n    var headers = {};\n    headers[PathHeaderName] = path;\n    headers[RequestIdHeaderName] = requestId;\n    headers[RequestTimestampHeaderName] = new Date().toISOString();\n\n    if (contentType) {\n      headers[ContentTypeHeaderName] = contentType;\n    }\n\n    if (additionalHeaders) {\n      for (var headerName in additionalHeaders) {\n        if (headerName) {\n          headers[headerName] = additionalHeaders[headerName];\n        }\n      }\n    }\n\n    if (id) {\n      _this = _super.call(this, messageType, body, headers, id) || this;\n    } else {\n      _this = _super.call(this, messageType, body, headers) || this;\n    }\n\n    _this.path = path;\n    _this.requestId = requestId;\n    _this.contentType = contentType;\n    _this.additionalHeaders = additionalHeaders;\n    return _this;\n  }\n\n  Object.defineProperty(SpeechConnectionMessage.prototype, \"Path\", {\n    get: function () {\n      return this.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionMessage.prototype, \"RequestId\", {\n    get: function () {\n      return this.requestId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionMessage.prototype, \"ContentType\", {\n    get: function () {\n      return this.contentType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionMessage.prototype, \"AdditionalHeaders\", {\n    get: function () {\n      return this.additionalHeaders;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SpeechConnectionMessage.FromConnectionMessage = function (message) {\n    var path = null;\n    var requestId = null;\n    var contentType = null;\n    var requestTimestamp = null;\n    var additionalHeaders = {};\n\n    if (message.Headers) {\n      for (var headerName in message.Headers) {\n        if (headerName) {\n          if (headerName.toLowerCase() === PathHeaderName.toLowerCase()) {\n            path = message.Headers[headerName];\n          } else if (headerName.toLowerCase() === RequestIdHeaderName.toLowerCase()) {\n            requestId = message.Headers[headerName];\n          } else if (headerName.toLowerCase() === RequestTimestampHeaderName.toLowerCase()) {\n            requestTimestamp = message.Headers[headerName];\n          } else if (headerName.toLowerCase() === ContentTypeHeaderName.toLowerCase()) {\n            contentType = message.Headers[headerName];\n          } else {\n            additionalHeaders[headerName] = message.Headers[headerName];\n          }\n        }\n      }\n    }\n\n    return new SpeechConnectionMessage(message.MessageType, path, requestId, contentType, message.Body, additionalHeaders, message.Id);\n  };\n\n  return SpeechConnectionMessage;\n}(Exports_1.ConnectionMessage);\n\nexports.SpeechConnectionMessage = SpeechConnectionMessage;","map":null,"metadata":{},"sourceType":"script"}