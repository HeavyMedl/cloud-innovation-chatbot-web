{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar TOKEN_URL = 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\nfunction _default(_x) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee(subscriptionKey) {\n    var res;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(TOKEN_URL, {\n              headers: {\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n              },\n              method: 'POST'\n            });\n\n          case 2:\n            res = _context.sent;\n\n            if (!(res.status !== 200)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"Failed to fetch speech token, server returned \".concat(res.status));\n\n          case 5:\n            return _context.abrupt(\"return\", res.text());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _ref.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}