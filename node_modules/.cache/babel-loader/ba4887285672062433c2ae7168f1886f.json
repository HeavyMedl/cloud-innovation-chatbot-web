{"ast":null,"code":"'use strict';\n\nvar numberIsNan = require('number-is-nan');\n\nvar arrayUniq = require('array-uniq');\n\nvar reInt = /^\\d+$/;\n\nfunction deepUnique(arr) {\n  return arr.sort().filter(function (el, i) {\n    return JSON.stringify(el) !== JSON.stringify(arr[i - 1]);\n  });\n}\n\nexports.parse = function (str) {\n  return deepUnique(str.split(',').map(function (el) {\n    var ret = {};\n    el.trim().split(/\\s+/).forEach(function (el, i) {\n      if (i === 0) {\n        return ret.url = el;\n      }\n\n      var value = el.substring(0, el.length - 1);\n      var postfix = el[el.length - 1];\n      var intVal = parseInt(value, 10);\n      var floatVal = parseFloat(value);\n\n      if (postfix === 'w' && reInt.test(value)) {\n        ret.width = intVal;\n      } else if (postfix === 'h' && reInt.test(value)) {\n        ret.height = intVal;\n      } else if (postfix === 'x' && !numberIsNan(floatVal)) {\n        ret.density = floatVal;\n      } else {\n        throw new Error('Invalid srcset descriptor: ' + el + '.');\n      }\n    });\n    return ret;\n  }));\n};\n\nexports.stringify = function (arr) {\n  return arrayUniq(arr.map(function (el) {\n    if (!el.url) {\n      throw new Error('URL is required.');\n    }\n\n    var ret = [el.url];\n\n    if (el.width) {\n      ret.push(el.width + 'w');\n    }\n\n    if (el.height) {\n      ret.push(el.height + 'h');\n    }\n\n    if (el.density) {\n      ret.push(el.density + 'x');\n    }\n\n    return ret.join(' ');\n  })).join(', ');\n};","map":null,"metadata":{},"sourceType":"script"}