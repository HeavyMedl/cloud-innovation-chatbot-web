{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ConnectionMessage_1 = require(\"./ConnectionMessage\");\n\nvar Error_1 = require(\"./Error\");\n\nvar Guid_1 = require(\"./Guid\");\n\nvar RawWebsocketMessage =\n/** @class */\nfunction () {\n  function RawWebsocketMessage(messageType, payload, id) {\n    this.payload = null;\n\n    if (!payload) {\n      throw new Error_1.ArgumentNullError(\"payload\");\n    }\n\n    if (messageType === ConnectionMessage_1.MessageType.Binary && !(payload instanceof ArrayBuffer)) {\n      throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    if (messageType === ConnectionMessage_1.MessageType.Text && !(typeof payload === \"string\")) {\n      throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n    }\n\n    this.messageType = messageType;\n    this.payload = payload;\n    this.id = id ? id : Guid_1.CreateNoDashGuid();\n  }\n\n  Object.defineProperty(RawWebsocketMessage.prototype, \"MessageType\", {\n    get: function () {\n      return this.messageType;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RawWebsocketMessage.prototype, \"Payload\", {\n    get: function () {\n      return this.payload;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RawWebsocketMessage.prototype, \"TextContent\", {\n    get: function () {\n      if (this.messageType === ConnectionMessage_1.MessageType.Binary) {\n        throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n      }\n\n      return this.payload;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RawWebsocketMessage.prototype, \"BinaryContent\", {\n    get: function () {\n      if (this.messageType === ConnectionMessage_1.MessageType.Text) {\n        throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n      }\n\n      return this.payload;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RawWebsocketMessage.prototype, \"Id\", {\n    get: function () {\n      return this.id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RawWebsocketMessage;\n}();\n\nexports.RawWebsocketMessage = RawWebsocketMessage;","map":null,"metadata":{},"sourceType":"script"}