{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"../../common.browser/Exports\");\n\nvar Exports_2 = require(\"../../common/Exports\");\n\nvar Exports_3 = require(\"../speech/Exports\");\n\nvar TestHooksParamName = \"testhooks\";\nvar ConnectionIdHeader = \"X-ConnectionId\";\n\nvar SpeechConnectionFactory =\n/** @class */\nfunction () {\n  function SpeechConnectionFactory() {\n    var _this = this;\n\n    this.Create = function (config, authInfo, connectionId) {\n      var endpoint = \"\";\n\n      switch (config.RecognitionMode) {\n        case Exports_3.RecognitionMode.Conversation:\n          endpoint = _this.Host + _this.ConversationRelativeUri;\n          break;\n\n        case Exports_3.RecognitionMode.Dictation:\n          endpoint = _this.Host + _this.DictationRelativeUri;\n          break;\n\n        default:\n          endpoint = _this.Host + _this.InteractiveRelativeUri; // default is interactive\n\n          break;\n      }\n\n      var queryParams = {\n        format: Exports_3.SpeechResultFormat[config.Format].toString().toLowerCase(),\n        language: config.Language\n      };\n\n      if (_this.IsDebugModeEnabled) {\n        queryParams[TestHooksParamName] = \"1\";\n      }\n\n      var headers = {};\n      headers[authInfo.HeaderName] = authInfo.Token;\n      headers[ConnectionIdHeader] = connectionId;\n      return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_3.WebsocketMessageFormatter(), connectionId);\n    };\n  }\n\n  Object.defineProperty(SpeechConnectionFactory.prototype, \"Host\", {\n    get: function () {\n      return Exports_2.Storage.Local.GetOrAdd(\"Host\", \"wss://speech.platform.bing.com\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionFactory.prototype, \"InteractiveRelativeUri\", {\n    get: function () {\n      return Exports_2.Storage.Local.GetOrAdd(\"InteractiveRelativeUri\", \"/speech/recognition/interactive/cognitiveservices/v1\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionFactory.prototype, \"ConversationRelativeUri\", {\n    get: function () {\n      return Exports_2.Storage.Local.GetOrAdd(\"ConversationRelativeUri\", \"/speech/recognition/conversation/cognitiveservices/v1\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionFactory.prototype, \"DictationRelativeUri\", {\n    get: function () {\n      return Exports_2.Storage.Local.GetOrAdd(\"DictationRelativeUri\", \"/speech/recognition/dictation/cognitiveservices/v1\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechConnectionFactory.prototype, \"IsDebugModeEnabled\", {\n    get: function () {\n      var value = Exports_2.Storage.Local.GetOrAdd(\"IsDebugModeEnabled\", \"false\");\n      return value.toLowerCase() === \"true\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SpeechConnectionFactory;\n}();\n\nexports.SpeechConnectionFactory = SpeechConnectionFactory;","map":null,"metadata":{},"sourceType":"script"}