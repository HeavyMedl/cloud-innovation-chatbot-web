"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectUploadButton = exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _AttachmentIcon = _interopRequireDefault(require("./Assets/AttachmentIcon"));

var _Localize = require("../Localization/Localize");

var _IconButton = _interopRequireDefault(require("./IconButton"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ROOT_CSS = (0, _glamor.css)({
  overflow: 'hidden',
  position: 'relative',
  '& > input': {
    height: 0,
    width: 0,
    opacity: 0,
    position: 'absolute',
    left: 0,
    top: 0
  }
});

var connectUploadButton = function connectUploadButton() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref) {
    var disabled = _ref.disabled,
        language = _ref.language,
        _sendFiles = _ref.sendFiles;
    return {
      disabled: disabled,
      language: language,
      sendFiles: function sendFiles(files) {
        if (files && files.length) {
          // TODO: [P3] We need to find revokeObjectURL on the UI side
          //       Redux store should not know about the browser environment
          //       One fix is to use ArrayBuffer instead of object URL, but that would requires change to DirectLineJS
          _sendFiles([].map.call(files, function (file) {
            return {
              name: file.name,
              size: file.size,
              url: window.URL.createObjectURL(file)
            };
          }));
        }
      }
    };
  }].concat(selectors));
};

exports.connectUploadButton = connectUploadButton;

var UploadButton =
/*#__PURE__*/
function (_React$Component) {
  _inherits(UploadButton, _React$Component);

  function UploadButton(props) {
    var _this;

    _classCallCheck(this, UploadButton);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadButton).call(this, props));
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
    _this.handleFileChange = _this.handleFileChange.bind(_assertThisInitialized(_this));
    _this.inputRef = _react.default.createRef();
    return _this;
  }

  _createClass(UploadButton, [{
    key: "handleClick",
    value: function handleClick() {
      var current = this.inputRef.current;
      current && current.click();
    }
  }, {
    key: "handleFileChange",
    value: function handleFileChange(event) {
      this.props.sendFiles(event.target.files);
      var current = this.inputRef.current;

      if (current) {
        current.value = null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          language = _this$props.language,
          styleSet = _this$props.styleSet;
      var uploadFileString = (0, _Localize.localize)('Upload file', language);
      return _react.default.createElement("div", {
        className: (0, _classnames.default)(ROOT_CSS + '', styleSet.uploadButton + '')
      }, _react.default.createElement("input", {
        "aria-hidden": "true",
        disabled: disabled,
        multiple: true,
        onChange: this.handleFileChange,
        ref: this.inputRef,
        role: "button",
        tabIndex: -1,
        type: "file"
      }), _react.default.createElement(_IconButton.default, {
        alt: uploadFileString,
        "aria-label": uploadFileString,
        disabled: disabled,
        onClick: this.handleClick
      }, _react.default.createElement(_AttachmentIcon.default, null)));
    }
  }]);

  return UploadButton;
}(_react.default.Component);

var _default = connectUploadButton(function (_ref2) {
  var styleSet = _ref2.styleSet;
  return {
    styleSet: styleSet
  };
})(UploadButton);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L1VwbG9hZEJ1dHRvbi5qcyJdLCJuYW1lcyI6WyJST09UX0NTUyIsIm92ZXJmbG93IiwicG9zaXRpb24iLCJoZWlnaHQiLCJ3aWR0aCIsIm9wYWNpdHkiLCJsZWZ0IiwidG9wIiwiY29ubmVjdFVwbG9hZEJ1dHRvbiIsInNlbGVjdG9ycyIsImNvbm5lY3RUb1dlYkNoYXQiLCJkaXNhYmxlZCIsImxhbmd1YWdlIiwic2VuZEZpbGVzIiwiZmlsZXMiLCJsZW5ndGgiLCJtYXAiLCJjYWxsIiwiZmlsZSIsIm5hbWUiLCJzaXplIiwidXJsIiwid2luZG93IiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiVXBsb2FkQnV0dG9uIiwicHJvcHMiLCJoYW5kbGVDbGljayIsImJpbmQiLCJoYW5kbGVGaWxlQ2hhbmdlIiwiaW5wdXRSZWYiLCJSZWFjdCIsImNyZWF0ZVJlZiIsImN1cnJlbnQiLCJjbGljayIsImV2ZW50IiwidGFyZ2V0IiwidmFsdWUiLCJzdHlsZVNldCIsInVwbG9hZEZpbGVTdHJpbmciLCJ1cGxvYWRCdXR0b24iLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxpQkFBSTtBQUNuQkMsRUFBQUEsUUFBUSxFQUFFLFFBRFM7QUFFbkJDLEVBQUFBLFFBQVEsRUFBRSxVQUZTO0FBSW5CLGVBQWE7QUFDWEMsSUFBQUEsTUFBTSxFQUFFLENBREc7QUFFWEMsSUFBQUEsS0FBSyxFQUFFLENBRkk7QUFHWEMsSUFBQUEsT0FBTyxFQUFFLENBSEU7QUFJWEgsSUFBQUEsUUFBUSxFQUFFLFVBSkM7QUFLWEksSUFBQUEsSUFBSSxFQUFFLENBTEs7QUFNWEMsSUFBQUEsR0FBRyxFQUFFO0FBTk07QUFKTSxDQUFKLENBQWpCOztBQWNBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxt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RixDQVhGLENBREY7QUFzQkQ7Ozs7RUFuRHdCSSxlQUFNVSxTOztlQXNEbEJqQyxtQkFBbUIsQ0FDaEM7QUFBQSxNQUFHOEIsUUFBSCxTQUFHQSxRQUFIO0FBQUEsU0FBbUI7QUFBRUEsSUFBQUEsUUFBUSxFQUFSQTtBQUFGLEdBQW5CO0FBQUEsQ0FEZ0MsQ0FBbkIsQ0FFYmIsWUFGYSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnZ2xhbW9yJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbm5lY3RUb1dlYkNoYXQgZnJvbSAnLi4vY29ubmVjdFRvV2ViQ2hhdCc7XG5pbXBvcnQgQXR0YWNobWVudEljb24gZnJvbSAnLi9Bc3NldHMvQXR0YWNobWVudEljb24nO1xuXG5pbXBvcnQgeyBsb2NhbGl6ZSB9IGZyb20gJy4uL0xvY2FsaXphdGlvbi9Mb2NhbGl6ZSc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuL0ljb25CdXR0b24nO1xuXG5jb25zdCBST09UX0NTUyA9IGNzcyh7XG4gIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG5cbiAgJyYgPiBpbnB1dCc6IHtcbiAgICBoZWlnaHQ6IDAsXG4gICAgd2lkdGg6IDAsXG4gICAgb3BhY2l0eTogMCxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICBsZWZ0OiAwLFxuICAgIHRvcDogMFxuICB9XG59KTtcblxuY29uc3QgY29ubmVjdFVwbG9hZEJ1dHRvbiA9ICguLi5zZWxlY3RvcnMpID0+IGNvbm5lY3RUb1dlYkNoYXQoXG4gICh7XG4gICAgZGlzYWJsZWQsXG4gICAgbGFuZ3VhZ2UsXG4gICAgc2VuZEZpbGVzXG4gIH0pID0+ICh7XG4gICAgZGlzYWJsZWQsXG4gICAgbGFuZ3VhZ2UsXG4gICAgc2VuZEZpbGVzOiBmaWxlcyA9PiB7XG4gICAgICBpZiAoZmlsZXMgJiYgZmlsZXMubGVuZ3RoKSB7XG4gICAgICAgIC8vIFRPRE86IFtQM10gV2UgbmVlZCB0byBmaW5kIHJldm9rZU9iamVjdFVSTCBvbiB0aGUgVUkgc2lkZVxuICAgICAgICAvLyAgICAgICBSZWR1eCBzdG9yZSBzaG91bGQgbm90IGtub3cgYWJvdXQgdGhlIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAgICAgICAgLy8gICAgICAgT25lIGZpeCBpcyB0byB1c2UgQXJyYXlCdWZmZXIgaW5zdGVhZCBvZiBvYmplY3QgVVJMLCBidXQgdGhhdCB3b3VsZCByZXF1aXJlcyBjaGFuZ2UgdG8gRGlyZWN0TGluZUpTXG4gICAgICAgIHNlbmRGaWxlcyhbXS5tYXAuY2FsbChmaWxlcywgZmlsZSA9PiAoe1xuICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICBzaXplOiBmaWxlLnNpemUsXG4gICAgICAgICAgdXJsOiB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKVxuICAgICAgICB9KSkpO1xuICAgICAgfVxuICAgIH1cbiAgfSksXG4gIC4uLnNlbGVjdG9yc1xuKVxuXG5jbGFzcyBVcGxvYWRCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVGaWxlQ2hhbmdlID0gdGhpcy5oYW5kbGVGaWxlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5pbnB1dFJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soKSB7XG4gICAgY29uc3QgeyBjdXJyZW50IH0gPSB0aGlzLmlucHV0UmVmO1xuXG4gICAgY3VycmVudCAmJiBjdXJyZW50LmNsaWNrKCk7XG4gIH1cblxuICBoYW5kbGVGaWxlQ2hhbmdlKGV2ZW50KSB7XG4gICAgdGhpcy5wcm9wcy5zZW5kRmlsZXMoZXZlbnQudGFyZ2V0LmZpbGVzKTtcblxuICAgIGNvbnN0IHsgY3VycmVudCB9ID0gdGhpcy5pbnB1dFJlZjtcblxuICAgIGlmIChjdXJyZW50KSB7XG4gICAgICBjdXJyZW50LnZhbHVlID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBkaXNhYmxlZCwgbGFuZ3VhZ2UsIHN0eWxlU2V0IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVwbG9hZEZpbGVTdHJpbmcgPSBsb2NhbGl6ZSgnVXBsb2FkIGZpbGUnLCBsYW5ndWFnZSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9eyBjbGFzc05hbWVzKFJPT1RfQ1NTICsgJycsIHN0eWxlU2V0LnVwbG9hZEJ1dHRvbiArICcnKSB9PlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgICAgIGRpc2FibGVkPXsgZGlzYWJsZWQgfVxuICAgICAgICAgIG11bHRpcGxlPXsgdHJ1ZSB9XG4gICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmhhbmRsZUZpbGVDaGFuZ2UgfVxuICAgICAgICAgIHJlZj17IHRoaXMuaW5wdXRSZWYgfVxuICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgIHRhYkluZGV4PXsgLTEgfVxuICAgICAgICAgIHR5cGU9XCJmaWxlXCJcbiAgICAgICAgLz5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBhbHQ9eyB1cGxvYWRGaWxlU3RyaW5nIH1cbiAgICAgICAgICBhcmlhLWxhYmVsPXsgdXBsb2FkRmlsZVN0cmluZyB9XG4gICAgICAgICAgZGlzYWJsZWQ9eyBkaXNhYmxlZCB9XG4gICAgICAgICAgb25DbGljaz17IHRoaXMuaGFuZGxlQ2xpY2sgfVxuICAgICAgICA+XG4gICAgICAgICAgPEF0dGFjaG1lbnRJY29uIC8+XG4gICAgICAgIDwvSWNvbkJ1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdFVwbG9hZEJ1dHRvbihcbiAgKHsgc3R5bGVTZXQgfSkgPT4gKHsgc3R5bGVTZXQgfSlcbikoVXBsb2FkQnV0dG9uKVxuXG5leHBvcnQgeyBjb25uZWN0VXBsb2FkQnV0dG9uIH1cbiJdfQ==