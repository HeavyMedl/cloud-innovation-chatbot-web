"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectSpeakActivity = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _SayAlt = _interopRequireDefault(require("./SayAlt"));

var _reactSay = _interopRequireDefault(require("react-say"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: [P4] Consider moving this feature into BasicActivity
//       And it has better DOM position for showing visual spoken text
// TODO: [P3] We should add a "spoken" or "speakState" flag to indicate whether this activity is going to speak, or spoken
var connectSpeakActivity = function connectSpeakActivity() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {
    var language = _ref.language,
        markActivity = _ref.markActivity;
    var activity = _ref2.activity;
    return {
      language: language,
      markAsSpoken: function markAsSpoken() {
        markActivity(activity, 'speak', false);
      },
      selectVoice: function selectVoice(voices) {
        return [].find.call(voices, function (voice) {
          return voice.lang === activity.locale;
        }) || [].find.call(voices, function (voice) {
          return voice.lang === language;
        }) || [].find.call(voices, function (voice) {
          return voice.lang === window.navigator.language;
        }) || [].find.call(voices, function (voice) {
          return voice.lang === 'en-US';
        }) || voices[0];
      }
    };
  }].concat(selectors));
};

exports.connectSpeakActivity = connectSpeakActivity;

var _default = connectSpeakActivity(function (_ref3) {
  var styleSet = _ref3.styleSet;
  return {
    styleSet: styleSet
  };
})(function (_ref4) {
  var activity = _ref4.activity,
      markAsSpoken = _ref4.markAsSpoken,
      selectVoice = _ref4.selectVoice,
      styleSet = _ref4.styleSet;

  if (!activity) {
    return false;
  }

  var lines = [activity.speak || activity.text];
  (activity.attachments || []).forEach(function (_ref5) {
    var content = _ref5.content,
        contentType = _ref5.contentType;

    switch (contentType) {
      case 'application/vnd.microsoft.card.adaptive':
        lines.push(content.speak);
        break;

      case 'application/vnd.microsoft.card.animation':
      case 'application/vnd.microsoft.card.audio':
      case 'application/vnd.microsoft.card.video':
      case 'application/vnd.microsoft.card.hero':
      case 'application/vnd.microsoft.card.thumbnail':
        lines.push(content.title);
        lines.push(content.subtitle);
        lines.push(content.text);
        break;

      case 'application/vnd.microsoft.card.receipt':
        lines.push(content.title);
        break;
    }
  });
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactSay.default, {
    onEnd: markAsSpoken,
    speak: lines.filter(function (line) {
      return line;
    }).join('\r\n'),
    voice: selectVoice
  }), !!styleSet.options.showSpokenText && _react.default.createElement(_SayAlt.default, {
    speak: lines.filter(function (line) {
      return line;
    }).join('\r\n'),
    voice: selectVoice
  }));
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9TcGVhay5qcyJdLCJuYW1lcyI6WyJjb25uZWN0U3BlYWtBY3Rpdml0eSIsInNlbGVjdG9ycyIsImNvbm5lY3RUb1dlYkNoYXQiLCJsYW5ndWFnZSIsIm1hcmtBY3Rpdml0eSIsImFjdGl2aXR5IiwibWFya0FzU3Bva2VuIiwic2VsZWN0Vm9pY2UiLCJ2b2ljZXMiLCJmaW5kIiwiY2FsbCIsInZvaWNlIiwibGFuZyIsImxvY2FsZSIsIndpbmRvdyIsIm5hdmlnYXRvciIsInN0eWxlU2V0IiwibGluZXMiLCJzcGVhayIsInRleHQiLCJhdHRhY2htZW50cyIsImZvckVhY2giLCJjb250ZW50IiwiY29udGVudFR5cGUiLCJwdXNoIiwidGl0bGUiLCJzdWJ0aXRsZSIsImZpbHRlciIsImxpbmUiLCJqb2luIiwib3B0aW9ucyIsInNob3dTcG9rZW5UZXh0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQTtBQUNBO0FBRUE7QUFDQSxJQUFNQSxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCO0FBQUEsb0NBQUlDLFNBQUo7QUFBSUEsSUFBQUEsU0FBSjtBQUFBOztBQUFBLFNBQWtCQyx5Q0FDN0M7QUFBQSxRQUNFQyxRQURGLFFBQ0VBLFFBREY7QUFBQSxRQUVFQyxZQUZGLFFBRUVBLFlBRkY7QUFBQSxRQUlFQyxRQUpGLFNBSUVBLFFBSkY7QUFBQSxXQUtPO0FBQ0xGLE1BQUFBLFFBQVEsRUFBUkEsUUFESztBQUVMRyxNQUFBQSxZQUFZLEVBQUUsd0JBQU07QUFDbEJGLFFBQUFBLFlBQVksQ0FBQ0MsUUFBRCxFQUFXLE9BQVgsRUFBb0IsS0FBcEIsQ0FBWjtBQUNELE9BSkk7QUFLTEUsTUFBQUEsV0FBVyxFQUFFLHFCQUFBQyxNQUFNLEVBQUk7QUFDckIsZUFDRSxHQUFHQyxJQUFILENBQVFDLElBQVIsQ0FBYUYsTUFBYixFQUFxQixVQUFBRyxLQUFLO0FBQUEsaUJBQUlBLEtBQUssQ0FB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LENBREY7QUFnQkQsQ0FyRFksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2F5QWx0IGZyb20gJy4vU2F5QWx0JztcbmltcG9ydCBTYXkgZnJvbSAncmVhY3Qtc2F5JztcblxuaW1wb3J0IGNvbm5lY3RUb1dlYkNoYXQgZnJvbSAnLi4vY29ubmVjdFRvV2ViQ2hhdCc7XG5cbi8vIFRPRE86IFtQNF0gQ29uc2lkZXIgbW92aW5nIHRoaXMgZmVhdHVyZSBpbnRvIEJhc2ljQWN0aXZpdHlcbi8vICAgICAgIEFuZCBpdCBoYXMgYmV0dGVyIERPTSBwb3NpdGlvbiBmb3Igc2hvd2luZyB2aXN1YWwgc3Bva2VuIHRleHRcblxuLy8gVE9ETzogW1AzXSBXZSBzaG91bGQgYWRkIGEgXCJzcG9rZW5cIiBvciBcInNwZWFrU3RhdGVcIiBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgdGhpcyBhY3Rpdml0eSBpcyBnb2luZyB0byBzcGVhaywgb3Igc3Bva2VuXG5jb25zdCBjb25uZWN0U3BlYWtBY3Rpdml0eSA9ICguLi5zZWxlY3RvcnMpID0+IGNvbm5lY3RUb1dlYkNoYXQoXG4gICh7XG4gICAgbGFuZ3VhZ2UsXG4gICAgbWFya0FjdGl2aXR5XG4gIH0sIHtcbiAgICBhY3Rpdml0eVxuICB9KSA9PiAoe1xuICAgIGxhbmd1YWdlLFxuICAgIG1hcmtBc1Nwb2tlbjogKCkgPT4ge1xuICAgICAgbWFya0FjdGl2aXR5KGFjdGl2aXR5LCAnc3BlYWsnLCBmYWxzZSlcbiAgICB9LFxuICAgIHNlbGVjdFZvaWNlOiB2b2ljZXMgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgW10uZmluZC5jYWxsKHZvaWNlcywgdm9pY2UgPT4gdm9pY2UubGFuZyA9PT0gYWN0aXZpdHkubG9jYWxlKVxuICAgICAgICB8fCBbXS5maW5kLmNhbGwodm9pY2VzLCB2b2ljZSA9PiB2b2ljZS5sYW5nID09PSBsYW5ndWFnZSlcbiAgICAgICAgfHwgW10uZmluZC5jYWxsKHZvaWNlcywgdm9pY2UgPT4gdm9pY2UubGFuZyA9PT0gd2luZG93Lm5hdmlnYXRvci5sYW5ndWFnZSlcbiAgICAgICAgfHwgW10uZmluZC5jYWxsKHZvaWNlcywgdm9pY2UgPT4gdm9pY2UubGFuZyA9PT0gJ2VuLVVTJylcbiAgICAgICAgfHwgdm9pY2VzWzBdXG4gICAgICApO1xuICAgIH1cbiAgfSksXG4gIC4uLnNlbGVjdG9yc1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdFNwZWFrQWN0aXZpdHkoXG4gICh7IHN0eWxlU2V0IH0pID0+ICh7IHN0eWxlU2V0IH0pXG4pKFxuICAoe1xuICAgIGFjdGl2aXR5LFxuICAgIG1hcmtBc1Nwb2tlbixcbiAgICBzZWxlY3RWb2ljZSxcbiAgICBzdHlsZVNldFxuICB9KSA9PiB7XG4gICAgaWYgKCFhY3Rpdml0eSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGxpbmVzID0gW2FjdGl2aXR5LnNwZWFrIHx8IGFjdGl2aXR5LnRleHRdO1xuXG4gICAgKGFjdGl2aXR5LmF0dGFjaG1lbnRzIHx8IFtdKS5mb3JFYWNoKCh7IGNvbnRlbnQsIGNvbnRlbnRUeXBlIH0pID0+IHtcbiAgICAgIHN3aXRjaCAoY29udGVudFR5cGUpIHtcbiAgICAgICAgY2FzZSAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLmFkYXB0aXZlJzpcbiAgICAgICAgICBsaW5lcy5wdXNoKGNvbnRlbnQuc3BlYWspO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC5hbmltYXRpb24nOlxuICAgICAgICBjYXNlICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQuYXVkaW8nOlxuICAgICAgICBjYXNlICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQudmlkZW8nOlxuICAgICAgICBjYXNlICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQuaGVybyc6XG4gICAgICAgIGNhc2UgJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC50aHVtYm5haWwnOlxuICAgICAgICAgIGxpbmVzLnB1c2goY29udGVudC50aXRsZSk7XG4gICAgICAgICAgbGluZXMucHVzaChjb250ZW50LnN1YnRpdGxlKTtcbiAgICAgICAgICBsaW5lcy5wdXNoKGNvbnRlbnQudGV4dCk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLnJlY2VpcHQnOlxuICAgICAgICAgIGxpbmVzLnB1c2goY29udGVudC50aXRsZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICA8U2F5XG4gICAgICAgICAgb25FbmQ9eyBtYXJrQXNTcG9rZW4gfVxuICAgICAgICAgIHNwZWFrPXsgbGluZXMuZmlsdGVyKGxpbmUgPT4gbGluZSkuam9pbignXFxyXFxuJykgfVxuICAgICAgICAgIHZvaWNlPXsgc2VsZWN0Vm9pY2UgfVxuICAgICAgICAvPlxuICAgICAgICB7XG4gICAgICAgICAgISFzdHlsZVNldC5vcHRpb25zLnNob3dTcG9rZW5UZXh0ICYmXG4gICAgICAgICAgICA8U2F5QWx0XG4gICAgICAgICAgICAgIHNwZWFrPXsgbGluZXMuZmlsdGVyKGxpbmUgPT4gbGluZSkuam9pbignXFxyXFxuJykgfVxuICAgICAgICAgICAgICB2b2ljZT17IHNlbGVjdFZvaWNlIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIH1cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgfVxuKVxuXG5leHBvcnQgeyBjb25uZWN0U3BlYWtBY3Rpdml0eSB9XG4iXX0=