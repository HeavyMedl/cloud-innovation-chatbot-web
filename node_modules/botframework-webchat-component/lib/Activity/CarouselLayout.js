"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactFilm = require("react-film");

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _Localize = require("../Localization/Localize");

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _CarouselFilmStrip = _interopRequireDefault(require("./CarouselFilmStrip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ROOT_CSS = (0, _glamor.css)({
  overflow: 'hidden',
  position: 'relative'
});

var _default = (0, _connectToWebChat.default)(function (_ref) {
  var language = _ref.language,
      styleSet = _ref.styleSet;
  return {
    language: language,
    styleSet: styleSet
  };
})(function (_ref2) {
  var activity = _ref2.activity,
      children = _ref2.children,
      language = _ref2.language,
      styleSet = _ref2.styleSet,
      timestampClassName = _ref2.timestampClassName;
  var filmStyleSet = (0, _reactFilm.createBasicStyleSet)({
    cursor: null
  });
  return _react.default.createElement(_reactFilm.Composer, {
    numItems: _react.default.Children.count(children)
  }, _react.default.createElement(_reactFilm.Context.Consumer, null, function (_ref3) {
    var scrollBarWidth = _ref3.scrollBarWidth;
    return _react.default.createElement("div", {
      className: (0, _classnames.default)(ROOT_CSS + '', filmStyleSet.carousel + '')
    }, _react.default.createElement(_CarouselFilmStrip.default, {
      activity: activity,
      timestampClassName: timestampClassName
    }, children), scrollBarWidth !== '100%' && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactFilm.Flipper, {
      "aria-label": (0, _Localize.localize)('Left', language),
      className: (0, _classnames.default)(styleSet.carouselFlipper + '', filmStyleSet.leftFlipper + ''),
      mode: "left"
    }, _react.default.createElement("div", {
      className: "button"
    }, "<")), _react.default.createElement(_reactFilm.Flipper, {
      "aria-label": (0, _Localize.localize)('Right', language),
      className: (0, _classnames.default)(styleSet.carouselFlipper + '', filmStyleSet.rightFlipper + ''),
      mode: "right"
    }, _react.default.createElement("div", {
      className: "button"
    }, ">"))));
  }));
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9DYXJvdXNlbExheW91dC5qcyJdLCJuYW1lcyI6WyJST09UX0NTUyIsIm92ZXJmbG93IiwicG9zaXRpb24iLCJsYW5ndWFnZSIsInN0eWxlU2V0IiwiYWN0aXZpdHkiLCJjaGlsZHJlbiIsInRpbWVzdGFtcENsYXNzTmFtZSIsImZpbG1TdHlsZVNldCIsImN1cnNvciIsIlJlYWN0IiwiQ2hpbGRyZW4iLCJjb3VudCIsInNjcm9sbEJhcldpZHRoIiwiY2Fyb3VzZWwiLCJjYXJvdXNlbEZsaXBwZXIiLCJsZWZ0RmxpcHBlciIsInJpZ2h0RmxpcHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLGlCQUFJO0FBQ25CQyxFQUFBQSxRQUFRLEVBQUUsUUFEUztBQUVuQkMsRUFBQUEsUUFBUSxFQUFFO0FBRlMsQ0FBSixDQUFqQjs7ZUFLZSwrQkFDYjtBQUFBLE1BQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLE1BQWFDLFFBQWIsUUFBYUEsUUFBYjtBQUFBLFNBQTZCO0FBQUVELElBQUFBLFFBQVEsRUFBUkEsUUFBRjtBQUFZQyxJQUFBQSxRQUFRLEVBQVJBO0FBQVosR0FBN0I7QUFBQSxDQURhLEVBRWIsaUJBQW9FO0FBQUEsTUFBakVDLFFBQWlFLFNBQWpFQSxRQUFpRTtBQUFBLE1BQXZEQyxRQUF1RCxTQUF2REEsUUFBdUQ7QUFBQSxNQUE3Q0gsUUFBNkMsU0FBN0NBLFFBQTZDO0FBQUEsTUFBbkNDLFFBQW1DLFNBQW5DQSxRQUFtQztBQUFBLE1BQXpCRyxrQkFBeUIsU0FBekJBLGtCQUF5QjtBQUNwRSxNQUFNQyxZQUFZLEdBQUcsb0NBQW9CO0FBQUVDLElBQUFBLE1BQU0sRUFBRTtBQUFWLEdBQXBCLENBQXJCO0FBRUEsU0FDRSw2QkFBQyxtQkFBRDtBQUFVLElBQUEsUUFBUSxFQUFHQyxlQUFNQyxRQUFOLENBQWVDLEtBQWYsQ0FBcUJOLFFBQXJCO0FBQXJCLEtBQ0UsNkJBQUMsa0JBQUQsQ0FBYSxRQUFiLFFBQ0k7QUFBQSxRQUFHTyxjQUFILFNBQUdBLGNBQUg7QUFBQSxXQUNBO0FBQUssTUFBQSxTQUFTLEVBQUcseUJBQVdiLFFBQVEsR0FBRyxFQUF0QixFQUEwQlEsWUFBWSxDQUFDTSxRQUFiLEdBQXdCLEVBQWxEO0FBQWpCLE9BQ0UsNkJBQUMsMEJBQUQ7QUFBbUIsTUFBQSxRQUFRLEVBQUdULFFBQTlCO0FBQXlDLE1BQUEsa0JBQWtCLEVBQUdFO0FBQTlELE9BQ0lELFFBREosQ0FERixFQUlJTyxjQUFjLEtBQUssTUFBbkIsSUFDQSw2QkFBQyxjQUFELENBQU8sUUFBUCxRQUNFLDZCQUFDLGtCQUFEO0FBQ0Usb0JBQWEsd0JBQVMsTUFBVCxFQUFpQlYsUUFBakIsQ0FEZjtBQUVFLE1BQUEsU0FBUyxFQUFHLHlCQUNWQyxRQUFRLENBQUNXLGVBQVQsR0FBMkIsRUFEakIsRUFFVlAsWUFBWSxDQUFDUSxXQUFiLEdBQTJCLEVBRmpCLENBRmQ7QUFNRSxNQUFBLElBQUksRUFBQztBQU5QLE9BUUU7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLFdBUkYsQ0FERixFQVdFLDZCQUFDLGtCQUFEO0FBQ0Usb0JBQWEsd0JBQVMsT0FBVCxFQUFrQmIsUUFBbEIsQ0FEZjtBQUVFLE1BQUEsU0FBUyxFQUFHLHlCQUNWQyxRQUFRLENBQUNXLGVBQVQsR0FBMkIsRUFEakIsRUFFVlAsWUFBWSxDQUFDUyxZQUFiLEdBQTRCLEVBRmxCLENBRmQ7QUFNRSxNQUFBLElBQUksRUFBQztBQU5QLE9BUUU7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLFdBUkYsQ0FYRixDQUxKLENBREE7QUFBQSxHQURKLENBREYsQ0FERjtBQXFDRCxDQTFDYyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9zZXIsIENvbnRleHQgYXMgRmlsbUNvbnRleHQsIGNyZWF0ZUJhc2ljU3R5bGVTZXQsIEZsaXBwZXIgfSBmcm9tICdyZWFjdC1maWxtJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2dsYW1vcic7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnLi4vTG9jYWxpemF0aW9uL0xvY2FsaXplJztcbmltcG9ydCBjb25uZWN0VG9XZWJDaGF0IGZyb20gJy4uL2Nvbm5lY3RUb1dlYkNoYXQnO1xuaW1wb3J0IENhcm91c2VsRmlsbVN0cmlwIGZyb20gJy4vQ2Fyb3VzZWxGaWxtU3RyaXAnO1xuXG5jb25zdCBST09UX0NTUyA9IGNzcyh7XG4gIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0VG9XZWJDaGF0KFxuICAoeyBsYW5ndWFnZSwgc3R5bGVTZXQgfSkgPT4gKHsgbGFuZ3VhZ2UsIHN0eWxlU2V0IH0pXG4pKCh7IGFjdGl2aXR5LCBjaGlsZHJlbiwgbGFuZ3VhZ2UsIHN0eWxlU2V0LCB0aW1lc3RhbXBDbGFzc05hbWUgfSkgPT4ge1xuICBjb25zdCBmaWxtU3R5bGVTZXQgPSBjcmVhdGVCYXNpY1N0eWxlU2V0KHsgY3Vyc29yOiBudWxsIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPENvbXBvc2VyIG51bUl0ZW1zPXsgUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pIH0+XG4gICAgICA8RmlsbUNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHsgKHsgc2Nyb2xsQmFyV2lkdGggfSkgPT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17IGNsYXNzTmFtZXMoUk9PVF9DU1MgKyAnJywgZmlsbVN0eWxlU2V0LmNhcm91c2VsICsgJycpIH0+XG4gICAgICAgICAgICA8Q2Fyb3VzZWxGaWxtU3RyaXAgYWN0aXZpdHk9eyBhY3Rpdml0eSB9IHRpbWVzdGFtcENsYXNzTmFtZT17IHRpbWVzdGFtcENsYXNzTmFtZSB9PlxuICAgICAgICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgICAgICAgIDwvQ2Fyb3VzZWxGaWxtU3RyaXA+XG4gICAgICAgICAgICB7IHNjcm9sbEJhcldpZHRoICE9PSAnMTAwJScgJiZcbiAgICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIDxGbGlwcGVyXG4gICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXsgbG9jYWxpemUoJ0xlZnQnLCBsYW5ndWFnZSkgfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgY2xhc3NOYW1lcyhcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVTZXQuY2Fyb3VzZWxGbGlwcGVyICsgJycsXG4gICAgICAgICAgICAgICAgICAgIGZpbG1TdHlsZVNldC5sZWZ0RmxpcHBlciArICcnXG4gICAgICAgICAgICAgICAgICApIH1cbiAgICAgICAgICAgICAgICAgIG1vZGU9XCJsZWZ0XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvblwiPiZsdDs8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L0ZsaXBwZXI+XG4gICAgICAgICAgICAgICAgPEZsaXBwZXJcbiAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9eyBsb2NhbGl6ZSgnUmlnaHQnLCBsYW5ndWFnZSkgfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgY2xhc3NOYW1lcyhcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVTZXQuY2Fyb3VzZWxGbGlwcGVyICsgJycsXG4gICAgICAgICAgICAgICAgICAgIGZpbG1TdHlsZVNldC5yaWdodEZsaXBwZXIgKyAnJ1xuICAgICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICAgICAgICBtb2RlPVwicmlnaHRcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uXCI+Jmd0OzwvZGl2PlxuICAgICAgICAgICAgICAgIDwvRmxpcHBlcj5cbiAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgPC9GaWxtQ29udGV4dC5Db25zdW1lcj5cbiAgICA8L0NvbXBvc2VyPlxuICApO1xufSlcbiJdfQ==