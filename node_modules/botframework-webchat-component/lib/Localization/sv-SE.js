"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function botSaidSomething(avatarInitials, text, timestamp) {
  return "Bot ".concat(avatarInitials, " sa, ").concat(text, ", ").concat(xMinutesAgo(timestamp));
}

function userSaidSomething(avatarInitials, text, timestamp) {
  return "Anv\xE4ndare ".concat(avatarInitials, " sa, ").concat(text, ", ").concat(xMinutesAgo(timestamp));
}

function xMinutesAgo(dateStr) {
  var date = new Date(dateStr);
  var dateTime = date.getTime();

  if (isNaN(dateTime)) {
    return dateStr;
  }

  var now = Date.now();
  var deltaInMs = now - dateTime;
  var deltaInMinutes = Math.floor(deltaInMs / 60000);
  var deltaInHours = Math.floor(deltaInMs / 3600000);

  if (deltaInMinutes < 1) {
    return 'Alldeles nyss';
  } else if (deltaInMinutes === 1) {
    return 'För en minut sen';
  } else if (deltaInHours < 1) {
    return "".concat(deltaInMinutes, " minuter sedan");
  } else if (deltaInHours === 1) {
    return "En timme sen";
  } else if (deltaInHours < 5) {
    return "".concat(deltaInHours, " timmar sen");
  } else if (deltaInHours <= 24) {
    return "Idag";
  } else if (deltaInHours <= 48) {
    return "Ig\xE5r";
  } else if (window.Intl) {
    return new Intl.DateTimeFormat('sv-SE').format(date);
  } else {
    return date.toLocaleString('sv-SE', {
      day: '2-digit',
      hour: '2-digit',
      hour12: false,
      minute: '2-digit',
      month: '2-digit',
      year: 'numeric'
    });
  }
}

var _default = {
  FAILED_CONNECTION_NOTIFICATION: 'Kunde inte ansluta.',
  // Do not localize {Retry}; it is a placeholder for "Retry". English translation should be, "Send failed. Retry."
  SEND_FAILED_KEY: 'kunde inte skicka, {Retry}.',
  SLOW_CONNECTION_NOTIFICATION: 'Det tar längre än vanligt att ansluta.',
  'Bot said something': botSaidSomething,
  'User said something': userSaidSomething,
  'X minutes ago': xMinutesAgo,
  // '[File of type '%1']': '[File of type '%1']",
  // '[Unknown Card '%1']': '[Unknown Card '%1']',
  'Adaptive Card parse error': 'Adaptive Card parse error',
  'Adaptive Card render error': 'Adaptive Card render error',
  'Chat': 'Chatt',
  'Download file': 'Ladda ned fil',
  'Microphone off': 'Mikrofon av',
  'Microphone on': 'Mikrofon på',
  'Left': 'Vänster',
  'Listening…': 'Lyssnar…',
  'New messages': 'Nya meddelanden',
  'Right': 'Höger',
  'retry': 'försök igen',
  'Retry': '{retry}',
  // Please alter this value if 'Retry' at the beginning of a sentence is written differently than at the end of a sentence.
  'Send': 'Skicka',
  'Sending': 'Skickar',
  'Speak': 'Läs upp',
  'Starting…': 'Startar…',
  'Tax': 'Skatt',
  'Total': 'Totalt',
  'Type your message': 'Skriv ditt meddelande',
  'Upload file': 'Ladd upp fil',
  'VAT': 'Moms'
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Mb2NhbGl6YXRpb24vc3YtU0UuanMiXSwibmFtZXMiOlsiYm90U2FpZFNvbWV0aGluZyIsImF2YXRhckluaXRpYWxzIiwidGV4dCIsInRpbWVzdGFtcCIsInhNaW51dGVzQWdvIiwidXNlclNhaWRTb21ldGhpbmciLCJkYXRlU3RyIiwiZGF0ZSIsIkRhdGUiLCJkYXRlVGltZSIsImdldFRpbWUiLCJpc05hTiIsIm5vdyIsImRlbHRhSW5NcyIsImRlbHRhSW5NaW51dGVzIiwiTWF0aCIsImZsb29yIiwiZGVsdGFJbkhvdXJzIiwid2luZG93IiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwiZm9ybWF0IiwidG9Mb2NhbGVTdHJpbmciLCJkYXkiLCJob3VyIiwiaG91cjEyIiwibWludXRlIiwibW9udGgiLCJ5ZWFyIiwiRkFJTEVEX0NPTk5FQ1RJT05fTk9USUZJQ0FUSU9OIiwiU0VORF9GQUlMRURfS0VZIiwiU0xPV19DT05ORUNUSU9OX05PVElGSUNBVElPTiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLGdCQUFULENBQTBCQyxjQUExQixFQUEwQ0MsSUFBMUMsRUFBZ0RDLFNBQWhELEVBQTJEO0FBQ3ZELHVCQUFjRixjQUFkLGtCQUFvQ0MsSUFBcEMsZUFBNkNFLFdBQVcsQ0FBQ0QsU0FBRCxDQUF4RDtBQUNIOztBQUVELFNBQVNFLGlCQUFULENBQTJCSixjQUEzQixFQUEyQ0MsSUFBM0MsRUFBaURDLFNBQWpELEVBQTREO0FBQ3hELGdDQUFvQkYsY0FBcEIsa0JBQTBDQyxJQUExQyxlQUFtREUsV0FBVyxDQUFDRCxTQUFELENBQTlEO0FBQ0g7O0FBRUQsU0FBU0MsV0FBVCxDQUFxQkUsT0FBckIsRUFBOEI7QUFDMUIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUosQ0FBU0YsT0FBVCxDQUFiO0FBQ0EsTUFBTUcsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsRUFBakI7O0FBRUEsTUFBSUMsS0FBSyxDQUFDRixRQUFELENBQVQsRUFBcUI7QUFDakIsV0FBT0gsT0FBUDtBQUNIOztBQUVELE1BQU1NLEdBQUcsR0FBR0osSUFBSSxDQUFDSSxHQUFMLEVBQVo7QUFDQSxNQUFNQyxTQUFTLEdBQUdELEdBQUcsR0FBR0gsUUFBeEI7QUFDQSxNQUFNSyxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsS0FBdkIsQ0FBdkI7QUFDQSxNQUFNSSxZQUFZLEdBQUdGLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsT0FBdkIsQ0FBckI7O0FBRUEsTUFBSUMsY0FBYyxHQUFHLENBQXJCLEVBQXdCO0FBQ3BCLFdBQU8sZUFBUDtBQUNILEdBRkQsTUFFTyxJQUFJQSxjQUFjLEtBQUssQ0FBdkIsRUFBMEI7QUFDN0IsV0FBTyxrQkFBUDtBQUNILEdBRk0sTUFFQSxJQUFJRyxZQUFZLEdBQUcsQ0FBbkIsRUFBc0I7QUFDekIscUJBQVVILGNBQVY7QUFDSCxHQUZNLE1BRUEsSUFBSUcsWUFBWSxLQUFLLENBQXJCLEVBQXdCO0FBQzNCO0FBQ0gsR0FGTSxNQUVBLElBQUlBLFlBQVksR0FBRyxDQUFuQixFQUFzQjtBQUN6QixxQkFBVUEsWUFBVjtBQUNILEdBRk0sTUFFQSxJQUFJQSxZQUFZLElBQUksRUFBcEIsRUFBd0I7QUFDM0I7QUFDSCxHQUZNLE1BRUEsSUFBSUEsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQzNCO0FBQ0gsR0FGTSxNQUVBLElBQUlDLE1BQU0sQ0FBQ0MsSUFBWCxFQUFpQjtBQUNwQixXQUFPLElBQUlBLElBQUksQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixFQUFpQ0MsTUFBakMsQ0FBd0NkLElBQXhDLENBQVA7QUFDSCxHQUZNLE1BRUE7QUFDSCxXQUFPQSxJQUFJLENBQUNlLGNBQUwsQ0FBb0IsT0FBcEIsRUFBNkI7QUFDaENDLE1BQUFBLEdBQUcsRUFBRSxTQUQyQjtBQUVoQ0MsTUFBQUEsSUFBSSxFQUFFLFNBRjBCO0FBR2hDQyxNQUFBQSxNQUFNLEVBQUUsS0FId0I7QUFJaENDLE1BQUFBLE1BQU0sRUFBRSxTQUp3QjtBQUtoQ0MsTUFBQUEsS0FBSyxFQUFFLFNBTHlCO0FBTWhDQyxNQUFBQSxJQUFJLEVBQUU7QUFOMEIsS0FBN0IsQ0FBUDtBQVFIO0FBQ0o7O2VBRWM7QUFDWkMsRUFBQUEsOEJBQThCLEVBQUUscUJBRHBCO0FBRWI7QUFDQUMsRUFBQUEsZUFBZSxFQUFFLDZCQUhKO0FBSWJDLEVBQUFBLDRCQUE0QixFQUFFLHdDQUpqQjtBQUtiLHdCQUFzQi9CLGdCQUxUO0FBTWIseUJBQXVCSyxpQkFOVjtBQU9iLG1CQUFpQkQsV0FQSjtBQVFiO0FBQ0E7QUFDQSwrQkFBNkIsMkJBVmhCO0FBV2IsZ0NBQThCLDRCQVhqQjtBQVliLFVBQVEsT0FaSztBQWFiLG1CQUFpQixlQWJKO0FBY2Isb0JBQWtCLGFBZEw7QUFlYixtQkFBaUIsYUFmSjtBQWdCYixVQUFRLFNBaEJLO0FBaUJiLGdCQUFjLFVBakJEO0FBa0JiLGtCQUFnQixpQkFsQkg7QUFtQmIsV0FBUyxPQW5CSTtBQW9CYixXQUFTLGFBcEJJO0FBcUJiLFdBQVMsU0FyQkk7QUFxQk87QUFDcEIsVUFBUSxRQXRCSztBQXVCYixhQUFXLFNBdkJFO0FBd0JaLFdBQVMsU0F4Qkc7QUF5QmIsZUFBYSxVQXpCQTtBQTBCYixTQUFPLE9BMUJNO0FBMkJiLFdBQVMsUUEzQkk7QUE0QmIsdUJBQXFCLHVCQTVCUjtBQTZCYixpQkFBZSxjQTdCRjtBQThCYixTQUFPO0FBOUJNLEMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBib3RTYWlkU29tZXRoaW5nKGF2YXRhckluaXRpYWxzLCB0ZXh0LCB0aW1lc3RhbXApIHtcbiAgICByZXR1cm4gYEJvdCAke2F2YXRhckluaXRpYWxzfSBzYSwgJHt0ZXh0fSwgJHt4TWludXRlc0Fnbyh0aW1lc3RhbXApfWA7XG59XG5cbmZ1bmN0aW9uIHVzZXJTYWlkU29tZXRoaW5nKGF2YXRhckluaXRpYWxzLCB0ZXh0LCB0aW1lc3RhbXApIHtcbiAgICByZXR1cm4gYEFudsOkbmRhcmUgJHthdmF0YXJJbml0aWFsc30gc2EsICR7dGV4dH0sICR7eE1pbnV0ZXNBZ28odGltZXN0YW1wKX1gO1xufVxuXG5mdW5jdGlvbiB4TWludXRlc0FnbyhkYXRlU3RyKSB7XG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHIpO1xuICAgIGNvbnN0IGRhdGVUaW1lID0gZGF0ZS5nZXRUaW1lKCk7XG5cbiAgICBpZiAoaXNOYU4oZGF0ZVRpbWUpKSB7XG4gICAgICAgIHJldHVybiBkYXRlU3RyO1xuICAgIH1cblxuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgY29uc3QgZGVsdGFJbk1zID0gbm93IC0gZGF0ZVRpbWU7XG4gICAgY29uc3QgZGVsdGFJbk1pbnV0ZXMgPSBNYXRoLmZsb29yKGRlbHRhSW5NcyAvIDYwMDAwKTtcbiAgICBjb25zdCBkZWx0YUluSG91cnMgPSBNYXRoLmZsb29yKGRlbHRhSW5NcyAvIDM2MDAwMDApO1xuXG4gICAgaWYgKGRlbHRhSW5NaW51dGVzIDwgMSkge1xuICAgICAgICByZXR1cm4gJ0FsbGRlbGVzIG55c3MnO1xuICAgIH0gZWxzZSBpZiAoZGVsdGFJbk1pbnV0ZXMgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuICdGw7ZyIGVuIG1pbnV0IHNlbic7XG4gICAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPCAxKSB7XG4gICAgICAgIHJldHVybiBgJHtkZWx0YUluTWludXRlc30gbWludXRlciBzZWRhbmA7XG4gICAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGBFbiB0aW1tZSBzZW5gO1xuICAgIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDwgNSkge1xuICAgICAgICByZXR1cm4gYCR7ZGVsdGFJbkhvdXJzfSB0aW1tYXIgc2VuYDtcbiAgICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8PSAyNCkge1xuICAgICAgICByZXR1cm4gYElkYWdgO1xuICAgIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDQ4KSB7XG4gICAgICAgIHJldHVybiBgSWfDpXJgO1xuICAgIH0gZWxzZSBpZiAod2luZG93LkludGwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KCdzdi1TRScpLmZvcm1hdChkYXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZygnc3YtU0UnLCB7XG4gICAgICAgICAgICBkYXk6ICcyLWRpZ2l0JyxcbiAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JyxcbiAgICAgICAgICAgIGhvdXIxMjogZmFsc2UsXG4gICAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JyxcbiAgICAgICAgICAgIG1vbnRoOiAnMi1kaWdpdCcsXG4gICAgICAgICAgICB5ZWFyOiAnbnVtZXJpYydcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICBGQUlMRURfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdLdW5kZSBpbnRlIGFuc2x1dGEuJyxcbiAgLy8gRG8gbm90IGxvY2FsaXplIHtSZXRyeX07IGl0IGlzIGEgcGxhY2Vob2xkZXIgZm9yIFwiUmV0cnlcIi4gRW5nbGlzaCB0cmFuc2xhdGlvbiBzaG91bGQgYmUsIFwiU2VuZCBmYWlsZWQuIFJldHJ5LlwiXG4gIFNFTkRfRkFJTEVEX0tFWTogJ2t1bmRlIGludGUgc2tpY2thLCB7UmV0cnl9LicsXG4gIFNMT1dfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdEZXQgdGFyIGzDpG5ncmUgw6RuIHZhbmxpZ3QgYXR0IGFuc2x1dGEuJyxcbiAgJ0JvdCBzYWlkIHNvbWV0aGluZyc6IGJvdFNhaWRTb21ldGhpbmcsXG4gICdVc2VyIHNhaWQgc29tZXRoaW5nJzogdXNlclNhaWRTb21ldGhpbmcsXG4gICdYIG1pbnV0ZXMgYWdvJzogeE1pbnV0ZXNBZ28sXG4gIC8vICdbRmlsZSBvZiB0eXBlICclMSddJzogJ1tGaWxlIG9mIHR5cGUgJyUxJ11cIixcbiAgLy8gJ1tVbmtub3duIENhcmQgJyUxJ10nOiAnW1Vua25vd24gQ2FyZCAnJTEnXScsXG4gICdBZGFwdGl2ZSBDYXJkIHBhcnNlIGVycm9yJzogJ0FkYXB0aXZlIENhcmQgcGFyc2UgZXJyb3InLFxuICAnQWRhcHRpdmUgQ2FyZCByZW5kZXIgZXJyb3InOiAnQWRhcHRpdmUgQ2FyZCByZW5kZXIgZXJyb3InLFxuICAnQ2hhdCc6ICdDaGF0dCcsXG4gICdEb3dubG9hZCBmaWxlJzogJ0xhZGRhIG5lZCBmaWwnLFxuICAnTWljcm9waG9uZSBvZmYnOiAnTWlrcm9mb24gYXYnLFxuICAnTWljcm9waG9uZSBvbic6ICdNaWtyb2ZvbiBww6UnLFxuICAnTGVmdCc6ICdWw6Ruc3RlcicsXG4gICdMaXN0ZW5pbmfigKYnOiAnTHlzc25hcuKApicsXG4gICdOZXcgbWVzc2FnZXMnOiAnTnlhIG1lZGRlbGFuZGVuJyxcbiAgJ1JpZ2h0JzogJ0jDtmdlcicsXG4gICdyZXRyeSc6ICdmw7Zyc8O2ayBpZ2VuJyxcbiAgJ1JldHJ5JzogJ3tyZXRyeX0nLCAvLyBQbGVhc2UgYWx0ZXIgdGhpcyB2YWx1ZSBpZiAnUmV0cnknIGF0IHRoZSBiZWdpbm5pbmcgb2YgYSBzZW50ZW5jZSBpcyB3cml0dGVuIGRpZmZlcmVudGx5IHRoYW4gYXQgdGhlIGVuZCBvZiBhIHNlbnRlbmNlLlxuICAnU2VuZCc6ICdTa2lja2EnLFxuICAnU2VuZGluZyc6ICdTa2lja2FyJyxcbiAgICdTcGVhayc6ICdMw6RzIHVwcCcsXG4gICdTdGFydGluZ+KApic6ICdTdGFydGFy4oCmJyxcbiAgJ1RheCc6ICdTa2F0dCcsXG4gICdUb3RhbCc6ICdUb3RhbHQnLFxuICAnVHlwZSB5b3VyIG1lc3NhZ2UnOiAnU2tyaXYgZGl0dCBtZWRkZWxhbmRlJyxcbiAgJ1VwbG9hZCBmaWxlJzogJ0xhZGQgdXBwIGZpbCcsXG4gICdWQVQnOiAnTW9tcydcbn07XG5cbiJdfQ==