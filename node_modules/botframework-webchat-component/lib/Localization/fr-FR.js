"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function xMinutesAgo(dateStr) {
  var date = new Date(dateStr);
  var dateTime = date.getTime();

  if (isNaN(dateTime)) {
    return dateStr;
  }

  var now = Date.now();
  var deltaInMs = now - dateTime;
  var deltaInMinutes = Math.floor(deltaInMs / 60000);
  var deltaInHours = Math.floor(deltaInMs / 3600000);

  if (deltaInMinutes < 1) {
    return "À l'instant";
  } else if (deltaInMinutes === 1) {
    return 'Il y a une minute';
  } else if (deltaInHours < 1) {
    return "Il y a ".concat(deltaInMinutes, " minutes");
  } else if (deltaInHours === 1) {
    return "Il y a une heure";
  } else if (deltaInHours < 5) {
    return "Il y a ".concat(deltaInHours, " heures");
  } else if (deltaInHours <= 24) {
    return "Aujourd'hui";
  } else if (deltaInHours <= 48) {
    return "Hier";
  } else if (window.Intl) {
    return new Intl.DateTimeFormat('fr-FR').format(date);
  } else {
    return date.toLocaleString('fr-FR', {
      day: '2-digit',
      hour: '2-digit',
      hour12: false,
      minute: '2-digit',
      month: '2-digit',
      year: 'numeric'
    });
  }
}

var _default = {
  // FAILED_CONNECTION_NOTIFICATION: '',
  // Do not localize {Retry}; it is a placeholder for "Retry". English translation should be, "Send failed. Retry."
  SEND_FAILED_KEY: 'Échec d\'envoi, {Retry}.',
  // SLOW_CONNECTION_NOTIFICATION: '',
  'Chat': 'Discuter',
  // 'Download file': '',
  // 'Microphone off': '',
  // 'Microphone on': '',
  'Left': 'Gauche',
  'Listening…': 'Écoute…',
  'New messages': 'Nouveaux messages',
  'retry': 'Réessayer',
  'Right': 'Droite',
  'Retry': '{retry}',
  // Please alter this value if 'Retry' at the beginning of a sentence is written differently than at the end of a sentence.
  'Send': 'Envoyer',
  'Sending': 'Envoi…',
  'Speak': 'Parlez',
  'Starting…': 'Démarrage…',
  'Tax': 'Taxe',
  'Total': 'Total',
  'Type your message': 'Saisissez votre message',
  'Upload file': 'Envoyer fichier',
  'VAT': 'TVA',
  'X minutes ago': xMinutesAgo
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Mb2NhbGl6YXRpb24vZnItRlIuanMiXSwibmFtZXMiOlsieE1pbnV0ZXNBZ28iLCJkYXRlU3RyIiwiZGF0ZSIsIkRhdGUiLCJkYXRlVGltZSIsImdldFRpbWUiLCJpc05hTiIsIm5vdyIsImRlbHRhSW5NcyIsImRlbHRhSW5NaW51dGVzIiwiTWF0aCIsImZsb29yIiwiZGVsdGFJbkhvdXJzIiwid2luZG93IiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwiZm9ybWF0IiwidG9Mb2NhbGVTdHJpbmciLCJkYXkiLCJob3VyIiwiaG91cjEyIiwibWludXRlIiwibW9udGgiLCJ5ZWFyIiwiU0VORF9GQUlMRURfS0VZIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsU0FBU0EsV0FBVCxDQUFxQkMsT0FBckIsRUFBOEI7QUFDNUIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUosQ0FBU0YsT0FBVCxDQUFiO0FBQ0EsTUFBTUcsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsRUFBakI7O0FBRUEsTUFBSUMsS0FBSyxDQUFDRixRQUFELENBQVQsRUFBcUI7QUFDbkIsV0FBT0gsT0FBUDtBQUNEOztBQUVELE1BQU1NLEdBQUcsR0FBR0osSUFBSSxDQUFDSSxHQUFMLEVBQVo7QUFDQSxNQUFNQyxTQUFTLEdBQUdELEdBQUcsR0FBR0gsUUFBeEI7QUFDQSxNQUFNSyxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsS0FBdkIsQ0FBdkI7QUFDQSxNQUFNSSxZQUFZLEdBQUdGLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxTQUFTLEdBQUcsT0FBdkIsQ0FBckI7O0FBRUEsTUFBSUMsY0FBYyxHQUFHLENBQXJCLEVBQXdCO0FBQ3RCLFdBQU8sYUFBUDtBQUNELEdBRkQsTUFFTyxJQUFJQSxjQUFjLEtBQUssQ0FBdkIsRUFBMEI7QUFDL0IsV0FBTyxtQkFBUDtBQUNELEdBRk0sTUFFQSxJQUFJRyxZQUFZLEdBQUcsQ0FBbkIsRUFBc0I7QUFDM0IsNEJBQWtCSCxjQUFsQjtBQUNELEdBRk0sTUFFQSxJQUFJRyxZQUFZLEtBQUssQ0FBckIsRUFBd0I7QUFDN0I7QUFDRCxHQUZNLE1BRUEsSUFBSUEsWUFBWSxHQUFHLENBQW5CLEVBQXNCO0FBQzNCLDRCQUFrQkEsWUFBbEI7QUFDRCxHQUZNLE1BRUEsSUFBSUEsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQzdCO0FBQ0QsR0FGTSxNQUVBLElBQUlBLFlBQVksSUFBSSxFQUFwQixFQUF3QjtBQUM3QjtBQUNELEdBRk0sTUFFQSxJQUFJQyxNQUFNLENBQUNDLElBQVgsRUFBaUI7QUFDdEIsV0FBTyxJQUFJQSxJQUFJLENBQUNDLGNBQVQsQ0FBd0IsT0FBeEIsRUFBaUNDLE1BQWpDLENBQXdDZCxJQUF4QyxDQUFQO0FBQ0QsR0FGTSxNQUVBO0FBQ0wsV0FBT0EsSUFBSSxDQUFDZSxjQUFMLENBQW9CLE9BQXBCLEVBQTZCO0FBQ2xDQyxNQUFBQSxHQUFHLEVBQUUsU0FENkI7QUFFbENDLE1BQUFBLElBQUksRUFBRSxTQUY0QjtBQUdsQ0MsTUFBQUEsTUFBTSxFQUFFLEtBSDBCO0FBSWxDQyxNQUFBQSxNQUFNLEVBQUUsU0FKMEI7QUFLbENDLE1BQUFBLEtBQUssRUFBRSxTQUwyQjtBQU1sQ0MsTUFBQUEsSUFBSSxFQUFFO0FBTjRCLEtBQTdCLENBQVA7QUFRRDtBQUNGOztlQUVjO0FBQ2I7QUFDQTtBQUNBQyxFQUFBQSxlQUFlLEVBQUUsMEJBSEo7QUFJYjtBQUNBLFVBQVEsVUFMSztBQU1iO0FBQ0E7QUFDQTtBQUNBLFVBQVEsUUFUSztBQVViLGdCQUFjLFNBVkQ7QUFXYixrQkFBZ0IsbUJBWEg7QUFZYixXQUFTLFdBWkk7QUFhYixXQUFTLFFBYkk7QUFjYixXQUFTLFNBZEk7QUFjTztBQUNwQixVQUFRLFNBZks7QUFnQmIsYUFBVyxRQWhCRTtBQWlCYixXQUFTLFFBakJJO0FBa0JiLGVBQWEsWUFsQkE7QUFtQmIsU0FBTyxNQW5CTTtBQW9CYixXQUFTLE9BcEJJO0FBcUJiLHVCQUFxQix5QkFyQlI7QUFzQmIsaUJBQWUsaUJBdEJGO0FBdUJiLFNBQU8sS0F2Qk07QUF3QmIsbUJBQWlCeEI7QUF4QkosQyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHhNaW51dGVzQWdvKGRhdGVTdHIpIHtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHIpO1xuICBjb25zdCBkYXRlVGltZSA9IGRhdGUuZ2V0VGltZSgpO1xuXG4gIGlmIChpc05hTihkYXRlVGltZSkpIHtcbiAgICByZXR1cm4gZGF0ZVN0cjtcbiAgfVxuXG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIGNvbnN0IGRlbHRhSW5NcyA9IG5vdyAtIGRhdGVUaW1lO1xuICBjb25zdCBkZWx0YUluTWludXRlcyA9IE1hdGguZmxvb3IoZGVsdGFJbk1zIC8gNjAwMDApO1xuICBjb25zdCBkZWx0YUluSG91cnMgPSBNYXRoLmZsb29yKGRlbHRhSW5NcyAvIDM2MDAwMDApO1xuXG4gIGlmIChkZWx0YUluTWludXRlcyA8IDEpIHtcbiAgICByZXR1cm4gXCLDgCBsJ2luc3RhbnRcIjtcbiAgfSBlbHNlIGlmIChkZWx0YUluTWludXRlcyA9PT0gMSkge1xuICAgIHJldHVybiAnSWwgeSBhIHVuZSBtaW51dGUnO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8IDEpIHtcbiAgICByZXR1cm4gYElsIHkgYSAkeyBkZWx0YUluTWludXRlcyB9IG1pbnV0ZXNgO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA9PT0gMSkge1xuICAgIHJldHVybiBgSWwgeSBhIHVuZSBoZXVyZWA7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDwgNSkge1xuICAgIHJldHVybiBgSWwgeSBhICR7IGRlbHRhSW5Ib3VycyB9IGhldXJlc2A7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDI0KSB7XG4gICAgcmV0dXJuIGBBdWpvdXJkJ2h1aWA7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDQ4KSB7XG4gICAgcmV0dXJuIGBIaWVyYDtcbiAgfSBlbHNlIGlmICh3aW5kb3cuSW50bCkge1xuICAgIHJldHVybiBuZXcgSW50bC5EYXRlVGltZUZvcm1hdCgnZnItRlInKS5mb3JtYXQoZGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVTdHJpbmcoJ2ZyLUZSJywge1xuICAgICAgZGF5OiAnMi1kaWdpdCcsXG4gICAgICBob3VyOiAnMi1kaWdpdCcsXG4gICAgICBob3VyMTI6IGZhbHNlLFxuICAgICAgbWludXRlOiAnMi1kaWdpdCcsXG4gICAgICBtb250aDogJzItZGlnaXQnLFxuICAgICAgeWVhcjogJ251bWVyaWMnLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gRkFJTEVEX0NPTk5FQ1RJT05fTk9USUZJQ0FUSU9OOiAnJyxcbiAgLy8gRG8gbm90IGxvY2FsaXplIHtSZXRyeX07IGl0IGlzIGEgcGxhY2Vob2xkZXIgZm9yIFwiUmV0cnlcIi4gRW5nbGlzaCB0cmFuc2xhdGlvbiBzaG91bGQgYmUsIFwiU2VuZCBmYWlsZWQuIFJldHJ5LlwiXG4gIFNFTkRfRkFJTEVEX0tFWTogJ8OJY2hlYyBkXFwnZW52b2ksIHtSZXRyeX0uJyxcbiAgLy8gU0xPV19DT05ORUNUSU9OX05PVElGSUNBVElPTjogJycsXG4gICdDaGF0JzogJ0Rpc2N1dGVyJyxcbiAgLy8gJ0Rvd25sb2FkIGZpbGUnOiAnJyxcbiAgLy8gJ01pY3JvcGhvbmUgb2ZmJzogJycsXG4gIC8vICdNaWNyb3Bob25lIG9uJzogJycsXG4gICdMZWZ0JzogJ0dhdWNoZScsXG4gICdMaXN0ZW5pbmfigKYnOiAnw4ljb3V0ZeKApicsXG4gICdOZXcgbWVzc2FnZXMnOiAnTm91dmVhdXggbWVzc2FnZXMnLFxuICAncmV0cnknOiAnUsOpZXNzYXllcicsXG4gICdSaWdodCc6ICdEcm9pdGUnLFxuICAnUmV0cnknOiAne3JldHJ5fScsIC8vIFBsZWFzZSBhbHRlciB0aGlzIHZhbHVlIGlmICdSZXRyeScgYXQgdGhlIGJlZ2lubmluZyBvZiBhIHNlbnRlbmNlIGlzIHdyaXR0ZW4gZGlmZmVyZW50bHkgdGhhbiBhdCB0aGUgZW5kIG9mIGEgc2VudGVuY2UuXG4gICdTZW5kJzogJ0Vudm95ZXInLFxuICAnU2VuZGluZyc6ICdFbnZvaeKApicsXG4gICdTcGVhayc6ICdQYXJsZXonLFxuICAnU3RhcnRpbmfigKYnOiAnRMOpbWFycmFnZeKApicsXG4gICdUYXgnOiAnVGF4ZScsXG4gICdUb3RhbCc6ICdUb3RhbCcsXG4gICdUeXBlIHlvdXIgbWVzc2FnZSc6ICdTYWlzaXNzZXogdm90cmUgbWVzc2FnZScsXG4gICdVcGxvYWQgZmlsZSc6ICdFbnZveWVyIGZpY2hpZXInLFxuICAnVkFUJzogJ1RWQScsXG4gICdYIG1pbnV0ZXMgYWdvJzogeE1pbnV0ZXNBZ29cbn1cbiJdfQ==