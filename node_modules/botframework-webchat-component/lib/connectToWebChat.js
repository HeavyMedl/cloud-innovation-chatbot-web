"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _reactRedux = require("react-redux");

var _react = _interopRequireDefault(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function combineSelectors() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return selectors.reduce(function (result, selector) {
      return _objectSpread({}, result, removeUndefinedValues(selector && selector.apply(void 0, args) || {}));
    }, {});
  };
}

function removeUndefinedValues(map) {
  return Object.keys(map).reduce(function (result, key) {
    var value = map[key];

    if (typeof value !== 'undefined') {
      result[key] = value;
    }

    return result;
  }, {});
}

function _default() {
  var combinedSelector = combineSelectors.apply(void 0, arguments);
  return function (Component) {
    var ConnectedComponent = (0, _reactRedux.connect)(function (state, _ref) {
      var context = _ref.context,
          store = _ref.store,
          ownProps = _objectWithoutProperties(_ref, ["context", "store"]);

      return combinedSelector(_objectSpread({}, state, context), ownProps);
    })(Component);
    return function (props) {
      return _react.default.createElement(_Context.default.Consumer, null, function (context) {
        return _react.default.createElement(ConnectedComponent, _extends({}, props, {
          context: context,
          store: context.store
        }));
      });
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25uZWN0VG9XZWJDaGF0LmpzIl0sIm5hbWVzIjpbImNvbWJpbmVTZWxlY3RvcnMiLCJzZWxlY3RvcnMiLCJhcmdzIiwicmVkdWNlIiwicmVzdWx0Iiwic2VsZWN0b3IiLCJyZW1vdmVVbmRlZmluZWRWYWx1ZXMiLCJtYXAiLCJPYmplY3QiLCJrZXlzIiwia2V5IiwidmFsdWUiLCJjb21iaW5lZFNlbGVjdG9yIiwiQ29tcG9uZW50IiwiQ29ubmVjdGVkQ29tcG9uZW50Iiwic3RhdGUiLCJjb250ZXh0Iiwic3RvcmUiLCJvd25Qcm9wcyIsInByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsZ0JBQVQsR0FBd0M7QUFBQSxvQ0FBWEMsU0FBVztBQUFYQSxJQUFBQSxTQUFXO0FBQUE7O0FBQ3RDLFNBQU87QUFBQSx1Q0FBSUMsSUFBSjtBQUFJQSxNQUFBQSxJQUFKO0FBQUE7O0FBQUEsV0FBYUQsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFVBQUNDLE1BQUQsRUFBU0MsUUFBVDtBQUFBLCtCQUNoQ0QsTUFEZ0MsRUFFaENFLHFCQUFxQixDQUFFRCxRQUFRLElBQUlBLFFBQVEsTUFBUixTQUFZSCxJQUFaLENBQWIsSUFBbUMsRUFBcEMsQ0FGVztBQUFBLEtBQWpCLEVBR2hCLEVBSGdCLENBQWI7QUFBQSxHQUFQO0FBSUQ7O0FBRUQsU0FBU0kscUJBQVQsQ0FBK0JDLEdBQS9CLEVBQW9DO0FBQ2xDLFNBQU9DLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixHQUFaLEVBQWlCSixNQUFqQixDQUF3QixVQUFDQyxNQUFELEVBQVNNLEdBQVQsRUFBaUI7QUFDOUMsUUFBTUMsS0FBSyxHQUFHSixHQUFHLENBQUNHLEdBQUQsQ0FBakI7O0FBRUEsUUFBSSxPQUFPQyxLQUFQLEtBQWlCLFdBQXJCLEVBQWtDO0FBQ2hDUCxNQUFBQSxNQUFNLENBQUNNLEdBQUQsQ0FBTixHQUFjQyxLQUFkO0FBQ0Q7O0FBRUQsV0FBT1AsTUFBUDtBQUNELEdBUk0sRUFRSixFQVJJLENBQVA7QUFTRDs7QUFFYyxvQkFBd0I7QUFDckMsTUFBTVEsZ0JBQWdCLEdBQUdaLGdCQUFnQixNQUFoQixtQkFBekI7QUFFQSxTQUFPLFVBQUFhLFNBQVMsRUFBSTtBQUNsQixRQUFNQyxrQkFBa0IsR0FBRyx5QkFDekIsVUFBQ0MsS0FBRDtBQUFBLFVBQVVDLE9BQVYsUUFBVUEsT0FBVjtBQUFBLFVBQW1CQyxLQUFuQixRQUFtQkEsS0FBbkI7QUFBQSxVQUE2QkMsUUFBN0I7O0FBQUEsYUFBNENOLGdCQUFnQixtQkFBTUcsS0FBTixFQUFnQkMsT0FBaEIsR0FBMkJFLFFBQTNCLENBQTVEO0FBQUEsS0FEeUIsRUFFekJMLFNBRnlCLENBQTNCO0FBSUEsV0FBTyxVQUFBTSxLQUFLO0FBQUEsYUFDViw2QkFBQyxnQkFBRCxDQUFTLFFBQVQsUUFFSSxVQUFBSCxPQUFPO0FBQUEsZUFBSSw2QkFBQyxrQkFBRCxlQUF5QkcsS0FBekI7QUFBaUMsVUFBQSxPQUFPLEVBQUdILE9BQTNDO0FBQXFELFVBQUEsS0FBSyxFQUFHQSxPQUFPLENBQUNDO0FBQXJFLFdBQUo7QUFBQSxPQUZYLENBRFU7QUFBQSxLQUFaO0FBT0QsR0FaRDtBQWFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDb250ZXh0IGZyb20gJy4vQ29udGV4dCc7XG5cbmZ1bmN0aW9uIGNvbWJpbmVTZWxlY3RvcnMoLi4uc2VsZWN0b3JzKSB7XG4gIHJldHVybiAoLi4uYXJncykgPT4gc2VsZWN0b3JzLnJlZHVjZSgocmVzdWx0LCBzZWxlY3RvcikgPT4gKHtcbiAgICAuLi5yZXN1bHQsXG4gICAgLi4ucmVtb3ZlVW5kZWZpbmVkVmFsdWVzKChzZWxlY3RvciAmJiBzZWxlY3RvciguLi5hcmdzKSkgfHwge30pXG4gIH0pLCB7fSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVVuZGVmaW5lZFZhbHVlcyhtYXApIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcCkucmVkdWNlKChyZXN1bHQsIGtleSkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gbWFwW2tleV07XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LCB7fSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICguLi5zZWxlY3RvcnMpIHtcbiAgY29uc3QgY29tYmluZWRTZWxlY3RvciA9IGNvbWJpbmVTZWxlY3RvcnMoLi4uc2VsZWN0b3JzKTtcblxuICByZXR1cm4gQ29tcG9uZW50ID0+IHtcbiAgICBjb25zdCBDb25uZWN0ZWRDb21wb25lbnQgPSBjb25uZWN0KFxuICAgICAgKHN0YXRlLCB7IGNvbnRleHQsIHN0b3JlLCAuLi5vd25Qcm9wcyB9KSA9PiBjb21iaW5lZFNlbGVjdG9yKHsgLi4uc3RhdGUsIC4uLmNvbnRleHQgfSwgb3duUHJvcHMpXG4gICAgKShDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIHByb3BzID0+IChcbiAgICAgIDxDb250ZXh0LkNvbnN1bWVyPlxuICAgICAgICB7XG4gICAgICAgICAgY29udGV4dCA9PiA8Q29ubmVjdGVkQ29tcG9uZW50IHsgLi4ucHJvcHMgfSBjb250ZXh0PXsgY29udGV4dCB9IHN0b3JlPXsgY29udGV4dC5zdG9yZSB9IC8+XG4gICAgICAgIH1cbiAgICAgIDwvQ29udGV4dC5Db25zdW1lcj5cbiAgICApO1xuICB9O1xufVxuIl19