"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactDictateButton = require("react-dictate-button");

var _react = _interopRequireDefault(require("react"));

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _connectToWebChat = _interopRequireDefault(require("./connectToWebChat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,
    DICTATING = _Constants$DictateSta.DICTATING,
    IDLE = _Constants$DictateSta.IDLE,
    STARTING = _Constants$DictateSta.STARTING;

var Dictation =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Dictation, _React$Component);

  function Dictation(props) {
    var _this;

    _classCallCheck(this, Dictation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dictation).call(this, props));
    _this.handleDictate = _this.handleDictate.bind(_assertThisInitialized(_this));
    _this.handleDictating = _this.handleDictating.bind(_assertThisInitialized(_this));
    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Dictation, [{
    key: "handleDictate",
    value: function handleDictate(_ref) {
      var _ref$result = _ref.result;
      _ref$result = _ref$result === void 0 ? {} : _ref$result;
      var transcript = _ref$result.transcript;
      var props = this.props;
      props.setDictateInterims([]);
      props.setDictateState(IDLE);
      props.stopDictate();

      if (transcript) {
        props.setSendBox(transcript);
        props.submitSendBox('speech');
        props.startSpeakingActivity();
      }
    }
  }, {
    key: "handleDictating",
    value: function handleDictating(_ref2) {
      var _ref2$results = _ref2.results,
          results = _ref2$results === void 0 ? [] : _ref2$results;
      var props = this.props;
      var interims = results.map(function (_ref3) {
        var transcript = _ref3.transcript;
        return transcript;
      });
      props.setDictateInterims(interims);
      props.setDictateState(DICTATING); // This is for two purposes:
      // 1. Set send box will also trigger send typing
      // 2. If the user cancelled out, the interim result will be in the send box so the user can update it before send

      props.setSendBox(interims.join(' '));
    }
  }, {
    key: "handleError",
    value: function handleError(event) {
      var props = this.props;
      props.setDictateState(IDLE);
      props.stopDictate();
      props.onError && props.onError(event);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          dictateState = _this$props.dictateState,
          disabled = _this$props.disabled,
          language = _this$props.language,
          webSpeechPonyfill = _this$props.webSpeechPonyfill,
          handleDictate = this.handleDictate,
          handleDictating = this.handleDictating,
          handleError = this.handleError;

      var _ref4 = webSpeechPonyfill || {},
          SpeechGrammarList = _ref4.SpeechGrammarList,
          SpeechRecognition = _ref4.SpeechRecognition;

      return _react.default.createElement(_reactDictateButton.Composer, {
        lang: language,
        onDictate: handleDictate,
        onError: handleError,
        onProgress: handleDictating,
        speechRecognition: SpeechRecognition,
        speechGrammarList: SpeechGrammarList,
        started: !disabled && (dictateState === STARTING || dictateState === DICTATING)
      });
    }
  }]);

  return Dictation;
}(_react.default.Component);

var _default = (0, _connectToWebChat.default)(function (_ref5) {
  var dictateState = _ref5.dictateState,
      disabled = _ref5.disabled,
      language = _ref5.language,
      setDictateInterims = _ref5.setDictateInterims,
      setDictateState = _ref5.setDictateState,
      setSendBox = _ref5.setSendBox,
      startSpeakingActivity = _ref5.startSpeakingActivity,
      stopDictate = _ref5.stopDictate,
      submitSendBox = _ref5.submitSendBox,
      webSpeechPonyfill = _ref5.webSpeechPonyfill;
  return {
    dictateState: dictateState,
    disabled: disabled,
    language: language,
    setDictateInterims: setDictateInterims,
    setDictateState: setDictateState,
    setSendBox: setSendBox,
    startSpeakingActivity: startSpeakingActivity,
    stopDictate: stopDictate,
    submitSendBox: submitSendBox,
    webSpeechPonyfill: webSpeechPonyfill
  };
})(Dictation);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EaWN0YXRpb24uanMiXSwibmFtZXMiOlsiQ29uc3RhbnRzIiwiRGljdGF0ZVN0YXRlIiwiRElDVEFUSU5HIiwiSURMRSIsIlNUQVJUSU5HIiwiRGljdGF0aW9uIiwicHJvcHMiLCJoYW5kbGVEaWN0YXRlIiwiYmluZCIsImhhbmRsZURpY3RhdGluZyIsImhhbmRsZUVycm9yIiwicmVzdWx0IiwidHJhbnNjcmlwdCIsInNldERpY3RhdGVJbnRlcmltcyIsInNldERpY3RhdGVTdGF0ZSIsInN0b3BEaWN0YXRlIiwic2V0U2VuZEJveCIsInN1Ym1pdFNlbmRCb3giLCJzdGFydFNwZWFraW5nQWN0aXZpdHkiLCJyZXN1bHRzIiwiaW50ZXJpbXMiLCJtYXAiLCJqb2luIiwiZXZlbnQiLCJvbkVycm9yIiwiZGljdGF0ZVN0YXRlIiwiZGlzYWJsZWQiLCJsYW5ndWFnZSIsIndlYlNwZWVjaFBvbnlmaWxsIiwiU3BlZWNoR3JhbW1hckxpc3QiLCJTcGVlY2hSZWNvZ25pdGlvbiIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NEJBUUlBLGtDLENBTEZDLFk7SUFDRUMsUyx5QkFBQUEsUztJQUNBQyxJLHlCQUFBQSxJO0lBQ0FDLFEseUJBQUFBLFE7O0lBSUVDLFM7Ozs7O0FBQ0oscUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFDakIsbUZBQU1BLEtBQU47QUFFQSxVQUFLQyxhQUFMLEdBQXFCLE1BQUtBLGFBQUwsQ0FBbUJDLElBQW5CLCtCQUFyQjtBQUNBLFVBQUtDLGVBQUwsR0FBdUIsTUFBS0EsZUFBTCxDQUFxQkQsSUFBckIsK0JBQXZCO0FBQ0EsVUFBS0UsV0FBTCxHQUFtQixNQUFLQSxXQUFMLENBQWlCRixJQUFqQiwrQkFBbkI7QUFMaUI7QUFNbEI7Ozs7d0NBRThDO0FBQUEsNkJBQS9CRyxNQUErQjtBQUFBLDZDQUFOLEVBQU07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O0FBQUEsTUFTRUUsYUFURixTQVNFQSxhQVRGO0FBQUEsTUFVRVcsaUJBVkYsU0FVRUEsaUJBVkY7QUFBQSxTQVdPO0FBQ0xILElBQUFBLFlBQVksRUFBWkEsWUFESztBQUVMQyxJQUFBQSxRQUFRLEVBQVJBLFFBRks7QUFHTEMsSUFBQUEsUUFBUSxFQUFSQSxRQUhLO0FBSUxkLElBQUFBLGtCQUFrQixFQUFsQkEsa0JBSks7QUFLTEMsSUFBQUEsZUFBZSxFQUFmQSxlQUxLO0FBTUxFLElBQUFBLFVBQVUsRUFBVkEsVUFOSztBQU9MRSxJQUFBQSxxQkFBcUIsRUFBckJBLHFCQVBLO0FBUUxILElBQUFBLFdBQVcsRUFBWEEsV0FSSztBQVNMRSxJQUFBQSxhQUFhLEVBQWJBLGFBVEs7QUFVTFcsSUFBQUEsaUJBQWlCLEVBQWpCQTtBQVZLLEdBWFA7QUFBQSxDQURhLEVBd0JidkIsU0F4QmEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvc2VyIGFzIERpY3RhdGVDb21wb3NlciB9IGZyb20gJ3JlYWN0LWRpY3RhdGUtYnV0dG9uJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuaW1wb3J0IGNvbm5lY3RUb1dlYkNoYXQgZnJvbSAnLi9jb25uZWN0VG9XZWJDaGF0JztcblxuY29uc3Qge1xuICBEaWN0YXRlU3RhdGU6IHtcbiAgICBESUNUQVRJTkcsXG4gICAgSURMRSxcbiAgICBTVEFSVElOR1xuICB9XG59ID0gQ29uc3RhbnRzO1xuXG5jbGFzcyBEaWN0YXRpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuaGFuZGxlRGljdGF0ZSA9IHRoaXMuaGFuZGxlRGljdGF0ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlRGljdGF0aW5nID0gdGhpcy5oYW5kbGVEaWN0YXRpbmcuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUVycm9yID0gdGhpcy5oYW5kbGVFcnJvci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlRGljdGF0ZSh7IHJlc3VsdDogeyB0cmFuc2NyaXB0IH0gPSB7fSB9KSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpcztcblxuICAgIHByb3BzLnNldERpY3RhdGVJbnRlcmltcyhbXSk7XG4gICAgcHJvcHMuc2V0RGljdGF0ZVN0YXRlKElETEUpO1xuICAgIHByb3BzLnN0b3BEaWN0YXRlKCk7XG5cbiAgICBpZiAodHJhbnNjcmlwdCkge1xuICAgICAgcHJvcHMuc2V0U2VuZEJveCh0cmFuc2NyaXB0KTtcbiAgICAgIHByb3BzLnN1Ym1pdFNlbmRCb3goJ3NwZWVjaCcpO1xuICAgICAgcHJvcHMuc3RhcnRTcGVha2luZ0FjdGl2aXR5KCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlRGljdGF0aW5nKHsgcmVzdWx0cyA9IFtdIH0pIHtcbiAgICBjb25zdCB7IHByb3BzIH0gPSB0aGlzO1xuICAgIGNvbnN0IGludGVyaW1zID0gcmVzdWx0cy5tYXAoKHsgdHJhbnNjcmlwdCB9KSA9PiB0cmFuc2NyaXB0KTtcblxuICAgIHByb3BzLnNldERpY3RhdGVJbnRlcmltcyhpbnRlcmltcyk7XG4gICAgcHJvcHMuc2V0RGljdGF0ZVN0YXRlKERJQ1RBVElORyk7XG5cbiAgICAvLyBUaGlzIGlzIGZvciB0d28gcHVycG9zZXM6XG4gICAgLy8gMS4gU2V0IHNlbmQgYm94IHdpbGwgYWxzbyB0cmlnZ2VyIHNlbmQgdHlwaW5nXG4gICAgLy8gMi4gSWYgdGhlIHVzZXIgY2FuY2VsbGVkIG91dCwgdGhlIGludGVyaW0gcmVzdWx0IHdpbGwgYmUgaW4gdGhlIHNlbmQgYm94IHNvIHRoZSB1c2VyIGNhbiB1cGRhdGUgaXQgYmVmb3JlIHNlbmRcbiAgICBwcm9wcy5zZXRTZW5kQm94KGludGVyaW1zLmpvaW4oJyAnKSk7XG4gIH1cblxuICBoYW5kbGVFcnJvcihldmVudCkge1xuICAgIGNvbnN0IHsgcHJvcHMgfSA9IHRoaXM7XG5cbiAgICBwcm9wcy5zZXREaWN0YXRlU3RhdGUoSURMRSk7XG4gICAgcHJvcHMuc3RvcERpY3RhdGUoKTtcblxuICAgIHByb3BzLm9uRXJyb3IgJiYgcHJvcHMub25FcnJvcihldmVudCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgcHJvcHM6IHtcbiAgICAgICAgZGljdGF0ZVN0YXRlLFxuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgIHdlYlNwZWVjaFBvbnlmaWxsXG4gICAgICB9LFxuICAgICAgaGFuZGxlRGljdGF0ZSxcbiAgICAgIGhhbmRsZURpY3RhdGluZyxcbiAgICAgIGhhbmRsZUVycm9yXG4gICAgfSA9IHRoaXM7XG5cbiAgICBjb25zdCB7IFNwZWVjaEdyYW1tYXJMaXN0LCBTcGVlY2hSZWNvZ25pdGlvbiB9ID0gd2ViU3BlZWNoUG9ueWZpbGwgfHwge307XG5cbiAgICByZXR1cm4gKFxuICAgICAgPERpY3RhdGVDb21wb3NlclxuICAgICAgICBsYW5nPXsgbGFuZ3VhZ2UgfVxuICAgICAgICBvbkRpY3RhdGU9eyBoYW5kbGVEaWN0YXRlIH1cbiAgICAgICAgb25FcnJvcj17IGhhbmRsZUVycm9yIH1cbiAgICAgICAgb25Qcm9ncmVzcz17IGhhbmRsZURpY3RhdGluZyB9XG4gICAgICAgIHNwZWVjaFJlY29nbml0aW9uPXsgU3BlZWNoUmVjb2duaXRpb24gfVxuICAgICAgICBzcGVlY2hHcmFtbWFyTGlzdD17IFNwZWVjaEdyYW1tYXJMaXN0IH1cbiAgICAgICAgc3RhcnRlZD17ICFkaXNhYmxlZCAmJiAoZGljdGF0ZVN0YXRlID09PSBTVEFSVElORyB8fCBkaWN0YXRlU3RhdGUgPT09IERJQ1RBVElORykgfVxuICAgICAgLz5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3RUb1dlYkNoYXQoXG4gICh7XG4gICAgZGljdGF0ZVN0YXRlLFxuICAgIGRpc2FibGVkLFxuICAgIGxhbmd1YWdlLFxuICAgIHNldERpY3RhdGVJbnRlcmltcyxcbiAgICBzZXREaWN0YXRlU3RhdGUsXG4gICAgc2V0U2VuZEJveCxcbiAgICBzdGFydFNwZWFraW5nQWN0aXZpdHksXG4gICAgc3RvcERpY3RhdGUsXG4gICAgc3VibWl0U2VuZEJveCxcbiAgICB3ZWJTcGVlY2hQb255ZmlsbFxuICB9KSA9PiAoe1xuICAgIGRpY3RhdGVTdGF0ZSxcbiAgICBkaXNhYmxlZCxcbiAgICBsYW5ndWFnZSxcbiAgICBzZXREaWN0YXRlSW50ZXJpbXMsXG4gICAgc2V0RGljdGF0ZVN0YXRlLFxuICAgIHNldFNlbmRCb3gsXG4gICAgc3RhcnRTcGVha2luZ0FjdGl2aXR5LFxuICAgIHN0b3BEaWN0YXRlLFxuICAgIHN1Ym1pdFNlbmRCb3gsXG4gICAgd2ViU3BlZWNoUG9ueWZpbGxcbiAgfSlcbikoRGljdGF0aW9uKVxuIl19