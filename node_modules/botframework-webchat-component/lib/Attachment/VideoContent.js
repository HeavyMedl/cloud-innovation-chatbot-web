"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _HTMLVideoContent = _interopRequireDefault(require("./HTMLVideoContent"));

var _VimeoContent = _interopRequireDefault(require("./VimeoContent"));

var _YouTubeContent = _interopRequireDefault(require("./YouTubeContent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var YOUTUBE_DOMAIN = "youtube.com";
var YOUTUBE_WWW_DOMAIN = "www.youtube.com";
var YOUTUBE_SHORT_DOMAIN = "youtu.be";
var YOUTUBE_WWW_SHORT_DOMAIN = "www.youtu.be";
var VIMEO_DOMAIN = "vimeo.com";
var VIMEO_WWW_DOMAIN = "www.vimeo.com"; // This is a workaround
// - Today, there is no good URL polyfill for older browser
// - Instead of writing a URL parser, for older browser, we will use this <a href> trick to parse the URL

function parseURL(url) {
  var urlLike;

  if (typeof URL === 'function') {
    urlLike = new URL(url);
  } else {
    urlLike = document.createElement('a');
    urlLike.setAttribute('href', url);
  }

  var _urlLike = urlLike,
      hostname = _urlLike.hostname,
      pathname = _urlLike.pathname,
      search = _urlLike.search;
  return {
    hostname: hostname,
    pathname: pathname,
    search: search
  };
}

var _default = function _default(_ref) {
  var alt = _ref.alt,
      autoPlay = _ref.autoPlay,
      loop = _ref.loop,
      poster = _ref.poster,
      src = _ref.src;

  var _parseURL = parseURL(src),
      hostname = _parseURL.hostname,
      pathname = _parseURL.pathname,
      search = _parseURL.search;

  var lastSegment = pathname.split('/').pop();
  var searchParams = new URLSearchParams(search);

  switch (hostname) {
    case VIMEO_DOMAIN:
    case VIMEO_WWW_DOMAIN:
      return _react.default.createElement(_VimeoContent.default, {
        alt: alt,
        autoPlay: autoPlay,
        embedID: lastSegment,
        loop: loop
      });

    case YOUTUBE_DOMAIN:
    case YOUTUBE_WWW_DOMAIN:
      return _react.default.createElement(_YouTubeContent.default, {
        alt: alt,
        autoPlay: autoPlay,
        embedID: searchParams.get('v'),
        loop: loop
      });

    case YOUTUBE_SHORT_DOMAIN:
    case YOUTUBE_WWW_SHORT_DOMAIN:
      return _react.default.createElement(_YouTubeContent.default, {
        alt: alt,
        autoPlay: autoPlay,
        embedID: lastSegment,
        loop: loop
      });

    default:
      return _react.default.createElement(_HTMLVideoContent.default, {
        alt: alt,
        autoPlay: autoPlay,
        loop: loop,
        poster: poster,
        src: src
      });
  }
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L1ZpZGVvQ29udGVudC5qcyJdLCJuYW1lcyI6WyJZT1VUVUJFX0RPTUFJTiIsIllPVVRVQkVfV1dXX0RPTUFJTiIsIllPVVRVQkVfU0hPUlRfRE9NQUlOIiwiWU9VVFVCRV9XV1dfU0hPUlRfRE9NQUlOIiwiVklNRU9fRE9NQUlOIiwiVklNRU9fV1dXX0RPTUFJTiIsInBhcnNlVVJMIiwidXJsIiwidXJsTGlrZSIsIlVSTCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImhvc3RuYW1lIiwicGF0aG5hbWUiLCJzZWFyY2giLCJhbHQiLCJhdXRvUGxheSIsImxvb3AiLCJwb3N0ZXIiLCJzcmMiLCJsYXN0U2VnbWVudCIsInNwbGl0IiwicG9wIiwic2VhcmNoUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxjQUFjLEdBQUcsYUFBdkI7QUFDQSxJQUFNQyxrQkFBa0IsR0FBRyxpQkFBM0I7QUFDQSxJQUFNQyxvQkFBb0IsR0FBRyxVQUE3QjtBQUNBLElBQU1DLHdCQUF3QixHQUFHLGNBQWpDO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLFdBQXJCO0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsZUFBekIsQyxDQUVBO0FBQ0E7QUFDQTs7QUFDQSxTQUFTQyxRQUFULENBQWtCQyxHQUFsQixFQUF1QjtBQUNyQixNQUFJQyxPQUFKOztBQUVBLE1BQUksT0FBT0MsR0FBUCxLQUFlLFVBQW5CLEVBQStCO0FBQzdCRCxJQUFBQSxPQUFPLEdBQUcsSUFBSUMsR0FBSixDQUFRRixHQUFSLENBQVY7QUFDRCxHQUZELE1BRU87QUFDTEMsSUFBQUEsT0FBTyxHQUFHRSxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsR0FBdkIsQ0FBVjtBQUNBSCxJQUFBQSxPQUFPLENBQUNJLFlBQVIsQ0FBcUIsTUFBckIsRUFBNkJMLEdBQTdCO0FBQ0Q7O0FBUm9CLGlCQVVrQkMsT0FWbEI7QUFBQSxNQVViSyxRQVZhLFlBVWJBLFFBVmE7QUFBQSxNQVVIQyxRQVZHLFlBVUhBLFFBVkc7QUFBQSxNQVVPQyxNQVZQLFlBVU9BLE1BVlA7QUFZckIsU0FBTztBQUFFRixJQUFBQSxRQUFRLEVBQVJBLFFBQUY7QUFBWUMsSUFBQUEsUUFBUSxFQUFSQSxRQUFaO0FBQXNCQyxJQUFBQSxNQUFNLEVBQU5BO0FBQXRCLEdBQVA7QUFDRDs7ZUFFYyx3QkFBMEM7QUFBQSxNQUF2Q0MsR0FBdUMsUUFBdkNBLEdBQXVDO0FBQUEsTUFBbENDLFFBQWtDLFFBQWxDQSxRQUFrQztBQUFBLE1BQXhCQyxJQUF3QixRQUF4QkEsSUFBd0I7QUFBQSxNQUFsQkMsTUFBa0IsUUFBbEJBLE1BQWtCO0FBQUEsTUFBVkMsR0FBVSxRQUFWQSxHQUFVOztBQUFBLGtCQUNoQmQsUUFBUSxDQUFDYyxHQUFELENBRFE7QUFBQSxNQUMvQ1AsUUFEK0MsYUFDL0NBLFFBRCtDO0FBQUEsTUFDckNDLFFBRHFDLGFBQ3JDQSxRQURxQztBQUFBLE1BQzNCQyxNQUQyQixhQUMzQkEsTUFEMkI7O0FBRXZELE1BQU1NLFdBQVcsR0FBR1AsUUFBUSxDQUFDUSxLQUFULENBQWUsR0FBZixFQUFvQkMsR0FBcEIsRUFBcEI7QUFDQSxNQUFNQyxZQUFZLEdBQUcsSUFBSUMsZUFBSixDQUFvQlYsTUFBcEIsQ0FBckI7O0FBRUEsVUFBUUYsUUFBUjtBQUNFLFNBQUtULFlBQUw7QUFDQSxTQUFLQyxnQkFBTDtBQUNFLGFBQ0UsNkJBQUMscUJBQUQ7QUFDRSxRQUFBLEdBQUcsRUFBR1csR0FEUjtBQUVFLFFBQUEsUUFBUSxFQUFHQyxRQUZiO0FBR0UsUUFBQSxPQUFPLEVBQUdJLFdBSFo7QUFJRSxRQUFBLElBQUksRUFBR0g7QUFKVCxRQURGOztBQVNGLFNBQUtsQixjQUFMO0FBQ0EsU0FBS0Msa0JBQUw7QUFDRSxhQUNFLDZCQUFDLHVCQUFEO0FBQ0UsUUFBQSxHQUFHLEVBQUdlLEdBRFI7QUFFRSxRQUFBLFFBQVEsRUFBR0MsUUFGYjtBQUdFLFFBQUEsT0FBTyxFQUFHTyxZQUFZLENBQUNFLEdBQWIsQ0FBaUIsR0FBakIsQ0FIWjtBQUlFLFFBQUEsSUFBSSxFQUFHUjtBQUpULFFBREY7O0FBU0YsU0FBS2hCLG9CQUFMO0FBQ0EsU0FBS0Msd0JBQUw7QUFDRSxhQUNFLDZCQUFDLHVCQUFEO0FBQ0UsUUFBQSxHQUFHLEVBQUdhLEdBRFI7QUFFRSxRQUFBLFFBQVEsRUFBR0MsUUFGYjtBQUdFLFFBQUEsT0FBTyxFQUFHSSxXQUhaO0FBSUUsUUFBQSxJQUFJLEVBQUdIO0FBSlQsUUFERjs7QUFTRjtBQUNFLGFBQ0UsNkJBQUMseUJBQUQ7QUFDRSxRQUFBLEdBQUcsRUFBR0YsR0FEUjtBQUVFLFFBQUEsUUFBUSxFQUFHQyxRQUZiO0FBR0UsUUFBQSxJQUFJLEVBQUdDLElBSFQ7QUFJRSxRQUFBLE1BQU0sRUFBR0MsTUFKWDtBQUtFLFFBQUEsR0FBRyxFQUFHQztBQUxSLFFBREY7QUFuQ0o7QUE2Q0QsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBIVE1MVmlkZW9Db250ZW50IGZyb20gJy4vSFRNTFZpZGVvQ29udGVudCc7XG5pbXBvcnQgVmltZW9Db250ZW50IGZyb20gJy4vVmltZW9Db250ZW50JztcbmltcG9ydCBZb3VUdWJlQ29udGVudCBmcm9tICcuL1lvdVR1YmVDb250ZW50JztcblxuY29uc3QgWU9VVFVCRV9ET01BSU4gPSBcInlvdXR1YmUuY29tXCI7XG5jb25zdCBZT1VUVUJFX1dXV19ET01BSU4gPSBcInd3dy55b3V0dWJlLmNvbVwiO1xuY29uc3QgWU9VVFVCRV9TSE9SVF9ET01BSU4gPSBcInlvdXR1LmJlXCI7XG5jb25zdCBZT1VUVUJFX1dXV19TSE9SVF9ET01BSU4gPSBcInd3dy55b3V0dS5iZVwiO1xuY29uc3QgVklNRU9fRE9NQUlOID0gXCJ2aW1lby5jb21cIjtcbmNvbnN0IFZJTUVPX1dXV19ET01BSU4gPSBcInd3dy52aW1lby5jb21cIjtcblxuLy8gVGhpcyBpcyBhIHdvcmthcm91bmRcbi8vIC0gVG9kYXksIHRoZXJlIGlzIG5vIGdvb2QgVVJMIHBvbHlmaWxsIGZvciBvbGRlciBicm93c2VyXG4vLyAtIEluc3RlYWQgb2Ygd3JpdGluZyBhIFVSTCBwYXJzZXIsIGZvciBvbGRlciBicm93c2VyLCB3ZSB3aWxsIHVzZSB0aGlzIDxhIGhyZWY+IHRyaWNrIHRvIHBhcnNlIHRoZSBVUkxcbmZ1bmN0aW9uIHBhcnNlVVJMKHVybCkge1xuICBsZXQgdXJsTGlrZTtcblxuICBpZiAodHlwZW9mIFVSTCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHVybExpa2UgPSBuZXcgVVJMKHVybCk7XG4gIH0gZWxzZSB7XG4gICAgdXJsTGlrZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICB1cmxMaWtlLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XG4gIH1cblxuICBjb25zdCB7IGhvc3RuYW1lLCBwYXRobmFtZSwgc2VhcmNoIH0gPSB1cmxMaWtlO1xuXG4gIHJldHVybiB7IGhvc3RuYW1lLCBwYXRobmFtZSwgc2VhcmNoIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0ICh7IGFsdCwgYXV0b1BsYXksIGxvb3AsIHBvc3Rlciwgc3JjIH0pID0+IHtcbiAgY29uc3QgeyBob3N0bmFtZSwgcGF0aG5hbWUsIHNlYXJjaCB9ID0gcGFyc2VVUkwoc3JjKTtcbiAgY29uc3QgbGFzdFNlZ21lbnQgPSBwYXRobmFtZS5zcGxpdCgnLycpLnBvcCgpO1xuICBjb25zdCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHNlYXJjaCk7XG5cbiAgc3dpdGNoIChob3N0bmFtZSkge1xuICAgIGNhc2UgVklNRU9fRE9NQUlOOlxuICAgIGNhc2UgVklNRU9fV1dXX0RPTUFJTjpcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxWaW1lb0NvbnRlbnRcbiAgICAgICAgICBhbHQ9eyBhbHQgfVxuICAgICAgICAgIGF1dG9QbGF5PXsgYXV0b1BsYXkgfVxuICAgICAgICAgIGVtYmVkSUQ9eyBsYXN0U2VnbWVudCB9XG4gICAgICAgICAgbG9vcD17IGxvb3AgfVxuICAgICAgICAvPlxuICAgICAgKTtcblxuICAgIGNhc2UgWU9VVFVCRV9ET01BSU46XG4gICAgY2FzZSBZT1VUVUJFX1dXV19ET01BSU46XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8WW91VHViZUNvbnRlbnRcbiAgICAgICAgICBhbHQ9eyBhbHQgfVxuICAgICAgICAgIGF1dG9QbGF5PXsgYXV0b1BsYXkgfVxuICAgICAgICAgIGVtYmVkSUQ9eyBzZWFyY2hQYXJhbXMuZ2V0KCd2JykgfVxuICAgICAgICAgIGxvb3A9eyBsb29wIH1cbiAgICAgICAgLz5cbiAgICAgICk7XG5cbiAgICBjYXNlIFlPVVRVQkVfU0hPUlRfRE9NQUlOOlxuICAgIGNhc2UgWU9VVFVCRV9XV1dfU0hPUlRfRE9NQUlOOlxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFlvdVR1YmVDb250ZW50XG4gICAgICAgICAgYWx0PXsgYWx0IH1cbiAgICAgICAgICBhdXRvUGxheT17IGF1dG9QbGF5IH1cbiAgICAgICAgICBlbWJlZElEPXsgbGFzdFNlZ21lbnQgfVxuICAgICAgICAgIGxvb3A9eyBsb29wIH1cbiAgICAgICAgLz5cbiAgICAgICk7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEhUTUxWaWRlb0NvbnRlbnRcbiAgICAgICAgICBhbHQ9eyBhbHQgfVxuICAgICAgICAgIGF1dG9QbGF5PXsgYXV0b1BsYXkgfVxuICAgICAgICAgIGxvb3A9eyBsb29wIH1cbiAgICAgICAgICBwb3N0ZXI9eyBwb3N0ZXIgfVxuICAgICAgICAgIHNyYz17IHNyYyB9XG4gICAgICAgIC8+XG4gICAgICApO1xuICB9XG59XG4iXX0=